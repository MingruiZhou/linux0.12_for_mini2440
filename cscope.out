cscope 15 $HOME/linux-0.12 -q 0000005011 0000473905
	@fs/bitmap.c

8 
	~<°rög.h
>

10 
	~<löux/sched.h
>

11 
	~<löux/kî√l.h
>

13 
	#˛ór_block
(
addr
) \

14 
	`__asm__
("cld\n\t" \

17 ::"a" (0),"c" (
BLOCK_SIZE
/4),"D" ((Ë(
addr
)):"cx","di")

	)

19 
	#£t_bô
(
ƒ
,
addr
) ({\

20 
ªs
 
	`__asm__
("ax"); \

21 
__asm__
 
	`__vﬁ©ûe__
("btsl %2,%3\n\tsetb %%al": \

22 "˜" (
ªs
):"0" (0),"r" (
ƒ
),"m" (*(
addr
))); \

23 
ªs
;})

	)

25 
	#˛ór_bô
(
ƒ
,
addr
) ({\

26 
ªs
 
	`__asm__
("ax"); \

27 
__asm__
 
	`__vﬁ©ûe__
("btrl %2,%3\n\tsetnb %%al": \

28 "˜" (
ªs
):"0" (0),"r" (
ƒ
),"m" (*(
addr
))); \

29 
ªs
;})

	)

31 
	#föd_fú°_zîo
(
addr
) ({ \

32 
__ªs
; \

33 
	`__asm__
("cld\n" \

44 :"=c" (
__ªs
):"c" (0),"S" (
addr
):"ax","dx","si"); \

45 
__ªs
;})

	)

47 
	$‰ì_block
(
dev
, 
block
)

49 
su≥r_block
 * 
sb
;

50 
buf„r_hód
 * 
bh
;

52 i‡(!(
sb
 = 
	`gë_su≥r
(
dev
)))

53 
	`∑nic
("tryingÅo free block onÇonexistent device");

54 i‡(
block
 < 
sb
->
s_fú°d©az⁄e
 || block >sb->
s_nz⁄es
)

55 
	`∑nic
("tryingÅo free blockÇot in datazone");

56 
bh
 = 
	`gë_hash_èbÀ
(
dev
,
block
);

57 i‡(
bh
) {

58 i‡(
bh
->
b_cou¡
 > 1) {

59 
	`bªl£
(
bh
);

62 
bh
->
b_dút
=0;

63 
bh
->
b_u±od©e
=0;

64 i‡(
bh
->
b_cou¡
)

65 
	`bªl£
(
bh
);

67 
block
 -
sb
->
s_fú°d©az⁄e
 - 1 ;

68 i‡(
	`˛ór_bô
(
block
&8191,
sb
->
s_zm≠
[block/8192]->
b_d©a
)) {

69 
	`¥ötk
("block (%04x:%dË",
dev
,
block
+
sb
->
s_fú°d©az⁄e
-1);

70 
	`¥ötk
("free_block: bitálready cleared\n");

72 
sb
->
s_zm≠
[
block
/8192]->
b_dút
 = 1;

74 
	}
}

76 
	$√w_block
(
dev
)

78 
buf„r_hód
 * 
bh
;

79 
su≥r_block
 * 
sb
;

80 
i
,
j
;

82 i‡(!(
sb
 = 
	`gë_su≥r
(
dev
)))

83 
	`∑nic
("tryingÅo getÇew block fromÇonexistant device");

84 
j
 = 8192;

85 
i
=0 ; i<8 ; i++)

86 i‡(
bh
=
sb
->
s_zm≠
[
i
])

87 i‡((
j
=
	`föd_fú°_zîo
(
bh
->
b_d©a
))<8192)

89 i‡(
i
>=8 || !
bh
 || 
j
>=8192)

91 i‡(
	`£t_bô
(
j
,
bh
->
b_d©a
))

92 
	`∑nic
("new_block: bitálready set");

93 
bh
->
b_dút
 = 1;

94 
j
 +
i
*8192 + 
sb
->
s_fú°d©az⁄e
-1;

95 i‡(
j
 >
sb
->
s_nz⁄es
)

97 i‡(!(
bh
=
	`gëblk
(
dev
,
j
)))

98 
	`∑nic
("new_block: cannot get block");

99 i‡(
bh
->
b_cou¡
 != 1)

100 
	`∑nic
("new block: count is != 1");

101 
	`˛ór_block
(
bh
->
b_d©a
);

102 
bh
->
b_u±od©e
 = 1;

103 
bh
->
b_dút
 = 1;

104 
	`bªl£
(
bh
);

105  
j
;

106 
	}
}

108 
	$‰ì_öode
(
m_öode
 * 
öode
)

110 
su≥r_block
 * 
sb
;

111 
buf„r_hód
 * 
bh
;

113 i‡(!
öode
)

115 i‡(!
öode
->
i_dev
) {

116 
	`mem£t
(
öode
,0,(*inode));

119 i‡(
öode
->
i_cou¡
>1) {

120 
	`¥ötk
("åyögÅÿ‰ì inodêwôh cou¡=%d\n",
öode
->
i_cou¡
);

121 
	`∑nic
("free_inode");

123 i‡(
öode
->
i_∆öks
)

124 
	`∑nic
("tryingÅo free inode withÜinks");

125 i‡(!(
sb
 = 
	`gë_su≥r
(
öode
->
i_dev
)))

126 
	`∑nic
("tryingÅo free inode onÇonexistent device");

127 i‡(
öode
->
i_num
 < 1 || inode->i_num > 
sb
->
s_nöodes
)

128 
	`∑nic
("tryingÅo free inode 0 orÇonexistant inode");

129 i‡(!(
bh
=
sb
->
s_im≠
[
öode
->
i_num
>>13]))

130 
	`∑nic
("nonexistent imap in superblock");

131 i‡(
	`˛ór_bô
(
öode
->
i_num
&8191,
bh
->
b_d©a
))

132 
	`¥ötk
("free_inode: bitálready cleared.\n\r");

133 
bh
->
b_dút
 = 1;

134 
	`mem£t
(
öode
,0,(*inode));

135 
	}
}

137 
m_öode
 * 
	$√w_öode
(
dev
)

139 
m_öode
 * 
öode
;

140 
su≥r_block
 * 
sb
;

141 
buf„r_hód
 * 
bh
;

142 
i
,
j
;

144 i‡(!(
öode
=
	`gë_em±y_öode
()))

145  
NULL
;

146 i‡(!(
sb
 = 
	`gë_su≥r
(
dev
)))

147 
	`∑nic
("new_inode with unknown device");

148 
j
 = 8192;

149 
i
=0 ; i<8 ; i++)

150 i‡(
bh
=
sb
->
s_im≠
[
i
])

151 i‡((
j
=
	`föd_fú°_zîo
(
bh
->
b_d©a
))<8192)

153 i‡(!
bh
 || 
j
 >8192 || j+
i
*8192 > 
sb
->
s_nöodes
) {

154 
	`ùut
(
öode
);

155  
NULL
;

157 i‡(
	`£t_bô
(
j
,
bh
->
b_d©a
))

158 
	`∑nic
("new_inode: bitálready set");

159 
bh
->
b_dút
 = 1;

160 
öode
->
i_cou¡
=1;

161 
öode
->
i_∆öks
=1;

162 
öode
->
i_dev
=
dev
;

163 
öode
->
i_uid
=
cuºít
->
euid
;

164 
öode
->
i_gid
=
cuºít
->
egid
;

165 
öode
->
i_dút
=1;

166 
öode
->
i_num
 = 
j
 + 
i
*8192;

167 
öode
->
i_mtime
 = inode->
i_©ime
 = inode->
i_˘ime
 = 
CURRENT_TIME
;

168  
öode
;

169 
	}
}

	@fs/block_dev.c

7 
	~<î∫o.h
>

9 
	~<löux/sched.h
>

10 
	~<löux/kî√l.h
>

11 
	~<asm/£gmít.h
>

12 
	~<asm/sy°em.h
>

14 *
blk_size
[];

16 
	$block_wrôe
(
dev
, * 
pos
, * 
buf
, 
cou¡
)

18 
block
 = *
pos
 >> 
BLOCK_SIZE_BITS
;

19 
off£t
 = *
pos
 & (
BLOCK_SIZE
-1);

20 
ch¨s
;

21 
wrôãn
 = 0;

22 
size
;

23 
buf„r_hód
 * 
bh
;

24 * 
p
;

26 i‡(
blk_size
[
	`MAJOR
(
dev
)])

27 
size
 = 
blk_size
[
	`MAJOR
(
dev
)][
	`MINOR
(dev)];

29 
size
 = 0x7fffffff;

30 
cou¡
>0) {

31 i‡(
block
 >
size
)

32  
wrôãn
?wrôãn:-
EIO
;

33 
ch¨s
 = 
BLOCK_SIZE
 - 
off£t
;

34 i‡(
ch¨s
 > 
cou¡
)

35 
ch¨s
=
cou¡
;

36 i‡(
ch¨s
 =
BLOCK_SIZE
)

37 
bh
 = 
	`gëblk
(
dev
,
block
);

39 
bh
 = 
	`bªada
(
dev
,
block
,block+1,block+2,-1);

40 
block
++;

41 i‡(!
bh
)

42  
wrôãn
?wrôãn:-
EIO
;

43 
p
 = 
off£t
 + 
bh
->
b_d©a
;

44 
off£t
 = 0;

45 *
pos
 +
ch¨s
;

46 
wrôãn
 +
ch¨s
;

47 
cou¡
 -
ch¨s
;

48 
ch¨s
-->0)

49 *(
p
++Ë
	`gë_fs_byã
(
buf
++);

50 
bh
->
b_dút
 = 1;

51 
	`bªl£
(
bh
);

53  
wrôãn
;

54 
	}
}

56 
	$block_ªad
(
dev
, * 
pos
, * 
buf
, 
cou¡
)

58 
block
 = *
pos
 >> 
BLOCK_SIZE_BITS
;

59 
off£t
 = *
pos
 & (
BLOCK_SIZE
-1);

60 
ch¨s
;

61 
size
;

62 
ªad
 = 0;

63 
buf„r_hód
 * 
bh
;

64 * 
p
;

66 i‡(
blk_size
[
	`MAJOR
(
dev
)])

67 
size
 = 
blk_size
[
	`MAJOR
(
dev
)][
	`MINOR
(dev)];

69 
size
 = 0x7fffffff;

70 
cou¡
>0) {

71 i‡(
block
 >
size
)

72  
ªad
?ªad:-
EIO
;

73 
ch¨s
 = 
BLOCK_SIZE
-
off£t
;

74 i‡(
ch¨s
 > 
cou¡
)

75 
ch¨s
 = 
cou¡
;

76 i‡(!(
bh
 = 
	`bªada
(
dev
,
block
,block+1,block+2,-1)))

77  
ªad
?ªad:-
EIO
;

78 
block
++;

79 
p
 = 
off£t
 + 
bh
->
b_d©a
;

80 
off£t
 = 0;

81 *
pos
 +
ch¨s
;

82 
ªad
 +
ch¨s
;

83 
cou¡
 -
ch¨s
;

84 
ch¨s
-->0)

85 
	`put_fs_byã
(*(
p
++),
buf
++);

86 
	`bªl£
(
bh
);

88  
ªad
;

89 
	}
}

	@fs/buffer.c

21 
	~<°d¨g.h
>

23 
	~<löux/c⁄fig.h
>

24 
	~<löux/sched.h
>

25 
	~<löux/kî√l.h
>

26 
	~<asm/sy°em.h
>

27 
	~<asm/io.h
>

29 
íd
;

30 
buf„r_hód
 * 
	g°¨t_buf„r
 = (buf„r_hód *Ë&
íd
;

31 
buf„r_hód
 * 
	ghash_èbÀ
[
NR_HASH
];

32 
buf„r_hód
 * 
	g‰ì_li°
;

33 
èsk_°ru˘
 * 
	gbuf„r_waô
 = 
NULL
;

34 
	gNR_BUFFERS
 = 0;

36 
ölöe
 
	$waô_⁄_buf„r
(
buf„r_hód
 * 
bh
)

38 
	`˛i
();

39 
bh
->
b_lock
)

40 
	`¶ìp_⁄
(&
bh
->
b_waô
);

41 
	`°i
();

42 
	}
}

44 
	$sys_sync
()

46 
i
;

47 
buf„r_hód
 * 
bh
;

49 
	`sync_öodes
();

50 
bh
 = 
°¨t_buf„r
;

51 
i
=0 ; i<
NR_BUFFERS
 ; i++,
bh
++) {

52 
	`waô_⁄_buf„r
(
bh
);

53 i‡(
bh
->
b_dút
)

54 
	`Œ_rw_block
(
WRITE
,
bh
);

57 
	}
}

59 
	$sync_dev
(
dev
)

61 
i
;

62 
buf„r_hód
 * 
bh
;

64 
bh
 = 
°¨t_buf„r
;

65 
i
=0 ; i<
NR_BUFFERS
 ; i++,
bh
++) {

66 i‡(
bh
->
b_dev
 !
dev
)

68 
	`waô_⁄_buf„r
(
bh
);

69 i‡(
bh
->
b_dev
 =
dev
 && bh->
b_dút
)

70 
	`Œ_rw_block
(
WRITE
,
bh
);

72 
	`sync_öodes
();

73 
bh
 = 
°¨t_buf„r
;

74 
i
=0 ; i<
NR_BUFFERS
 ; i++,
bh
++) {

75 i‡(
bh
->
b_dev
 !
dev
)

77 
	`waô_⁄_buf„r
(
bh
);

78 i‡(
bh
->
b_dev
 =
dev
 && bh->
b_dút
)

79 
	`Œ_rw_block
(
WRITE
,
bh
);

82 
	}
}

84 
ölöe
 
	$övÆid©e_buf„rs
(
dev
)

86 
i
;

87 
buf„r_hód
 * 
bh
;

89 
bh
 = 
°¨t_buf„r
;

90 
i
=0 ; i<
NR_BUFFERS
 ; i++,
bh
++) {

91 i‡(
bh
->
b_dev
 !
dev
)

93 
	`waô_⁄_buf„r
(
bh
);

94 i‡(
bh
->
b_dev
 =
dev
)

95 
bh
->
b_u±od©e
 = bh->
b_dút
 = 0;

97 
	}
}

113 
	$check_disk_ch™ge
(
dev
)

115 
i
;

117 i‡(
	`MAJOR
(
dev
) != 2)

119 i‡(!
	`Ê›py_ch™ge
(
dev
 & 0x03))

121 
i
=0 ; i<
NR_SUPER
 ; i++)

122 i‡(
su≥r_block
[
i
].
s_dev
 =
dev
)

123 
	`put_su≥r
(
su≥r_block
[
i
].
s_dev
);

124 
	`övÆid©e_öodes
(
dev
);

125 
	`övÆid©e_buf„rs
(
dev
);

126 
	}
}

128 
	#_hash‚
(
dev
,
block
Ë((()(dev^block))%
NR_HASH
)

	)

129 
	#hash
(
dev
,
block
Ë
hash_èbÀ
[
	`_hash‚
(dev,block)]

	)

131 
ölöe
 
	$ªmove_‰om_queues
(
buf„r_hód
 * 
bh
)

134 i‡(
bh
->
b_√xt
)

135 
bh
->
b_√xt
->
b_¥ev
 = bh->b_prev;

136 i‡(
bh
->
b_¥ev
)

137 
bh
->
b_¥ev
->
b_√xt
 = bh->b_next;

138 i‡(
	`hash
(
bh
->
b_dev
,bh->
b_blockƒ
) == bh)

139 
	`hash
(
bh
->
b_dev
,bh->
b_blockƒ
Ëbh->
b_√xt
;

141 i‡(!(
bh
->
b_¥ev_‰ì
Ë|| !(bh->
b_√xt_‰ì
))

142 
	`∑nic
("Free blockÜist corrupted");

143 
bh
->
b_¥ev_‰ì
->
b_√xt_‰ì
 = bh->b_next_free;

144 
bh
->
b_√xt_‰ì
->
b_¥ev_‰ì
 = bh->b_prev_free;

145 i‡(
‰ì_li°
 =
bh
)

146 
‰ì_li°
 = 
bh
->
b_√xt_‰ì
;

147 
	}
}

149 
ölöe
 
	$ö£π_öto_queues
(
buf„r_hód
 * 
bh
)

152 
bh
->
b_√xt_‰ì
 = 
‰ì_li°
;

153 
bh
->
b_¥ev_‰ì
 = 
‰ì_li°
->b_prev_free;

154 
‰ì_li°
->
b_¥ev_‰ì
->
b_√xt_‰ì
 = 
bh
;

155 
‰ì_li°
->
b_¥ev_‰ì
 = 
bh
;

157 
bh
->
b_¥ev
 = 
NULL
;

158 
bh
->
b_√xt
 = 
NULL
;

159 i‡(!
bh
->
b_dev
)

161 
bh
->
b_√xt
 = 
	`hash
(bh->
b_dev
,bh->
b_blockƒ
);

162 
	`hash
(
bh
->
b_dev
,bh->
b_blockƒ
) = bh;

163 
bh
->
b_√xt
->
b_¥ev
 = bh;

164 
	}
}

166 
buf„r_hód
 * 
	$föd_buf„r
(
dev
, 
block
)

168 
buf„r_hód
 * 
tmp
;

170 
tmp
 = 
	`hash
(
dev
,
block
Ë;Åm∞!
NULL
 ;Åm∞tmp->
b_√xt
)

171 i‡(
tmp
->
b_dev
==
dev
 &&Åmp->
b_blockƒ
==
block
)

172  
tmp
;

173  
NULL
;

174 
	}
}

183 
buf„r_hód
 * 
	$gë_hash_èbÀ
(
dev
, 
block
)

185 
buf„r_hód
 * 
bh
;

188 i‡(!(
bh
=
	`föd_buf„r
(
dev
,
block
)))

189  
NULL
;

190 
bh
->
b_cou¡
++;

191 
	`waô_⁄_buf„r
(
bh
);

192 i‡(
bh
->
b_dev
 =
dev
 && bh->
b_blockƒ
 =
block
)

193  
bh
;

194 
bh
->
b_cou¡
--;

196 
	}
}

205 
	#BADNESS
(
bh
Ë(((bh)->
b_dút
<<1)+(bh)->
b_lock
)

	)

206 
buf„r_hód
 * 
	$gëblk
(
dev
,
block
)

208 
buf„r_hód
 * 
tmp
, * 
bh
;

210 
ª≥©
:

211 i‡(
bh
 = 
	`gë_hash_èbÀ
(
dev
,
block
))

212  
bh
;

213 
tmp
 = 
‰ì_li°
;

215 i‡(
tmp
->
b_cou¡
)

217 i‡(!
bh
 || 
	`BADNESS
(
tmp
)<BADNESS(bh)) {

218 
bh
 = 
tmp
;

219 i‡(!
	`BADNESS
(
tmp
))

223 } (
tmp
 =Åmp->
b_√xt_‰ì
Ë!
‰ì_li°
);

224 i‡(!
bh
) {

225 
	`¶ìp_⁄
(&
buf„r_waô
);

226 
ª≥©
;

228 
	`waô_⁄_buf„r
(
bh
);

229 i‡(
bh
->
b_cou¡
)

230 
ª≥©
;

231 
bh
->
b_dút
) {

232 
	`sync_dev
(
bh
->
b_dev
);

233 
	`waô_⁄_buf„r
(
bh
);

234 i‡(
bh
->
b_cou¡
)

235 
ª≥©
;

239 i‡(
	`föd_buf„r
(
dev
,
block
))

240 
ª≥©
;

243 
bh
->
b_cou¡
=1;

244 
bh
->
b_dút
=0;

245 
bh
->
b_u±od©e
=0;

246 
	`ªmove_‰om_queues
(
bh
);

247 
bh
->
b_dev
=
dev
;

248 
bh
->
b_blockƒ
=
block
;

249 
	`ö£π_öto_queues
(
bh
);

250  
bh
;

251 
	}
}

253 
	$bªl£
(
buf„r_hód
 * 
buf
)

255 i‡(!
buf
)

257 
	`waô_⁄_buf„r
(
buf
);

258 i‡(!(
buf
->
b_cou¡
--))

259 
	`∑nic
("TryingÅo free free buffer");

260 
	`wake_up
(&
buf„r_waô
);

261 
	}
}

267 
buf„r_hód
 * 
	$bªad
(
dev
,
block
)

269 
buf„r_hód
 * 
bh
;

271 i‡(!(
bh
=
	`gëblk
(
dev
,
block
)))

272 
	`∑nic
("bread: getblkÑeturned NULL\n");

273 i‡(
bh
->
b_u±od©e
)

274  
bh
;

275 
	`Œ_rw_block
(
READ
,
bh
);

276 
	`waô_⁄_buf„r
(
bh
);

277 i‡(
bh
->
b_u±od©e
)

278  
bh
;

279 
	`bªl£
(
bh
);

280  
NULL
;

281 
	}
}

283 
	#COPYBLK
(
‰om
,
to
) \

284 
	`__asm__
("cld\n\t" \

287 ::"c" (
BLOCK_SIZE
/4),"S" (
‰om
),"D" (
to
) \

288 :"cx","di","si")

	)

296 
	$bªad_∑ge
(
addªss
,
dev
,
b
[4])

298 
buf„r_hód
 * 
bh
[4];

299 
i
;

301 
i
=0 ; i<4 ; i++)

302 i‡(
b
[
i
]) {

303 i‡(
bh
[
i
] = 
	`gëblk
(
dev
,
b
[i]))

304 i‡(!
bh
[
i
]->
b_u±od©e
)

305 
	`Œ_rw_block
(
READ
,
bh
[
i
]);

307 
bh
[
i
] = 
NULL
;

308 
i
=0 ; i<4 ; i++,
addªss
 +
BLOCK_SIZE
)

309 i‡(
bh
[
i
]) {

310 
	`waô_⁄_buf„r
(
bh
[
i
]);

311 i‡(
bh
[
i
]->
b_u±od©e
)

312 
	`COPYBLK
((Ë
bh
[
i
]->
b_d©a
,
addªss
);

313 
	`bªl£
(
bh
[
i
]);

315 
	}
}

322 
buf„r_hód
 * 
	$bªada
(
dev
,
fú°
, ...)

324 
va_li°
 
¨gs
;

325 
buf„r_hód
 * 
bh
, *
tmp
;

327 
	`va_°¨t
(
¨gs
,
fú°
);

328 i‡(!(
bh
=
	`gëblk
(
dev
,
fú°
)))

329 
	`∑nic
("bread: getblkÑeturned NULL\n");

330 i‡(!
bh
->
b_u±od©e
)

331 
	`Œ_rw_block
(
READ
,
bh
);

332 (
fú°
=
	`va_¨g
(
¨gs
,))>=0) {

333 
tmp
=
	`gëblk
(
dev
,
fú°
);

334 i‡(
tmp
) {

335 i‡(!
tmp
->
b_u±od©e
)

336 
	`Œ_rw_block
(
READA
,
bh
);

337 
tmp
->
b_cou¡
--;

340 
	`va_íd
(
¨gs
);

341 
	`waô_⁄_buf„r
(
bh
);

342 i‡(
bh
->
b_u±od©e
)

343  
bh
;

344 
	`bªl£
(
bh
);

345  (
NULL
);

346 
	}
}

348 
	$buf„r_öô
(
buf„r_íd
)

350 
buf„r_hód
 * 
h
 = 
°¨t_buf„r
;

351 * 
b
;

352 
i
;

354 i‡(
buf„r_íd
 == 1<<20)

355 
b
 = (*) (640*1024);

357 
b
 = (*Ë
buf„r_íd
;

358  (
b
 -
BLOCK_SIZE
Ë>((*Ë(
h
+1)) ) {

359 
h
->
b_dev
 = 0;

360 
h
->
b_dút
 = 0;

361 
h
->
b_cou¡
 = 0;

362 
h
->
b_lock
 = 0;

363 
h
->
b_u±od©e
 = 0;

364 
h
->
b_waô
 = 
NULL
;

365 
h
->
b_√xt
 = 
NULL
;

366 
h
->
b_¥ev
 = 
NULL
;

367 
h
->
b_d©a
 = (*Ë
b
;

368 
h
->
b_¥ev_‰ì
 = h-1;

369 
h
->
b_√xt_‰ì
 = h+1;

370 
h
++;

371 
NR_BUFFERS
++;

372 i‡(
b
 == (*) 0x100000)

373 
b
 = (*) 0xA0000;

375 
h
--;

376 
‰ì_li°
 = 
°¨t_buf„r
;

377 
‰ì_li°
->
b_¥ev_‰ì
 = 
h
;

378 
h
->
b_√xt_‰ì
 = 
‰ì_li°
;

379 
i
=0;i<
NR_HASH
;i++)

380 
hash_èbÀ
[
i
]=
NULL
;

381 
	}
}

	@fs/char_dev.c

7 
	~<î∫o.h
>

8 
	~<sys/ty≥s.h
>

10 
	~<löux/sched.h
>

11 
	~<löux/kî√l.h
>

13 
	~<asm/£gmít.h
>

14 
	~<asm/io.h
>

16 
ây_ªad
(
mö‹
,* 
buf
,
cou¡
);

17 
ây_wrôe
(
mö‹
,* 
buf
,
cou¡
);

19 (*
¸w_±r
)(
	trw
,
	tmö‹
,* 
	tbuf
,
	tcou¡
,
	toff_t
 * 
	tpos
);

21 
	$rw_âyx
(
rw
,
mö‹
,* 
buf
,
cou¡
,
off_t
 * 
pos
)

23  ((
rw
==
READ
)?
	`ây_ªad
(
mö‹
,
buf
,
cou¡
):

24 
	`ây_wrôe
(
mö‹
,
buf
,
cou¡
));

25 
	}
}

27 
	$rw_ây
(
rw
,
mö‹
,* 
buf
,
cou¡
, 
off_t
 * 
pos
)

29 i‡(
cuºít
->
ây
<0)

30  -
EPERM
;

31  
	`rw_âyx
(
rw
,
cuºít
->
ây
,
buf
,
cou¡
,
pos
);

32 
	}
}

34 
	$rw_øm
(
rw
,* 
buf
, 
cou¡
, 
off_t
 *
pos
)

36  -
EIO
;

37 
	}
}

39 
	$rw_mem
(
rw
,* 
buf
, 
cou¡
, 
off_t
 * 
pos
)

41  -
EIO
;

42 
	}
}

44 
	$rw_kmem
(
rw
,* 
buf
, 
cou¡
, 
off_t
 * 
pos
)

46  -
EIO
;

47 
	}
}

49 
	$rw_p‹t
(
rw
,* 
buf
, 
cou¡
, 
off_t
 * 
pos
)

51 
i
=*
pos
;

53 
cou¡
-->0 && 
i
<65536) {

54 i‡(
rw
==
READ
)

55 
	`put_fs_byã
(
	`öb
(
i
),
buf
++);

57 
	`outb
(
	`gë_fs_byã
(
buf
++),
i
);

58 
i
++;

60 
i
 -*
pos
;

61 *
pos
 +
i
;

62  
i
;

63 
	}
}

65 
	$rw_mem‹y
(
rw
, 
mö‹
, * 
buf
, 
cou¡
, 
off_t
 * 
pos
)

67 
mö‹
) {

69  
	`rw_øm
(
rw
,
buf
,
cou¡
,
pos
);

71  
	`rw_mem
(
rw
,
buf
,
cou¡
,
pos
);

73  
	`rw_kmem
(
rw
,
buf
,
cou¡
,
pos
);

75  (
rw
==
READ
)?0:
cou¡
;

77  
	`rw_p‹t
(
rw
,
buf
,
cou¡
,
pos
);

79  -
EIO
;

81 
	}
}

83 
	#NRDEVS
 (( (
¸w_èbÀ
))/( (
¸w_±r
)))

	)

85 
¸w_±r
 
	g¸w_èbÀ
[]={

86 
NULL
,

87 
rw_mem‹y
,

88 
NULL
,

89 
NULL
,

90 
rw_âyx
,

91 
rw_ây
,

92 
NULL
,

93 
NULL
};

95 
	$rw_ch¨
(
rw
,
dev
, * 
buf
, 
cou¡
, 
off_t
 * 
pos
)

97 
¸w_±r
 
ˇŒ_addr
;

99 i‡(
	`MAJOR
(
dev
)>=
NRDEVS
)

100  -
ENODEV
;

101 i‡(!(
ˇŒ_addr
=
¸w_èbÀ
[
	`MAJOR
(
dev
)]))

102  -
ENODEV
;

103  
	`ˇŒ_addr
(
rw
,
	`MINOR
(
dev
),
buf
,
cou¡
,
pos
);

104 
	}
}

	@fs/exec.c

20 
	~<sig«l.h
>

21 
	~<î∫o.h
>

22 
	~<°rög.h
>

23 
	~<sys/°©.h
>

24 
	~<a.out.h
>

26 
	~<löux/fs.h
>

27 
	~<löux/sched.h
>

28 
	~<löux/kî√l.h
>

29 
	~<löux/mm.h
>

30 
	~<asm/£gmít.h
>

32 
sys_exô
(
exô_code
);

33 
sys_˛o£
(
fd
);

40 
	#MAX_ARG_PAGES
 32

	)

42 
	$sys_u£lib
(c⁄° * 
libøry
)

44 
m_öode
 * 
öode
;

45 
ba£
;

47 i‡(
	`gë_limô
(0x17Ë!
TASK_SIZE
)

48  -
EINVAL
;

49 i‡(
libøry
) {

50 i‡(!(
öode
=
	`«mei
(
libøry
)))

51  -
ENOENT
;

53 
öode
 = 
NULL
;

55 
	`ùut
(
cuºít
->
libøry
);

56 
cuºít
->
libøry
 = 
NULL
;

57 
ba£
 = 
	`gë_ba£
(
cuºít
->
ldt
[2]);

58 
ba£
 +
LIBRARY_OFFSET
;

59 
	`‰ì_∑ge_èbÀs
(
ba£
,
LIBRARY_SIZE
);

60 
cuºít
->
libøry
 = 
öode
;

62 
	}
}

69 * 
	$¸óã_èbÀs
(* 
p
,
¨gc
,
ívc
)

71 *
¨gv
,*
ívp
;

72 * 
•
;

74 
•
 = (*Ë(0xfffffff¯& (Ë
p
);

75 
•
 -
ívc
+1;

76 
ívp
 = 
•
;

77 
•
 -
¨gc
+1;

78 
¨gv
 = 
•
;

79 
	`put_fs_l⁄g
(()
ívp
,--
•
);

80 
	`put_fs_l⁄g
(()
¨gv
,--
•
);

81 
	`put_fs_l⁄g
(()
¨gc
,--
•
);

82 
¨gc
-->0) {

83 
	`put_fs_l⁄g
((Ë
p
,
¨gv
++);

84 
	`gë_fs_byã
(
p
++)) ;

86 
	`put_fs_l⁄g
(0,
¨gv
);

87 
ívc
-->0) {

88 
	`put_fs_l⁄g
((Ë
p
,
ívp
++);

89 
	`gë_fs_byã
(
p
++)) ;

91 
	`put_fs_l⁄g
(0,
ívp
);

92  
•
;

93 
	}
}

98 
	$cou¡
(** 
¨gv
)

100 
i
=0;

101 ** 
tmp
;

103 i‡(
tmp
 = 
¨gv
)

104 
	`gë_fs_l⁄g
((*Ë(
tmp
++)))

105 
i
++;

107  
i
;

108 
	}
}

127 
	$c›y_°rögs
(
¨gc
,** 
¨gv
,*
∑ge
,

128 
p
, 
‰om_kmem
)

130 *
tmp
, *
∑g
;

131 
Àn
, 
off£t
 = 0;

132 
ﬁd_fs
, 
√w_fs
;

134 i‡(!
p
)

136 
√w_fs
 = 
	`gë_ds
();

137 
ﬁd_fs
 = 
	`gë_fs
();

138 i‡(
‰om_kmem
==2)

139 
	`£t_fs
(
√w_fs
);

140 
¨gc
-- > 0) {

141 i‡(
‰om_kmem
 == 1)

142 
	`£t_fs
(
√w_fs
);

143 i‡(!(
tmp
 = (*)
	`gë_fs_l⁄g
(((*)
¨gv
)+
¨gc
)))

144 
	`∑nic
("argc is wrong");

145 i‡(
‰om_kmem
 == 1)

146 
	`£t_fs
(
ﬁd_fs
);

147 
Àn
=0;

149 
Àn
++;

150 } 
	`gë_fs_byã
(
tmp
++));

151 i‡(
p
-
Àn
 < 0) {

152 
	`£t_fs
(
ﬁd_fs
);

155 
Àn
) {

156 --
p
; --
tmp
; --
Àn
;

157 i‡(--
off£t
 < 0) {

158 
off£t
 = 
p
 % 
PAGE_SIZE
;

159 i‡(
‰om_kmem
==2)

160 
	`£t_fs
(
ﬁd_fs
);

161 i‡(!(
∑g
 = (*Ë
∑ge
[
p
/
PAGE_SIZE
]) &&

162 !(
∑g
 = (*Ë
∑ge
[
p
/
PAGE_SIZE
] =

163 (*Ë
	`gë_‰ì_∑ge
()))

165 i‡(
‰om_kmem
==2)

166 
	`£t_fs
(
√w_fs
);

169 *(
∑g
 + 
off£t
Ë
	`gë_fs_byã
(
tmp
);

172 i‡(
‰om_kmem
==2)

173 
	`£t_fs
(
ﬁd_fs
);

174  
p
;

175 
	}
}

177 
	$ch™ge_ldt
(
ãxt_size
,* 
∑ge
)

179 
code_limô
,
d©a_limô
,
code_ba£
,
d©a_ba£
;

180 
i
;

182 
code_limô
 = 
TASK_SIZE
;

183 
d©a_limô
 = 
TASK_SIZE
;

184 
code_ba£
 = 
	`gë_ba£
(
cuºít
->
ldt
[1]);

185 
d©a_ba£
 = 
code_ba£
;

186 
	`£t_ba£
(
cuºít
->
ldt
[1],
code_ba£
);

187 
	`£t_limô
(
cuºít
->
ldt
[1],
code_limô
);

188 
	`£t_ba£
(
cuºít
->
ldt
[2],
d©a_ba£
);

189 
	`£t_limô
(
cuºít
->
ldt
[2],
d©a_limô
);

191 
	`__asm__
("pushl $0x17\n\tpop %%fs"::);

192 
d©a_ba£
 +
d©a_limô
 - 
LIBRARY_SIZE
;

193 
i
=
MAX_ARG_PAGES
-1 ; i>=0 ; i--) {

194 
d©a_ba£
 -
PAGE_SIZE
;

195 i‡(
∑ge
[
i
])

196 
	`put_dúty_∑ge
(
∑ge
[
i
],
d©a_ba£
);

198  
d©a_limô
;

199 
	}
}

207 
	$do_execve
(* 
eù
,
tmp
,* 
fûíame
,

208 ** 
¨gv
, ** 
ívp
)

210 
m_öode
 * 
öode
;

211 
buf„r_hód
 * 
bh
;

212 
exec
 
ex
;

213 
∑ge
[
MAX_ARG_PAGES
];

214 
i
,
¨gc
,
ívc
;

215 
e_uid
, 
e_gid
;

216 
ªtvÆ
;

217 
sh_b™g
 = 0;

218 
p
=
PAGE_SIZE
*
MAX_ARG_PAGES
-4;

220 i‡((0xfff‡& 
eù
[1]) != 0x000f)

221 
	`∑nic
("execve called from supervisor mode");

222 
i
=0 ; i<
MAX_ARG_PAGES
 ; i++)

223 
∑ge
[
i
]=0;

224 i‡(!(
öode
=
	`«mei
(
fûíame
)))

225  -
ENOENT
;

226 
¨gc
 = 
	`cou¡
(
¨gv
);

227 
ívc
 = 
	`cou¡
(
ívp
);

229 
ª°¨t_öãΩ
:

230 i‡(!
	`S_ISREG
(
öode
->
i_mode
)) {

231 
ªtvÆ
 = -
EACCES
;

232 
exec_îr‹2
;

234 
i
 = 
öode
->
i_mode
;

235 
e_uid
 = (
i
 & 
S_ISUID
Ë? 
öode
->
i_uid
 : 
cuºít
->
euid
;

236 
e_gid
 = (
i
 & 
S_ISGID
Ë? 
öode
->
i_gid
 : 
cuºít
->
egid
;

237 i‡(
cuºít
->
euid
 =
öode
->
i_uid
)

238 
i
 >>= 6;

239 i‡(
	`ö_group_p
(
öode
->
i_gid
))

240 
i
 >>= 3;

241 i‡(!(
i
 & 1) &&

242 !((
öode
->
i_mode
 & 0111Ë&& 
	`su£r
())) {

243 
ªtvÆ
 = -
ENOEXEC
;

244 
exec_îr‹2
;

246 i‡(!(
bh
 = 
	`bªad
(
öode
->
i_dev
,öode->
i_z⁄e
[0]))) {

247 
ªtvÆ
 = -
EACCES
;

248 
exec_îr‹2
;

250 
ex
 = *((
exec
 *Ë
bh
->
b_d©a
);

251 i‡((
bh
->
b_d©a
[0] ='#'Ë&& (bh->b_d©a[1] ='!'Ë&& (!
sh_b™g
)) {

257 
buf
[128], *
˝
, *
öãΩ
, *
i_«me
, *
i_¨g
;

258 
ﬁd_fs
;

260 
	`°∫˝y
(
buf
, 
bh
->
b_d©a
+2, 127);

261 
	`bªl£
(
bh
);

262 
	`ùut
(
öode
);

263 
buf
[127] = '\0';

264 i‡(
˝
 = 
	`°rchr
(
buf
, '\n')) {

265 *
˝
 = '\0';

266 
˝
 = 
buf
; (*cp == ' ') || (*cp == '\t'); cp++);

268 i‡(!
˝
 || *cp == '\0') {

269 
ªtvÆ
 = -
ENOEXEC
;

270 
exec_îr‹1
;

272 
öãΩ
 = 
i_«me
 = 
˝
;

273 
i_¨g
 = 0;

274  ; *
˝
 && (*cp != ' ') && (*cp != '\t'); cp++) {

275 i‡(*
˝
 == '/')

276 
i_«me
 = 
˝
+1;

278 i‡(*
˝
) {

279 *
˝
++ = '\0';

280 
i_¨g
 = 
˝
;

286 i‡(
sh_b™g
++ == 0) {

287 
p
 = 
	`c›y_°rögs
(
ívc
, 
ívp
, 
∑ge
,Ö, 0);

288 
p
 = 
	`c›y_°rögs
(--
¨gc
, 
¨gv
+1, 
∑ge
,Ö, 0);

298 
p
 = 
	`c›y_°rögs
(1, &
fûíame
, 
∑ge
,Ö, 1);

299 
¨gc
++;

300 i‡(
i_¨g
) {

301 
p
 = 
	`c›y_°rögs
(1, &
i_¨g
, 
∑ge
,Ö, 2);

302 
¨gc
++;

304 
p
 = 
	`c›y_°rögs
(1, &
i_«me
, 
∑ge
,Ö, 2);

305 
¨gc
++;

306 i‡(!
p
) {

307 
ªtvÆ
 = -
ENOMEM
;

308 
exec_îr‹1
;

313 
ﬁd_fs
 = 
	`gë_fs
();

314 
	`£t_fs
(
	`gë_ds
());

315 i‡(!(
öode
=
	`«mei
(
öãΩ
))) {

316 
	`£t_fs
(
ﬁd_fs
);

317 
ªtvÆ
 = -
ENOENT
;

318 
exec_îr‹1
;

320 
	`£t_fs
(
ﬁd_fs
);

321 
ª°¨t_öãΩ
;

323 
	`bªl£
(
bh
);

324 i‡(
	`N_MAGIC
(
ex
Ë!
ZMAGIC
 ||Éx.
a_åsize
 ||Éx.
a_drsize
 ||

325 
ex
.
a_ãxt
+ex.
a_d©a
+ex.
a_bss
>0x3000000 ||

326 
öode
->
i_size
 < 
ex
.
a_ãxt
+ex.
a_d©a
+ex.
a_syms
+
	`N_TXTOFF
(ex)) {

327 
ªtvÆ
 = -
ENOEXEC
;

328 
exec_îr‹2
;

330 i‡(
	`N_TXTOFF
(
ex
Ë!
BLOCK_SIZE
) {

331 
	`¥ötk
("%s: N_TXTOFF !BLOCK_SIZE. Sìá.out.h.", 
fûíame
);

332 
ªtvÆ
 = -
ENOEXEC
;

333 
exec_îr‹2
;

335 i‡(!
sh_b™g
) {

336 
p
 = 
	`c›y_°rögs
(
ívc
,
ívp
,
∑ge
,p,0);

337 
p
 = 
	`c›y_°rögs
(
¨gc
,
¨gv
,
∑ge
,p,0);

338 i‡(!
p
) {

339 
ªtvÆ
 = -
ENOMEM
;

340 
exec_îr‹2
;

345 i‡(
cuºít
->
execuèbÀ
)

346 
	`ùut
(
cuºít
->
execuèbÀ
);

347 
cuºít
->
execuèbÀ
 = 
öode
;

348 
cuºít
->
sig«l
 = 0;

349 
i
=0 ; i<32 ; i++) {

350 
cuºít
->
siga˘i⁄
[
i
].
ß_mask
 = 0;

351 
cuºít
->
siga˘i⁄
[
i
].
ß_Êags
 = 0;

352 i‡(
cuºít
->
siga˘i⁄
[
i
].
ß_h™dÀr
 !
SIG_IGN
)

353 
cuºít
->
siga˘i⁄
[
i
].
ß_h™dÀr
 = 
NULL
;

355 
i
=0 ; i<
NR_OPEN
 ; i++)

356 i‡((
cuºít
->
˛o£_⁄_exec
>>
i
)&1)

357 
	`sys_˛o£
(
i
);

358 
cuºít
->
˛o£_⁄_exec
 = 0;

359 
	`‰ì_∑ge_èbÀs
(
	`gë_ba£
(
cuºít
->
ldt
[1]),
	`gë_limô
(0x0f));

360 
	`‰ì_∑ge_èbÀs
(
	`gë_ba£
(
cuºít
->
ldt
[2]),
	`gë_limô
(0x17));

361 i‡(
œ°_èsk_u£d_m©h
 =
cuºít
)

362 
œ°_èsk_u£d_m©h
 = 
NULL
;

363 
cuºít
->
u£d_m©h
 = 0;

364 
p
 +
	`ch™ge_ldt
(
ex
.
a_ãxt
,
∑ge
);

365 
p
 -
LIBRARY_SIZE
 + 
MAX_ARG_PAGES
*
PAGE_SIZE
;

366 
p
 = (Ë
	`¸óã_èbÀs
((*Ì,
¨gc
,
ívc
);

367 
cuºít
->
brk
 = 
ex
.
a_bss
 +

368 (
cuºít
->
íd_d©a
 = 
ex
.
a_d©a
 +

369 (
cuºít
->
íd_code
 = 
ex
.
a_ãxt
));

370 
cuºít
->
°¨t_°ack
 = 
p
 & 0xfffff000;

371 
cuºít
->
suid
 = cuºít->
euid
 = 
e_uid
;

372 
cuºít
->
sgid
 = cuºít->
egid
 = 
e_gid
;

373 
eù
[0] = 
ex
.
a_íåy
;

374 
eù
[3] = 
p
;

376 
exec_îr‹2
:

377 
	`ùut
(
öode
);

378 
exec_îr‹1
:

379 
i
=0 ; i<
MAX_ARG_PAGES
 ; i++)

380 
	`‰ì_∑ge
(
∑ge
[
i
]);

381 (
ªtvÆ
);

382 
	}
}

	@fs/fcntl.c

7 
	~<°rög.h
>

8 
	~<î∫o.h
>

9 
	~<löux/sched.h
>

10 
	~<löux/kî√l.h
>

11 
	~<asm/£gmít.h
>

13 
	~<f˙é.h
>

14 
	~<sys/°©.h
>

16 
sys_˛o£
(
fd
);

18 
	$dupfd
(
fd
, 
¨g
)

20 i‡(
fd
 >
NR_OPEN
 || !
cuºít
->
fûp
[fd])

21  -
EBADF
;

22 i‡(
¨g
 >
NR_OPEN
)

23  -
EINVAL
;

24 
¨g
 < 
NR_OPEN
)

25 i‡(
cuºít
->
fûp
[
¨g
])

26 
¨g
++;

29 i‡(
¨g
 >
NR_OPEN
)

30  -
EMFILE
;

31 
cuºít
->
˛o£_⁄_exec
 &~(1<<
¨g
);

32 (
cuºít
->
fûp
[
¨g
] = cuºít->fûp[
fd
])->
f_cou¡
++;

33  
¨g
;

34 
	}
}

36 
	$sys_dup2
(
ﬁdfd
, 
√wfd
)

38 
	`sys_˛o£
(
√wfd
);

39  
	`dupfd
(
ﬁdfd
,
√wfd
);

40 
	}
}

42 
	$sys_dup
(
fûdes
)

44  
	`dupfd
(
fûdes
,0);

45 
	}
}

47 
	$sys_f˙é
(
fd
, 
cmd
, 
¨g
)

49 
fûe
 * 
fûp
;

51 i‡(
fd
 >
NR_OPEN
 || !(
fûp
 = 
cuºít
->filp[fd]))

52  -
EBADF
;

53 
cmd
) {

54 
F_DUPFD
:

55  
	`dupfd
(
fd
,
¨g
);

56 
F_GETFD
:

57  (
cuºít
->
˛o£_⁄_exec
>>
fd
)&1;

58 
F_SETFD
:

59 i‡(
¨g
&1)

60 
cuºít
->
˛o£_⁄_exec
 |(1<<
fd
);

62 
cuºít
->
˛o£_⁄_exec
 &~(1<<
fd
);

64 
F_GETFL
:

65  
fûp
->
f_Êags
;

66 
F_SETFL
:

67 
fûp
->
f_Êags
 &~(
O_APPEND
 | 
O_NONBLOCK
);

68 
fûp
->
f_Êags
 |
¨g
 & (
O_APPEND
 | 
O_NONBLOCK
);

70 
F_GETLK
: 
F_SETLK
: 
F_SETLKW
:

75 
	}
}

	@fs/file_dev.c

7 
	~<î∫o.h
>

8 
	~<f˙é.h
>

10 
	~<löux/sched.h
>

11 
	~<löux/kî√l.h
>

12 
	~<asm/£gmít.h
>

14 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

15 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

17 
	$fûe_ªad
(
m_öode
 * 
öode
, 
fûe
 * 
fûp
, * 
buf
, 
cou¡
)

19 
À·
,
ch¨s
,
ƒ
;

20 
buf„r_hód
 * 
bh
;

22 i‡((
À·
=
cou¡
)<=0)

24 
À·
) {

25 i‡(
ƒ
 = 
	`bm≠
(
öode
,(
fûp
->
f_pos
)/
BLOCK_SIZE
)) {

26 i‡(!(
bh
=
	`bªad
(
öode
->
i_dev
,
ƒ
)))

29 
bh
 = 
NULL
;

30 
ƒ
 = 
fûp
->
f_pos
 % 
BLOCK_SIZE
;

31 
ch¨s
 = 
	`MIN
–
BLOCK_SIZE
-
ƒ
 , 
À·
 );

32 
fûp
->
f_pos
 +
ch¨s
;

33 
À·
 -
ch¨s
;

34 i‡(
bh
) {

35 * 
p
 = 
ƒ
 + 
bh
->
b_d©a
;

36 
ch¨s
-->0)

37 
	`put_fs_byã
(*(
p
++),
buf
++);

38 
	`bªl£
(
bh
);

40 
ch¨s
-->0)

41 
	`put_fs_byã
(0,
buf
++);

44 
öode
->
i_©ime
 = 
CURRENT_TIME
;

45  (
cou¡
-
À·
)?(cou¡-À·):-
ERROR
;

46 
	}
}

48 
	$fûe_wrôe
(
m_öode
 * 
öode
, 
fûe
 * 
fûp
, * 
buf
, 
cou¡
)

50 
off_t
 
pos
;

51 
block
,
c
;

52 
buf„r_hód
 * 
bh
;

53 * 
p
;

54 
i
=0;

60 i‡(
fûp
->
f_Êags
 & 
O_APPEND
)

61 
pos
 = 
öode
->
i_size
;

63 
pos
 = 
fûp
->
f_pos
;

64 
i
<
cou¡
) {

65 i‡(!(
block
 = 
	`¸óã_block
(
öode
,
pos
/
BLOCK_SIZE
)))

67 i‡(!(
bh
=
	`bªad
(
öode
->
i_dev
,
block
)))

69 
c
 = 
pos
 % 
BLOCK_SIZE
;

70 
p
 = 
c
 + 
bh
->
b_d©a
;

71 
bh
->
b_dút
 = 1;

72 
c
 = 
BLOCK_SIZE
-c;

73 i‡(
c
 > 
cou¡
-
i
) c = count-i;

74 
pos
 +
c
;

75 i‡(
pos
 > 
öode
->
i_size
) {

76 
öode
->
i_size
 = 
pos
;

77 
öode
->
i_dút
 = 1;

79 
i
 +
c
;

80 
c
-->0)

81 *(
p
++Ë
	`gë_fs_byã
(
buf
++);

82 
	`bªl£
(
bh
);

84 
öode
->
i_mtime
 = 
CURRENT_TIME
;

85 i‡(!(
fûp
->
f_Êags
 & 
O_APPEND
)) {

86 
fûp
->
f_pos
 = 
pos
;

87 
öode
->
i_˘ime
 = 
CURRENT_TIME
;

89  (
i
?i:-1);

90 
	}
}

	@fs/file_table.c

7 
	~<löux/fs.h
>

9 
fûe
 
	gfûe_èbÀ
[
NR_FILE
];

	@fs/inode.c

7 
	~<°rög.h
>

8 
	~<sys/°©.h
>

10 
	~<löux/sched.h
>

11 
	~<löux/kî√l.h
>

12 
	~<löux/mm.h
>

13 
	~<asm/sy°em.h
>

15 *
blk_size
[];

17 
m_öode
 
	göode_èbÀ
[
NR_INODE
]={{0,},};

19 
ªad_öode
(
m_öode
 * 
öode
);

20 
wrôe_öode
(
m_öode
 * 
öode
);

22 
ölöe
 
	$waô_⁄_öode
(
m_öode
 * 
öode
)

24 
	`˛i
();

25 
öode
->
i_lock
)

26 
	`¶ìp_⁄
(&
öode
->
i_waô
);

27 
	`°i
();

28 
	}
}

30 
ölöe
 
	$lock_öode
(
m_öode
 * 
öode
)

32 
	`˛i
();

33 
öode
->
i_lock
)

34 
	`¶ìp_⁄
(&
öode
->
i_waô
);

35 
öode
->
i_lock
=1;

36 
	`°i
();

37 
	}
}

39 
ölöe
 
	$u∆ock_öode
(
m_öode
 * 
öode
)

41 
öode
->
i_lock
=0;

42 
	`wake_up
(&
öode
->
i_waô
);

43 
	}
}

45 
	$övÆid©e_öodes
(
dev
)

47 
i
;

48 
m_öode
 * 
öode
;

50 
öode
 = 0+
öode_èbÀ
;

51 
i
=0 ; i<
NR_INODE
 ; i++,
öode
++) {

52 
	`waô_⁄_öode
(
öode
);

53 i‡(
öode
->
i_dev
 =
dev
) {

54 i‡(
öode
->
i_cou¡
)

55 
	`¥ötk
("inode in use onÑemoved disk\n\r");

56 
öode
->
i_dev
 = inode->
i_dút
 = 0;

59 
	}
}

61 
	$sync_öodes
()

63 
i
;

64 
m_öode
 * 
öode
;

66 
öode
 = 0+
öode_èbÀ
;

67 
i
=0 ; i<
NR_INODE
 ; i++,
öode
++) {

68 
	`waô_⁄_öode
(
öode
);

69 i‡(
öode
->
i_dút
 && !öode->
i_pùe
)

70 
	`wrôe_öode
(
öode
);

72 
	}
}

74 
	$_bm≠
(
m_öode
 * 
öode
,
block
,
¸óã
)

76 
buf„r_hód
 * 
bh
;

77 
i
;

79 i‡(
block
<0)

80 
	`∑nic
("_bmap: block<0");

81 i‡(
block
 >= 7+512+512*512)

82 
	`∑nic
("_bmap: block>big");

83 i‡(
block
<7) {

84 i‡(
¸óã
 && !
öode
->
i_z⁄e
[
block
])

85 i‡(
öode
->
i_z⁄e
[
block
]=
	`√w_block
(öode->
i_dev
)) {

86 
öode
->
i_˘ime
=
CURRENT_TIME
;

87 
öode
->
i_dút
=1;

89  
öode
->
i_z⁄e
[
block
];

91 
block
 -= 7;

92 i‡(
block
<512) {

93 i‡(
¸óã
 && !
öode
->
i_z⁄e
[7])

94 i‡(
öode
->
i_z⁄e
[7]=
	`√w_block
(öode->
i_dev
)) {

95 
öode
->
i_dút
=1;

96 
öode
->
i_˘ime
=
CURRENT_TIME
;

98 i‡(!
öode
->
i_z⁄e
[7])

100 i‡(!(
bh
 = 
	`bªad
(
öode
->
i_dev
,öode->
i_z⁄e
[7])))

102 
i
 = ((*Ë(
bh
->
b_d©a
))[
block
];

103 i‡(
¸óã
 && !
i
)

104 i‡(
i
=
	`√w_block
(
öode
->
i_dev
)) {

105 ((*Ë(
bh
->
b_d©a
))[
block
]=
i
;

106 
bh
->
b_dút
=1;

108 
	`bªl£
(
bh
);

109  
i
;

111 
block
 -= 512;

112 i‡(
¸óã
 && !
öode
->
i_z⁄e
[8])

113 i‡(
öode
->
i_z⁄e
[8]=
	`√w_block
(öode->
i_dev
)) {

114 
öode
->
i_dút
=1;

115 
öode
->
i_˘ime
=
CURRENT_TIME
;

117 i‡(!
öode
->
i_z⁄e
[8])

119 i‡(!(
bh
=
	`bªad
(
öode
->
i_dev
,öode->
i_z⁄e
[8])))

121 
i
 = ((*)
bh
->
b_d©a
)[
block
>>9];

122 i‡(
¸óã
 && !
i
)

123 i‡(
i
=
	`√w_block
(
öode
->
i_dev
)) {

124 ((*Ë(
bh
->
b_d©a
))[
block
>>9]=
i
;

125 
bh
->
b_dút
=1;

127 
	`bªl£
(
bh
);

128 i‡(!
i
)

130 i‡(!(
bh
=
	`bªad
(
öode
->
i_dev
,
i
)))

132 
i
 = ((*)
bh
->
b_d©a
)[
block
&511];

133 i‡(
¸óã
 && !
i
)

134 i‡(
i
=
	`√w_block
(
öode
->
i_dev
)) {

135 ((*Ë(
bh
->
b_d©a
))[
block
&511]=
i
;

136 
bh
->
b_dút
=1;

138 
	`bªl£
(
bh
);

139  
i
;

140 
	}
}

142 
	$bm≠
(
m_öode
 * 
öode
,
block
)

144  
	`_bm≠
(
öode
,
block
,0);

145 
	}
}

147 
	$¸óã_block
(
m_öode
 * 
öode
, 
block
)

149  
	`_bm≠
(
öode
,
block
,1);

150 
	}
}

152 
	$ùut
(
m_öode
 * 
öode
)

154 i‡(!
öode
)

156 
	`waô_⁄_öode
(
öode
);

157 i‡(!
öode
->
i_cou¡
)

158 
	`∑nic
("iput:ÅryingÅo free free inode");

159 i‡(
öode
->
i_pùe
) {

160 
	`wake_up
(&
öode
->
i_waô
);

161 
	`wake_up
(&
öode
->
i_waô2
);

162 i‡(--
öode
->
i_cou¡
)

164 
	`‰ì_∑ge
(
öode
->
i_size
);

165 
öode
->
i_cou¡
=0;

166 
öode
->
i_dút
=0;

167 
öode
->
i_pùe
=0;

170 i‡(!
öode
->
i_dev
) {

171 
öode
->
i_cou¡
--;

174 i‡(
	`S_ISBLK
(
öode
->
i_mode
)) {

175 
	`sync_dev
(
öode
->
i_z⁄e
[0]);

176 
	`waô_⁄_öode
(
öode
);

178 
ª≥©
:

179 i‡(
öode
->
i_cou¡
>1) {

180 
öode
->
i_cou¡
--;

183 i‡(!
öode
->
i_∆öks
) {

184 
	`åunˇã
(
öode
);

185 
	`‰ì_öode
(
öode
);

188 i‡(
öode
->
i_dút
) {

189 
	`wrôe_öode
(
öode
);

190 
	`waô_⁄_öode
(
öode
);

191 
ª≥©
;

193 
öode
->
i_cou¡
--;

195 
	}
}

197 
m_öode
 * 
	$gë_em±y_öode
()

199 
m_öode
 * 
öode
;

200 
m_öode
 * 
œ°_öode
 = 
öode_èbÀ
;

201 
i
;

204 
öode
 = 
NULL
;

205 
i
 = 
NR_INODE
; i ; i--) {

206 i‡(++
œ°_öode
 >
öode_èbÀ
 + 
NR_INODE
)

207 
œ°_öode
 = 
öode_èbÀ
;

208 i‡(!
œ°_öode
->
i_cou¡
) {

209 
öode
 = 
œ°_öode
;

210 i‡(!
öode
->
i_dút
 && !öode->
i_lock
)

214 i‡(!
öode
) {

215 
i
=0 ; i<
NR_INODE
 ; i++)

216 
	`¥ötk
("%04x: %6d\t",
öode_èbÀ
[
i
].
i_dev
,

217 
öode_èbÀ
[
i
].
i_num
);

218 
	`∑nic
("No free inodes in mem");

220 
	`waô_⁄_öode
(
öode
);

221 
öode
->
i_dút
) {

222 
	`wrôe_öode
(
öode
);

223 
	`waô_⁄_öode
(
öode
);

225 } 
öode
->
i_cou¡
);

226 
	`mem£t
(
öode
,0,(*inode));

227 
öode
->
i_cou¡
 = 1;

228  
öode
;

229 
	}
}

231 
m_öode
 * 
	$gë_pùe_öode
()

233 
m_öode
 * 
öode
;

235 i‡(!(
öode
 = 
	`gë_em±y_öode
()))

236  
NULL
;

237 i‡(!(
öode
->
i_size
=
	`gë_‰ì_∑ge
())) {

238 
öode
->
i_cou¡
 = 0;

239  
NULL
;

241 
öode
->
i_cou¡
 = 2;

242 
	`PIPE_HEAD
(*
öode
Ë
	`PIPE_TAIL
(*inode) = 0;

243 
öode
->
i_pùe
 = 1;

244  
öode
;

245 
	}
}

247 
m_öode
 * 
	$igë
(
dev
,
ƒ
)

249 
m_öode
 * 
öode
, * 
em±y
;

251 i‡(!
dev
)

252 
	`∑nic
("iget with dev==0");

253 
em±y
 = 
	`gë_em±y_öode
();

254 
öode
 = 
öode_èbÀ
;

255 
öode
 < 
NR_INODE
+
öode_èbÀ
) {

256 i‡(
öode
->
i_dev
 !
dev
 || inode->
i_num
 !
ƒ
) {

257 
öode
++;

260 
	`waô_⁄_öode
(
öode
);

261 i‡(
öode
->
i_dev
 !
dev
 || inode->
i_num
 !
ƒ
) {

262 
öode
 = 
öode_èbÀ
;

265 
öode
->
i_cou¡
++;

266 i‡(
öode
->
i_mou¡
) {

267 
i
;

269 
i
 = 0 ; i<
NR_SUPER
 ; i++)

270 i‡(
su≥r_block
[
i
].
s_imou¡
==
öode
)

272 i‡(
i
 >
NR_SUPER
) {

273 
	`¥ötk
("Mounted inode hasn't got sb\n");

274 i‡(
em±y
)

275 
	`ùut
(
em±y
);

276  
öode
;

278 
	`ùut
(
öode
);

279 
dev
 = 
su≥r_block
[
i
].
s_dev
;

280 
ƒ
 = 
ROOT_INO
;

281 
öode
 = 
öode_èbÀ
;

284 i‡(
em±y
)

285 
	`ùut
(
em±y
);

286  
öode
;

288 i‡(!
em±y
)

289  (
NULL
);

290 
öode
=
em±y
;

291 
öode
->
i_dev
 = 
dev
;

292 
öode
->
i_num
 = 
ƒ
;

293 
	`ªad_öode
(
öode
);

294  
öode
;

295 
	}
}

297 
	$ªad_öode
(
m_öode
 * 
öode
)

299 
su≥r_block
 * 
sb
;

300 
buf„r_hód
 * 
bh
;

301 
block
;

303 
	`lock_öode
(
öode
);

304 i‡(!(
sb
=
	`gë_su≥r
(
öode
->
i_dev
)))

305 
	`∑nic
("tryingÅoÑead inode without dev");

306 
block
 = 2 + 
sb
->
s_im≠_blocks
 + sb->
s_zm≠_blocks
 +

307 (
öode
->
i_num
-1)/
INODES_PER_BLOCK
;

308 i‡(!(
bh
=
	`bªad
(
öode
->
i_dev
,
block
)))

309 
	`∑nic
("unableÅoÑead i-node block");

310 *(
d_öode
 *)
öode
 =

311 ((
d_öode
 *)
bh
->
b_d©a
)

312 [(
öode
->
i_num
-1)%
INODES_PER_BLOCK
];

313 
	`bªl£
(
bh
);

314 i‡(
	`S_ISBLK
(
öode
->
i_mode
)) {

315 
i
 = 
öode
->
i_z⁄e
[0];

316 i‡(
blk_size
[
	`MAJOR
(
i
)])

317 
öode
->
i_size
 = 1024*
blk_size
[
	`MAJOR
(
i
)][
	`MINOR
(i)];

319 
öode
->
i_size
 = 0x7fffffff;

321 
	`u∆ock_öode
(
öode
);

322 
	}
}

324 
	$wrôe_öode
(
m_öode
 * 
öode
)

326 
su≥r_block
 * 
sb
;

327 
buf„r_hód
 * 
bh
;

328 
block
;

330 
	`lock_öode
(
öode
);

331 i‡(!
öode
->
i_dút
 || !öode->
i_dev
) {

332 
	`u∆ock_öode
(
öode
);

335 i‡(!(
sb
=
	`gë_su≥r
(
öode
->
i_dev
)))

336 
	`∑nic
("tryingÅo write inode without device");

337 
block
 = 2 + 
sb
->
s_im≠_blocks
 + sb->
s_zm≠_blocks
 +

338 (
öode
->
i_num
-1)/
INODES_PER_BLOCK
;

339 i‡(!(
bh
=
	`bªad
(
öode
->
i_dev
,
block
)))

340 
	`∑nic
("unableÅoÑead i-node block");

341 ((
d_öode
 *)
bh
->
b_d©a
)

342 [(
öode
->
i_num
-1)%
INODES_PER_BLOCK
] =

343 *(
d_öode
 *)
öode
;

344 
bh
->
b_dút
=1;

345 
öode
->
i_dút
=0;

346 
	`bªl£
(
bh
);

347 
	`u∆ock_öode
(
öode
);

348 
	}
}

	@fs/ioctl.c

7 
	~<°rög.h
>

8 
	~<î∫o.h
>

9 
	~<sys/°©.h
>

11 
	~<löux/sched.h
>

13 
ây_io˘l
(
dev
, 
cmd
, 
¨g
);

14 
pùe_io˘l
(
m_öode
 *
pöo
, 
cmd
, 
¨g
);

16 (*
	tio˘l_±r
)(
	tdev
,
	tcmd
,
	t¨g
);

18 
	#NRDEVS
 (( (
io˘l_èbÀ
))/( (
io˘l_±r
)))

	)

20 
io˘l_±r
 
io˘l_èbÀ
[]={

21 
NULL
,

22 
NULL
,

23 
NULL
,

24 
NULL
,

25 
ây_io˘l
,

26 
ây_io˘l
,

27 
NULL
,

28 
NULL
};

31 
	$sys_io˘l
(
fd
, 
cmd
, 
¨g
)

33 
fûe
 * 
fûp
;

34 
dev
,
mode
;

36 i‡(
fd
 >
NR_OPEN
 || !(
fûp
 = 
cuºít
->filp[fd]))

37  -
EBADF
;

38 i‡(
fûp
->
f_öode
->
i_pùe
)

39  (
fûp
->
f_mode
&1)?
	`pùe_io˘l
(fûp->
f_öode
,
cmd
,
¨g
):-
EBADF
;

40 
mode
=
fûp
->
f_öode
->
i_mode
;

41 i‡(!
	`S_ISCHR
(
mode
Ë&& !
	`S_ISBLK
(mode))

42  -
EINVAL
;

43 
dev
 = 
fûp
->
f_öode
->
i_z⁄e
[0];

44 i‡(
	`MAJOR
(
dev
Ë>
NRDEVS
)

45  -
ENODEV
;

46 i‡(!
io˘l_èbÀ
[
	`MAJOR
(
dev
)])

47  -
ENOTTY
;

48  
io˘l_èbÀ
[
	`MAJOR
(
dev
)](dev,
cmd
,
¨g
);

49 
	}
}

	@fs/namei.c

11 
	~<löux/sched.h
>

12 
	~<löux/kî√l.h
>

13 
	~<asm/£gmít.h
>

15 
	~<°rög.h
>

16 
	~<f˙é.h
>

17 
	~<î∫o.h
>

18 
	~<c⁄°.h
>

19 
	~<sys/°©.h
>

21 
m_öode
 * 
_«mei
(c⁄° * 
fûíame
, m_öodê* 
ba£
,

22 
fﬁlow_löks
);

24 
	#ACC_MODE
(
x
Ë("\004\002\006\377"[(x)&
O_ACCMODE
])

	)

32 
	#MAY_EXEC
 1

	)

33 
	#MAY_WRITE
 2

	)

34 
	#MAY_READ
 4

	)

43 
	$≥rmissi⁄
(
m_öode
 * 
öode
,
mask
)

45 
mode
 = 
öode
->
i_mode
;

48 i‡(
öode
->
i_dev
 && !öode->
i_∆öks
)

50 i‡(
cuºít
->
euid
==
öode
->
i_uid
)

51 
mode
 >>= 6;

52 i‡(
	`ö_group_p
(
öode
->
i_gid
))

53 
mode
 >>= 3;

54 i‡(((
mode
 & 
mask
 & 0007Ë=maskË|| 
	`su£r
())

57 
	}
}

66 
	$m©ch
(
Àn
,c⁄° * 
«me
,
dú_íåy
 * 
de
)

68 
ßme
 
	`__asm__
("ax");

70 i‡(!
de
 || !de->
öode
 || 
Àn
 > 
NAME_LEN
)

73 i‡(!
Àn
 && (
de
->
«me
[0]=='.') && (de->name[1]=='\0'))

75 i‡(
Àn
 < 
NAME_LEN
 && 
de
->
«me
[len])

77 
	`__asm__
("cld\n\t"

80 :"˜" (
ßme
)

81 :"0" (0),"S" ((Ë
«me
),"D" ((Ë
de
->«me),"c" (
Àn
)

83  
ßme
;

84 
	}
}

97 
buf„r_hód
 * 
	$föd_íåy
(
m_öode
 ** 
dú
,

98 c⁄° * 
«me
, 
«mñí
, 
dú_íåy
 ** 
ªs_dú
)

100 
íåõs
;

101 
block
,
i
;

102 
buf„r_hód
 * 
bh
;

103 
dú_íåy
 * 
de
;

104 
su≥r_block
 * 
sb
;

106 #ifde‡
NO_TRUNCATE


107 i‡(
«mñí
 > 
NAME_LEN
)

108  
NULL
;

110 i‡(
«mñí
 > 
NAME_LEN
)

111 
«mñí
 = 
NAME_LEN
;

113 
íåõs
 = (*
dú
)->
i_size
 / ( (
dú_íåy
));

114 *
ªs_dú
 = 
NULL
;

116 i‡(
«mñí
==2 && 
	`gë_fs_byã
(
«me
)=='.' && get_fs_byte(name+1)=='.') {

118 i‡((*
dú
Ë=
cuºít
->
roŸ
)

119 
«mñí
=1;

120 i‡((*
dú
)->
i_num
 =
ROOT_INO
) {

123 
sb
=
	`gë_su≥r
((*
dú
)->
i_dev
);

124 i‡(
sb
->
s_imou¡
) {

125 
	`ùut
(*
dú
);

126 (*
dú
)=
sb
->
s_imou¡
;

127 (*
dú
)->
i_cou¡
++;

131 i‡(!(
block
 = (*
dú
)->
i_z⁄e
[0]))

132  
NULL
;

133 i‡(!(
bh
 = 
	`bªad
((*
dú
)->
i_dev
,
block
)))

134  
NULL
;

135 
i
 = 0;

136 
de
 = (
dú_íåy
 *Ë
bh
->
b_d©a
;

137 
i
 < 
íåõs
) {

138 i‡((*)
de
 >
BLOCK_SIZE
+
bh
->
b_d©a
) {

139 
	`bªl£
(
bh
);

140 
bh
 = 
NULL
;

141 i‡(!(
block
 = 
	`bm≠
(*
dú
,
i
/
DIR_ENTRIES_PER_BLOCK
)) ||

142 !(
bh
 = 
	`bªad
((*
dú
)->
i_dev
,
block
))) {

143 
i
 +
DIR_ENTRIES_PER_BLOCK
;

146 
de
 = (
dú_íåy
 *Ë
bh
->
b_d©a
;

148 i‡(
	`m©ch
(
«mñí
,
«me
,
de
)) {

149 *
ªs_dú
 = 
de
;

150  
bh
;

152 
de
++;

153 
i
++;

155 
	`bªl£
(
bh
);

156  
NULL
;

157 
	}
}

169 
buf„r_hód
 * 
	$add_íåy
(
m_öode
 * 
dú
,

170 c⁄° * 
«me
, 
«mñí
, 
dú_íåy
 ** 
ªs_dú
)

172 
block
,
i
;

173 
buf„r_hód
 * 
bh
;

174 
dú_íåy
 * 
de
;

176 *
ªs_dú
 = 
NULL
;

177 #ifde‡
NO_TRUNCATE


178 i‡(
«mñí
 > 
NAME_LEN
)

179  
NULL
;

181 i‡(
«mñí
 > 
NAME_LEN
)

182 
«mñí
 = 
NAME_LEN
;

184 i‡(!
«mñí
)

185  
NULL
;

186 i‡(!(
block
 = 
dú
->
i_z⁄e
[0]))

187  
NULL
;

188 i‡(!(
bh
 = 
	`bªad
(
dú
->
i_dev
,
block
)))

189  
NULL
;

190 
i
 = 0;

191 
de
 = (
dú_íåy
 *Ë
bh
->
b_d©a
;

193 i‡((*)
de
 >
BLOCK_SIZE
+
bh
->
b_d©a
) {

194 
	`bªl£
(
bh
);

195 
bh
 = 
NULL
;

196 
block
 = 
	`¸óã_block
(
dú
,
i
/
DIR_ENTRIES_PER_BLOCK
);

197 i‡(!
block
)

198  
NULL
;

199 i‡(!(
bh
 = 
	`bªad
(
dú
->
i_dev
,
block
))) {

200 
i
 +
DIR_ENTRIES_PER_BLOCK
;

203 
de
 = (
dú_íåy
 *Ë
bh
->
b_d©a
;

205 i‡(
i
*(
dú_íåy
Ë>
dú
->
i_size
) {

206 
de
->
öode
=0;

207 
dú
->
i_size
 = (
i
+1)*(
dú_íåy
);

208 
dú
->
i_dút
 = 1;

209 
dú
->
i_˘ime
 = 
CURRENT_TIME
;

211 i‡(!
de
->
öode
) {

212 
dú
->
i_mtime
 = 
CURRENT_TIME
;

213 
i
=0; i < 
NAME_LEN
 ; i++)

214 
de
->
«me
[
i
]=(i<
«mñí
)?
	`gë_fs_byã
(name+i):0;

215 
bh
->
b_dút
 = 1;

216 *
ªs_dú
 = 
de
;

217  
bh
;

219 
de
++;

220 
i
++;

222 
	`bªl£
(
bh
);

223  
NULL
;

224 
	}
}

226 
m_öode
 * 
	$fﬁlow_lök
(
m_öode
 * 
dú
, m_öodê* 
öode
)

228 
fs
;

229 
buf„r_hód
 * 
bh
;

231 i‡(!
dú
) {

232 
dú
 = 
cuºít
->
roŸ
;

233 
dú
->
i_cou¡
++;

235 i‡(!
öode
) {

236 
	`ùut
(
dú
);

237  
NULL
;

239 i‡(!
	`S_ISLNK
(
öode
->
i_mode
)) {

240 
	`ùut
(
dú
);

241  
öode
;

243 
	`__asm__
("mov %%fs,%0":"Ù" (
fs
));

244 i‡(
fs
 !0x17 || !
öode
->
i_z⁄e
[0] ||

245 !(
bh
 = 
	`bªad
(
öode
->
i_dev
, inode->
i_z⁄e
[0]))) {

246 
	`ùut
(
dú
);

247 
	`ùut
(
öode
);

248  
NULL
;

250 
	`ùut
(
öode
);

251 
	`__asm__
("mov %0,%%fs"::"r" (() 0x10));

252 
öode
 = 
	`_«mei
(
bh
->
b_d©a
,
dú
,0);

253 
	`__asm__
("mov %0,%%fs"::"r" (
fs
));

254 
	`bªl£
(
bh
);

255  
öode
;

256 
	}
}

264 
m_öode
 * 
	$gë_dú
(c⁄° * 
∑th«me
, 
m_öode
 * 
öode
)

266 
c
;

267 c⁄° * 
thi¢ame
;

268 
buf„r_hód
 * 
bh
;

269 
«mñí
,
ör
;

270 
dú_íåy
 * 
de
;

271 
m_öode
 * 
dú
;

273 i‡(!
öode
) {

274 
öode
 = 
cuºít
->
pwd
;

275 
öode
->
i_cou¡
++;

277 i‡((
c
=
	`gë_fs_byã
(
∑th«me
))=='/') {

278 
	`ùut
(
öode
);

279 
öode
 = 
cuºít
->
roŸ
;

280 
∑th«me
++;

281 
öode
->
i_cou¡
++;

284 
thi¢ame
 = 
∑th«me
;

285 i‡(!
	`S_ISDIR
(
öode
->
i_mode
Ë|| !
	`≥rmissi⁄
(öode,
MAY_EXEC
)) {

286 
	`ùut
(
öode
);

287  
NULL
;

289 
«mñí
=0;(
c
=
	`gë_fs_byã
(
∑th«me
++))&&(c!='/');namelen++)

291 i‡(!
c
)

292  
öode
;

293 i‡(!(
bh
 = 
	`föd_íåy
(&
öode
,
thi¢ame
,
«mñí
,&
de
))) {

294 
	`ùut
(
öode
);

295  
NULL
;

297 
ör
 = 
de
->
öode
;

298 
	`bªl£
(
bh
);

299 
dú
 = 
öode
;

300 i‡(!(
öode
 = 
	`igë
(
dú
->
i_dev
,
ör
))) {

301 
	`ùut
(
dú
);

302  
NULL
;

304 i‡(!(
öode
 = 
	`fﬁlow_lök
(
dú
,inode)))

305  
NULL
;

307 
	}
}

315 
m_öode
 * 
	$dú_«mei
(c⁄° * 
∑th«me
,

316 * 
«mñí
, c⁄° ** 
«me
, 
m_öode
 * 
ba£
)

318 
c
;

319 c⁄° * 
ba£«me
;

320 
m_öode
 * 
dú
;

322 i‡(!(
dú
 = 
	`gë_dú
(
∑th«me
,
ba£
)))

323  
NULL
;

324 
ba£«me
 = 
∑th«me
;

325 
c
=
	`gë_fs_byã
(
∑th«me
++))

326 i‡(
c
=='/')

327 
ba£«me
=
∑th«me
;

328 *
«mñí
 = 
∑th«me
-
ba£«me
-1;

329 *
«me
 = 
ba£«me
;

330  
dú
;

331 
	}
}

333 
m_öode
 * 
	$_«mei
(c⁄° * 
∑th«me
, 
m_öode
 * 
ba£
,

334 
fﬁlow_löks
)

336 c⁄° * 
ba£«me
;

337 
ör
,
«mñí
;

338 
m_öode
 * 
öode
;

339 
buf„r_hód
 * 
bh
;

340 
dú_íåy
 * 
de
;

342 i‡(!(
ba£
 = 
	`dú_«mei
(
∑th«me
,&
«mñí
,&
ba£«me
,base)))

343  
NULL
;

344 i‡(!
«mñí
)

345  
ba£
;

346 
bh
 = 
	`föd_íåy
(&
ba£
,
ba£«me
,
«mñí
,&
de
);

347 i‡(!
bh
) {

348 
	`ùut
(
ba£
);

349  
NULL
;

351 
ör
 = 
de
->
öode
;

352 
	`bªl£
(
bh
);

353 i‡(!(
öode
 = 
	`igë
(
ba£
->
i_dev
,
ör
))) {

354 
	`ùut
(
ba£
);

355  
NULL
;

357 i‡(
fﬁlow_löks
)

358 
öode
 = 
	`fﬁlow_lök
(
ba£
,inode);

360 
	`ùut
(
ba£
);

361 
öode
->
i_©ime
=
CURRENT_TIME
;

362 
öode
->
i_dút
=1;

363  
öode
;

364 
	}
}

366 
m_öode
 * 
	$ amei
(c⁄° * 
∑th«me
)

368  
	`_«mei
(
∑th«me
, 
NULL
, 0);

369 
	}
}

378 
m_öode
 * 
	$«mei
(c⁄° * 
∑th«me
)

380  
	`_«mei
(
∑th«me
,
NULL
,1);

381 
	}
}

388 
	$›í_«mei
(c⁄° * 
∑th«me
, 
Êag
, 
mode
,

389 
m_öode
 ** 
ªs_öode
)

391 c⁄° * 
ba£«me
;

392 
ör
,
dev
,
«mñí
;

393 
m_öode
 * 
dú
, *
öode
;

394 
buf„r_hód
 * 
bh
;

395 
dú_íåy
 * 
de
;

397 i‡((
Êag
 & 
O_TRUNC
Ë&& !(Êag & 
O_ACCMODE
))

398 
Êag
 |
O_WRONLY
;

399 
mode
 &0777 & ~
cuºít
->
umask
;

400 
mode
 |
I_REGULAR
;

401 i‡(!(
dú
 = 
	`dú_«mei
(
∑th«me
,&
«mñí
,&
ba£«me
,
NULL
)))

402  -
ENOENT
;

403 i‡(!
«mñí
) {

404 i‡(!(
Êag
 & (
O_ACCMODE
|
O_CREAT
|
O_TRUNC
))) {

405 *
ªs_öode
=
dú
;

408 
	`ùut
(
dú
);

409  -
EISDIR
;

411 
bh
 = 
	`föd_íåy
(&
dú
,
ba£«me
,
«mñí
,&
de
);

412 i‡(!
bh
) {

413 i‡(!(
Êag
 & 
O_CREAT
)) {

414 
	`ùut
(
dú
);

415  -
ENOENT
;

417 i‡(!
	`≥rmissi⁄
(
dú
,
MAY_WRITE
)) {

418 
	`ùut
(
dú
);

419  -
EACCES
;

421 
öode
 = 
	`√w_öode
(
dú
->
i_dev
);

422 i‡(!
öode
) {

423 
	`ùut
(
dú
);

424  -
ENOSPC
;

426 
öode
->
i_uid
 = 
cuºít
->
euid
;

427 
öode
->
i_mode
 = 
mode
;

428 
öode
->
i_dút
 = 1;

429 
bh
 = 
	`add_íåy
(
dú
,
ba£«me
,
«mñí
,&
de
);

430 i‡(!
bh
) {

431 
öode
->
i_∆öks
--;

432 
	`ùut
(
öode
);

433 
	`ùut
(
dú
);

434  -
ENOSPC
;

436 
de
->
öode
 = inode->
i_num
;

437 
bh
->
b_dút
 = 1;

438 
	`bªl£
(
bh
);

439 
	`ùut
(
dú
);

440 *
ªs_öode
 = 
öode
;

443 
ör
 = 
de
->
öode
;

444 
dev
 = 
dú
->
i_dev
;

445 
	`bªl£
(
bh
);

446 i‡(
Êag
 & 
O_EXCL
) {

447 
	`ùut
(
dú
);

448  -
EEXIST
;

450 i‡(!(
öode
 = 
	`fﬁlow_lök
(
dú
,
	`igë
(
dev
,
ör
))))

451  -
EACCES
;

452 i‡((
	`S_ISDIR
(
öode
->
i_mode
Ë&& (
Êag
 & 
O_ACCMODE
)) ||

453 !
	`≥rmissi⁄
(
öode
,
	`ACC_MODE
(
Êag
))) {

454 
	`ùut
(
öode
);

455  -
EPERM
;

457 
öode
->
i_©ime
 = 
CURRENT_TIME
;

458 i‡(
Êag
 & 
O_TRUNC
)

459 
	`åunˇã
(
öode
);

460 *
ªs_öode
 = 
öode
;

462 
	}
}

464 
	$sys_mknod
(c⁄° * 
fûíame
, 
mode
, 
dev
)

466 c⁄° * 
ba£«me
;

467 
«mñí
;

468 
m_öode
 * 
dú
, * 
öode
;

469 
buf„r_hód
 * 
bh
;

470 
dú_íåy
 * 
de
;

472 i‡(!
	`su£r
())

473  -
EPERM
;

474 i‡(!(
dú
 = 
	`dú_«mei
(
fûíame
,&
«mñí
,&
ba£«me
, 
NULL
)))

475  -
ENOENT
;

476 i‡(!
«mñí
) {

477 
	`ùut
(
dú
);

478  -
ENOENT
;

480 i‡(!
	`≥rmissi⁄
(
dú
,
MAY_WRITE
)) {

481 
	`ùut
(
dú
);

482  -
EPERM
;

484 
bh
 = 
	`föd_íåy
(&
dú
,
ba£«me
,
«mñí
,&
de
);

485 i‡(
bh
) {

486 
	`bªl£
(
bh
);

487 
	`ùut
(
dú
);

488  -
EEXIST
;

490 
öode
 = 
	`√w_öode
(
dú
->
i_dev
);

491 i‡(!
öode
) {

492 
	`ùut
(
dú
);

493  -
ENOSPC
;

495 
öode
->
i_mode
 = 
mode
;

496 i‡(
	`S_ISBLK
(
mode
Ë|| 
	`S_ISCHR
(mode))

497 
öode
->
i_z⁄e
[0] = 
dev
;

498 
öode
->
i_mtime
 = inode->
i_©ime
 = 
CURRENT_TIME
;

499 
öode
->
i_dút
 = 1;

500 
bh
 = 
	`add_íåy
(
dú
,
ba£«me
,
«mñí
,&
de
);

501 i‡(!
bh
) {

502 
	`ùut
(
dú
);

503 
öode
->
i_∆öks
=0;

504 
	`ùut
(
öode
);

505  -
ENOSPC
;

507 
de
->
öode
 = inode->
i_num
;

508 
bh
->
b_dút
 = 1;

509 
	`ùut
(
dú
);

510 
	`ùut
(
öode
);

511 
	`bªl£
(
bh
);

513 
	}
}

515 
	$sys_mkdú
(c⁄° * 
∑th«me
, 
mode
)

517 c⁄° * 
ba£«me
;

518 
«mñí
;

519 
m_öode
 * 
dú
, * 
öode
;

520 
buf„r_hód
 * 
bh
, *
dú_block
;

521 
dú_íåy
 * 
de
;

523 i‡(!(
dú
 = 
	`dú_«mei
(
∑th«me
,&
«mñí
,&
ba£«me
, 
NULL
)))

524  -
ENOENT
;

525 i‡(!
«mñí
) {

526 
	`ùut
(
dú
);

527  -
ENOENT
;

529 i‡(!
	`≥rmissi⁄
(
dú
,
MAY_WRITE
)) {

530 
	`ùut
(
dú
);

531  -
EPERM
;

533 
bh
 = 
	`föd_íåy
(&
dú
,
ba£«me
,
«mñí
,&
de
);

534 i‡(
bh
) {

535 
	`bªl£
(
bh
);

536 
	`ùut
(
dú
);

537  -
EEXIST
;

539 
öode
 = 
	`√w_öode
(
dú
->
i_dev
);

540 i‡(!
öode
) {

541 
	`ùut
(
dú
);

542  -
ENOSPC
;

544 
öode
->
i_size
 = 32;

545 
öode
->
i_dút
 = 1;

546 
öode
->
i_mtime
 = inode->
i_©ime
 = 
CURRENT_TIME
;

547 i‡(!(
öode
->
i_z⁄e
[0]=
	`√w_block
(öode->
i_dev
))) {

548 
	`ùut
(
dú
);

549 
öode
->
i_∆öks
--;

550 
	`ùut
(
öode
);

551  -
ENOSPC
;

553 
öode
->
i_dút
 = 1;

554 i‡(!(
dú_block
=
	`bªad
(
öode
->
i_dev
,öode->
i_z⁄e
[0]))) {

555 
	`ùut
(
dú
);

556 
öode
->
i_∆öks
--;

557 
	`ùut
(
öode
);

558  -
ERROR
;

560 
de
 = (
dú_íåy
 *Ë
dú_block
->
b_d©a
;

561 
de
->
öode
=öode->
i_num
;

562 
	`°r˝y
(
de
->
«me
,".");

563 
de
++;

564 
de
->
öode
 = 
dú
->
i_num
;

565 
	`°r˝y
(
de
->
«me
,"..");

566 
öode
->
i_∆öks
 = 2;

567 
dú_block
->
b_dút
 = 1;

568 
	`bªl£
(
dú_block
);

569 
öode
->
i_mode
 = 
I_DIRECTORY
 | (
mode
 & 0777 & ~
cuºít
->
umask
);

570 
öode
->
i_dút
 = 1;

571 
bh
 = 
	`add_íåy
(
dú
,
ba£«me
,
«mñí
,&
de
);

572 i‡(!
bh
) {

573 
	`ùut
(
dú
);

574 
öode
->
i_∆öks
=0;

575 
	`ùut
(
öode
);

576  -
ENOSPC
;

578 
de
->
öode
 = inode->
i_num
;

579 
bh
->
b_dút
 = 1;

580 
dú
->
i_∆öks
++;

581 
dú
->
i_dút
 = 1;

582 
	`ùut
(
dú
);

583 
	`ùut
(
öode
);

584 
	`bªl£
(
bh
);

586 
	}
}

591 
	$em±y_dú
(
m_öode
 * 
öode
)

593 
ƒ
,
block
;

594 
Àn
;

595 
buf„r_hód
 * 
bh
;

596 
dú_íåy
 * 
de
;

598 
Àn
 = 
öode
->
i_size
 /  (
dú_íåy
);

599 i‡(
Àn
<2 || !
öode
->
i_z⁄e
[0] ||

600 !(
bh
=
	`bªad
(
öode
->
i_dev
,öode->
i_z⁄e
[0]))) {

601 
	`¥ötk
("w¨nög - bad dúe˘‹y o¿dev %04x\n",
öode
->
i_dev
);

604 
de
 = (
dú_íåy
 *Ë
bh
->
b_d©a
;

605 i‡(
de
[0].
öode
 !öode->
i_num
 || !de[1].inode ||

606 
	`°rcmp
(".",
de
[0].
«me
) || strcmp("..",de[1].name)) {

607 
	`¥ötk
("w¨nög - bad dúe˘‹y o¿dev %04x\n",
öode
->
i_dev
);

610 
ƒ
 = 2;

611 
de
 += 2;

612 
ƒ
<
Àn
) {

613 i‡((*Ë
de
 >(*Ë(
bh
->
b_d©a
+
BLOCK_SIZE
)) {

614 
	`bªl£
(
bh
);

615 
block
=
	`bm≠
(
öode
,
ƒ
/
DIR_ENTRIES_PER_BLOCK
);

616 i‡(!
block
) {

617 
ƒ
 +
DIR_ENTRIES_PER_BLOCK
;

620 i‡(!(
bh
=
	`bªad
(
öode
->
i_dev
,
block
)))

622 
de
 = (
dú_íåy
 *Ë
bh
->
b_d©a
;

624 i‡(
de
->
öode
) {

625 
	`bªl£
(
bh
);

628 
de
++;

629 
ƒ
++;

631 
	`bªl£
(
bh
);

633 
	}
}

635 
	$sys_rmdú
(c⁄° * 
«me
)

637 c⁄° * 
ba£«me
;

638 
«mñí
;

639 
m_öode
 * 
dú
, * 
öode
;

640 
buf„r_hód
 * 
bh
;

641 
dú_íåy
 * 
de
;

643 i‡(!(
dú
 = 
	`dú_«mei
(
«me
,&
«mñí
,&
ba£«me
, 
NULL
)))

644  -
ENOENT
;

645 i‡(!
«mñí
) {

646 
	`ùut
(
dú
);

647  -
ENOENT
;

649 i‡(!
	`≥rmissi⁄
(
dú
,
MAY_WRITE
)) {

650 
	`ùut
(
dú
);

651  -
EPERM
;

653 
bh
 = 
	`föd_íåy
(&
dú
,
ba£«me
,
«mñí
,&
de
);

654 i‡(!
bh
) {

655 
	`ùut
(
dú
);

656  -
ENOENT
;

658 i‡(!(
öode
 = 
	`igë
(
dú
->
i_dev
, 
de
->inode))) {

659 
	`ùut
(
dú
);

660 
	`bªl£
(
bh
);

661  -
EPERM
;

663 i‡((
dú
->
i_mode
 & 
S_ISVTX
Ë&& 
cuºít
->
euid
 &&

664 
öode
->
i_uid
 !
cuºít
->
euid
) {

665 
	`ùut
(
dú
);

666 
	`ùut
(
öode
);

667 
	`bªl£
(
bh
);

668  -
EPERM
;

670 i‡(
öode
->
i_dev
 !
dú
->i_dev || inode->
i_cou¡
>1) {

671 
	`ùut
(
dú
);

672 
	`ùut
(
öode
);

673 
	`bªl£
(
bh
);

674  -
EPERM
;

676 i‡(
öode
 =
dú
) {

677 
	`ùut
(
öode
);

678 
	`ùut
(
dú
);

679 
	`bªl£
(
bh
);

680  -
EPERM
;

682 i‡(!
	`S_ISDIR
(
öode
->
i_mode
)) {

683 
	`ùut
(
öode
);

684 
	`ùut
(
dú
);

685 
	`bªl£
(
bh
);

686  -
ENOTDIR
;

688 i‡(!
	`em±y_dú
(
öode
)) {

689 
	`ùut
(
öode
);

690 
	`ùut
(
dú
);

691 
	`bªl£
(
bh
);

692  -
ENOTEMPTY
;

694 i‡(
öode
->
i_∆öks
 != 2)

695 
	`¥ötk
("em±y dúe˘‹y ha†∆ök!=2 (%d)",
öode
->
i_∆öks
);

696 
de
->
öode
 = 0;

697 
bh
->
b_dút
 = 1;

698 
	`bªl£
(
bh
);

699 
öode
->
i_∆öks
=0;

700 
öode
->
i_dút
=1;

701 
dú
->
i_∆öks
--;

702 
dú
->
i_˘ime
 = dú->
i_mtime
 = 
CURRENT_TIME
;

703 
dú
->
i_dút
=1;

704 
	`ùut
(
dú
);

705 
	`ùut
(
öode
);

707 
	}
}

709 
	$sys_u∆ök
(c⁄° * 
«me
)

711 c⁄° * 
ba£«me
;

712 
«mñí
;

713 
m_öode
 * 
dú
, * 
öode
;

714 
buf„r_hód
 * 
bh
;

715 
dú_íåy
 * 
de
;

717 i‡(!(
dú
 = 
	`dú_«mei
(
«me
,&
«mñí
,&
ba£«me
, 
NULL
)))

718  -
ENOENT
;

719 i‡(!
«mñí
) {

720 
	`ùut
(
dú
);

721  -
ENOENT
;

723 i‡(!
	`≥rmissi⁄
(
dú
,
MAY_WRITE
)) {

724 
	`ùut
(
dú
);

725  -
EPERM
;

727 
bh
 = 
	`föd_íåy
(&
dú
,
ba£«me
,
«mñí
,&
de
);

728 i‡(!
bh
) {

729 
	`ùut
(
dú
);

730  -
ENOENT
;

732 i‡(!(
öode
 = 
	`igë
(
dú
->
i_dev
, 
de
->inode))) {

733 
	`ùut
(
dú
);

734 
	`bªl£
(
bh
);

735  -
ENOENT
;

737 i‡((
dú
->
i_mode
 & 
S_ISVTX
Ë&& !
	`su£r
() &&

738 
cuºít
->
euid
 !
öode
->
i_uid
 &&

739 
cuºít
->
euid
 !
dú
->
i_uid
) {

740 
	`ùut
(
dú
);

741 
	`ùut
(
öode
);

742 
	`bªl£
(
bh
);

743  -
EPERM
;

745 i‡(
	`S_ISDIR
(
öode
->
i_mode
)) {

746 
	`ùut
(
öode
);

747 
	`ùut
(
dú
);

748 
	`bªl£
(
bh
);

749  -
EPERM
;

751 i‡(!
öode
->
i_∆öks
) {

752 
	`¥ötk
("DeletingÇonexistent file (%04x:%d), %d\n",

753 
öode
->
i_dev
,öode->
i_num
,öode->
i_∆öks
);

754 
öode
->
i_∆öks
=1;

756 
de
->
öode
 = 0;

757 
bh
->
b_dút
 = 1;

758 
	`bªl£
(
bh
);

759 
öode
->
i_∆öks
--;

760 
öode
->
i_dút
 = 1;

761 
öode
->
i_˘ime
 = 
CURRENT_TIME
;

762 
	`ùut
(
öode
);

763 
	`ùut
(
dú
);

765 
	}
}

767 
	$sys_symlök
(c⁄° * 
ﬁd«me
, c⁄° * 
√w«me
)

769 
dú_íåy
 * 
de
;

770 
m_öode
 * 
dú
, * 
öode
;

771 
buf„r_hód
 * 
bh
, * 
«me_block
;

772 c⁄° * 
ba£«me
;

773 
«mñí
, 
i
;

774 
c
;

776 
dú
 = 
	`dú_«mei
(
√w«me
,&
«mñí
,&
ba£«me
, 
NULL
);

777 i‡(!
dú
)

778  -
EACCES
;

779 i‡(!
«mñí
) {

780 
	`ùut
(
dú
);

781  -
EPERM
;

783 i‡(!
	`≥rmissi⁄
(
dú
,
MAY_WRITE
)) {

784 
	`ùut
(
dú
);

785  -
EACCES
;

787 i‡(!(
öode
 = 
	`√w_öode
(
dú
->
i_dev
))) {

788 
	`ùut
(
dú
);

789  -
ENOSPC
;

791 
öode
->
i_mode
 = 
S_IFLNK
 | (0777 & ~
cuºít
->
umask
);

792 
öode
->
i_dút
 = 1;

793 i‡(!(
öode
->
i_z⁄e
[0]=
	`√w_block
(öode->
i_dev
))) {

794 
	`ùut
(
dú
);

795 
öode
->
i_∆öks
--;

796 
	`ùut
(
öode
);

797  -
ENOSPC
;

799 
öode
->
i_dút
 = 1;

800 i‡(!(
«me_block
=
	`bªad
(
öode
->
i_dev
,öode->
i_z⁄e
[0]))) {

801 
	`ùut
(
dú
);

802 
öode
->
i_∆öks
--;

803 
	`ùut
(
öode
);

804  -
ERROR
;

806 
i
 = 0;

807 
i
 < 1023 && (
c
=
	`gë_fs_byã
(
ﬁd«me
++)))

808 
«me_block
->
b_d©a
[
i
++] = 
c
;

809 
«me_block
->
b_d©a
[
i
] = 0;

810 
«me_block
->
b_dút
 = 1;

811 
	`bªl£
(
«me_block
);

812 
öode
->
i_size
 = 
i
;

813 
öode
->
i_dút
 = 1;

814 
bh
 = 
	`föd_íåy
(&
dú
,
ba£«me
,
«mñí
,&
de
);

815 i‡(
bh
) {

816 
öode
->
i_∆öks
--;

817 
	`ùut
(
öode
);

818 
	`bªl£
(
bh
);

819 
	`ùut
(
dú
);

820  -
EEXIST
;

822 
bh
 = 
	`add_íåy
(
dú
,
ba£«me
,
«mñí
,&
de
);

823 i‡(!
bh
) {

824 
öode
->
i_∆öks
--;

825 
	`ùut
(
öode
);

826 
	`ùut
(
dú
);

827  -
ENOSPC
;

829 
de
->
öode
 = inode->
i_num
;

830 
bh
->
b_dút
 = 1;

831 
	`bªl£
(
bh
);

832 
	`ùut
(
dú
);

833 
	`ùut
(
öode
);

835 
	}
}

837 
	$sys_lök
(c⁄° * 
ﬁd«me
, c⁄° * 
√w«me
)

839 
dú_íåy
 * 
de
;

840 
m_öode
 * 
ﬁdöode
, * 
dú
;

841 
buf„r_hód
 * 
bh
;

842 c⁄° * 
ba£«me
;

843 
«mñí
;

845 
ﬁdöode
=
	`«mei
(
ﬁd«me
);

846 i‡(!
ﬁdöode
)

847  -
ENOENT
;

848 i‡(
	`S_ISDIR
(
ﬁdöode
->
i_mode
)) {

849 
	`ùut
(
ﬁdöode
);

850  -
EPERM
;

852 
dú
 = 
	`dú_«mei
(
√w«me
,&
«mñí
,&
ba£«me
, 
NULL
);

853 i‡(!
dú
) {

854 
	`ùut
(
ﬁdöode
);

855  -
EACCES
;

857 i‡(!
«mñí
) {

858 
	`ùut
(
ﬁdöode
);

859 
	`ùut
(
dú
);

860  -
EPERM
;

862 i‡(
dú
->
i_dev
 !
ﬁdöode
->i_dev) {

863 
	`ùut
(
dú
);

864 
	`ùut
(
ﬁdöode
);

865  -
EXDEV
;

867 i‡(!
	`≥rmissi⁄
(
dú
,
MAY_WRITE
)) {

868 
	`ùut
(
dú
);

869 
	`ùut
(
ﬁdöode
);

870  -
EACCES
;

872 
bh
 = 
	`föd_íåy
(&
dú
,
ba£«me
,
«mñí
,&
de
);

873 i‡(
bh
) {

874 
	`bªl£
(
bh
);

875 
	`ùut
(
dú
);

876 
	`ùut
(
ﬁdöode
);

877  -
EEXIST
;

879 
bh
 = 
	`add_íåy
(
dú
,
ba£«me
,
«mñí
,&
de
);

880 i‡(!
bh
) {

881 
	`ùut
(
dú
);

882 
	`ùut
(
ﬁdöode
);

883  -
ENOSPC
;

885 
de
->
öode
 = 
ﬁdöode
->
i_num
;

886 
bh
->
b_dút
 = 1;

887 
	`bªl£
(
bh
);

888 
	`ùut
(
dú
);

889 
ﬁdöode
->
i_∆öks
++;

890 
ﬁdöode
->
i_˘ime
 = 
CURRENT_TIME
;

891 
ﬁdöode
->
i_dút
 = 1;

892 
	`ùut
(
ﬁdöode
);

894 
	}
}

	@fs/open.c

7 
	~<°rög.h
>

8 
	~<î∫o.h
>

9 
	~<f˙é.h
>

10 
	~<sys/ty≥s.h
>

11 
	~<utime.h
>

12 
	~<sys/°©.h
>

14 
	~<löux/sched.h
>

15 
	~<löux/ây.h
>

16 
	~<löux/kî√l.h
>

18 
	~<asm/£gmít.h
>

20 
	$sys_u°©
(
dev
, 
u°©
 * 
ubuf
)

22  -
ENOSYS
;

23 
	}
}

25 
	$sys_utime
(* 
fûíame
, 
utimbuf
 * 
times
)

27 
m_öode
 * 
öode
;

28 
a˘ime
,
modtime
;

30 i‡(!(
öode
=
	`«mei
(
fûíame
)))

31  -
ENOENT
;

32 i‡(
times
) {

33 
a˘ime
 = 
	`gë_fs_l⁄g
((*Ë&
times
->actime);

34 
modtime
 = 
	`gë_fs_l⁄g
((*Ë&
times
->modtime);

36 
a˘ime
 = 
modtime
 = 
CURRENT_TIME
;

37 
öode
->
i_©ime
 = 
a˘ime
;

38 
öode
->
i_mtime
 = 
modtime
;

39 
öode
->
i_dút
 = 1;

40 
	`ùut
(
öode
);

42 
	}
}

48 
	$sys_ac˚ss
(c⁄° * 
fûíame
,
mode
)

50 
m_öode
 * 
öode
;

51 
ªs
, 
i_mode
;

53 
mode
 &= 0007;

54 i‡(!(
öode
=
	`«mei
(
fûíame
)))

55  -
EACCES
;

56 
i_mode
 = 
ªs
 = 
öode
->i_mode & 0777;

57 
	`ùut
(
öode
);

58 i‡(
cuºít
->
uid
 =
öode
->
i_uid
)

59 
ªs
 >>= 6;

60 i‡(
cuºít
->
gid
 =
öode
->
i_gid
)

61 
ªs
 >>= 6;

62 i‡((
ªs
 & 0007 & 
mode
) == mode)

70 i‡((!
cuºít
->
uid
) &&

71 (!(
mode
 & 1Ë|| (
i_mode
 & 0111)))

73  -
EACCES
;

74 
	}
}

76 
	$sys_chdú
(c⁄° * 
fûíame
)

78 
m_öode
 * 
öode
;

80 i‡(!(
öode
 = 
	`«mei
(
fûíame
)))

81  -
ENOENT
;

82 i‡(!
	`S_ISDIR
(
öode
->
i_mode
)) {

83 
	`ùut
(
öode
);

84  -
ENOTDIR
;

86 
	`ùut
(
cuºít
->
pwd
);

87 
cuºít
->
pwd
 = 
öode
;

89 
	}
}

91 
	$sys_chroŸ
(c⁄° * 
fûíame
)

93 
m_öode
 * 
öode
;

95 i‡(!(
öode
=
	`«mei
(
fûíame
)))

96  -
ENOENT
;

97 i‡(!
	`S_ISDIR
(
öode
->
i_mode
)) {

98 
	`ùut
(
öode
);

99  -
ENOTDIR
;

101 
	`ùut
(
cuºít
->
roŸ
);

102 
cuºít
->
roŸ
 = 
öode
;

104 
	}
}

106 
	$sys_chmod
(c⁄° * 
fûíame
,
mode
)

108 
m_öode
 * 
öode
;

110 i‡(!(
öode
=
	`«mei
(
fûíame
)))

111  -
ENOENT
;

112 i‡((
cuºít
->
euid
 !
öode
->
i_uid
Ë&& !
	`su£r
()) {

113 
	`ùut
(
öode
);

114  -
EACCES
;

116 
öode
->
i_mode
 = (
mode
 & 07777) | (inode->i_mode & ~07777);

117 
öode
->
i_dút
 = 1;

118 
	`ùut
(
öode
);

120 
	}
}

122 
	$sys_chown
(c⁄° * 
fûíame
,
uid
,
gid
)

124 
m_öode
 * 
öode
;

126 i‡(!(
öode
=
	`«mei
(
fûíame
)))

127  -
ENOENT
;

128 i‡(!
	`su£r
()) {

129 
	`ùut
(
öode
);

130  -
EACCES
;

132 
öode
->
i_uid
=
uid
;

133 
öode
->
i_gid
=
gid
;

134 
öode
->
i_dút
=1;

135 
	`ùut
(
öode
);

137 
	}
}

139 
	$check_ch¨_dev
(
m_öode
 * 
öode
, 
dev
, 
Êag
)

141 
ây_°ru˘
 *
ây
;

142 
mö
;

144 i‡(
	`MAJOR
(
dev
) == 4 || MAJOR(dev) == 5) {

145 i‡(
	`MAJOR
(
dev
) == 5)

146 
mö
 = 
cuºít
->
ây
;

148 
mö
 = 
	`MINOR
(
dev
);

149 i‡(
mö
 < 0)

151 i‡((
	`IS_A_PTY_MASTER
(
mö
)Ë&& (
öode
->
i_cou¡
>1))

153 
ây
 = 
	`TTY_TABLE
(
mö
);

154 i‡(!(
Êag
 & 
O_NOCTTY
) &&

155 
cuºít
->
Àadî
 &&

156 
cuºít
->
ây
<0 &&

157 
ây
->
£ssi⁄
==0) {

158 
cuºít
->
ây
 = 
mö
;

159 
ây
->
£ssi⁄

cuºít
->session;

160 
ây
->
pgΩ
 = 
cuºít
->pgrp;

162 i‡(
Êag
 & 
O_NONBLOCK
) {

163 
	`TTY_TABLE
(
mö
)->
ãrmios
.
c_cc
[
VMIN
] =0;

164 
	`TTY_TABLE
(
mö
)->
ãrmios
.
c_cc
[
VTIME
] =0;

165 
	`TTY_TABLE
(
mö
)->
ãrmios
.
c_lÊag
 &~
ICANON
;

169 
	}
}

171 
	$sys_›í
(c⁄° * 
fûíame
,
Êag
,
mode
)

173 
m_öode
 * 
öode
;

174 
fûe
 * 
f
;

175 
i
,
fd
;

177 
mode
 &0777 & ~
cuºít
->
umask
;

178 
fd
=0 ; fd<
NR_OPEN
 ; fd++)

179 i‡(!
cuºít
->
fûp
[
fd
])

181 i‡(
fd
>=
NR_OPEN
)

182  -
EINVAL
;

183 
cuºít
->
˛o£_⁄_exec
 &~(1<<
fd
);

184 
f
=0+
fûe_èbÀ
;

185 
i
=0 ; i<
NR_FILE
 ; i++,
f
++)

186 i‡(!
f
->
f_cou¡
) ;

187 i‡(
i
>=
NR_FILE
)

188  -
EINVAL
;

189 (
cuºít
->
fûp
[
fd
]=
f
)->
f_cou¡
++;

190 i‡((
i
=
	`›í_«mei
(
fûíame
,
Êag
,
mode
,&
öode
))<0) {

191 
cuºít
->
fûp
[
fd
]=
NULL
;

192 
f
->
f_cou¡
=0;

193  
i
;

196 i‡(
	`S_ISCHR
(
öode
->
i_mode
))

197 i‡(
	`check_ch¨_dev
(
öode
,öode->
i_z⁄e
[0],
Êag
)) {

198 
	`ùut
(
öode
);

199 
cuºít
->
fûp
[
fd
]=
NULL
;

200 
f
->
f_cou¡
=0;

201  -
EAGAIN
;

204 i‡(
	`S_ISBLK
(
öode
->
i_mode
))

205 
	`check_disk_ch™ge
(
öode
->
i_z⁄e
[0]);

206 
f
->
f_mode
 = 
öode
->
i_mode
;

207 
f
->
f_Êags
 = 
Êag
;

208 
f
->
f_cou¡
 = 1;

209 
f
->
f_öode
 = 
öode
;

210 
f
->
f_pos
 = 0;

211  (
fd
);

212 
	}
}

214 
	$sys_¸ót
(c⁄° * 
∑th«me
, 
mode
)

216  
	`sys_›í
(
∑th«me
, 
O_CREAT
 | 
O_TRUNC
, 
mode
);

217 
	}
}

219 
	$sys_˛o£
(
fd
)

221 
fûe
 * 
fûp
;

223 i‡(
fd
 >
NR_OPEN
)

224  -
EINVAL
;

225 
cuºít
->
˛o£_⁄_exec
 &~(1<<
fd
);

226 i‡(!(
fûp
 = 
cuºít
->fûp[
fd
]))

227  -
EINVAL
;

228 
cuºít
->
fûp
[
fd
] = 
NULL
;

229 i‡(
fûp
->
f_cou¡
 == 0)

230 
	`∑nic
("Close: file count is 0");

231 i‡(--
fûp
->
f_cou¡
)

233 
	`ùut
(
fûp
->
f_öode
);

235 
	}
}

	@fs/pipe.c

7 
	~<sig«l.h
>

8 
	~<î∫o.h
>

9 
	~<ãrmios.h
>

11 
	~<löux/sched.h
>

12 
	~<löux/mm.h
>

13 
	~<asm/£gmít.h
>

14 
	~<löux/kî√l.h
>

16 
	$ªad_pùe
(
m_öode
 * 
öode
, * 
buf
, 
cou¡
)

18 
ch¨s
, 
size
, 
ªad
 = 0;

20 
cou¡
>0) {

21 !(
size
=
	`PIPE_SIZE
(*
öode
))) {

22 
	`wake_up
(& 
	`PIPE_WRITE_WAIT
(*
öode
));

23 i‡(
öode
->
i_cou¡
 != 2)

24  
ªad
;

25 i‡(
cuºít
->
sig«l
 & ~cuºít->
blocked
)

26  
ªad
?ªad:-
ERESTARTSYS
;

27 
	`öãºu±ibÀ_¶ìp_⁄
(& 
	`PIPE_READ_WAIT
(*
öode
));

29 
ch¨s
 = 
PAGE_SIZE
-
	`PIPE_TAIL
(*
öode
);

30 i‡(
ch¨s
 > 
cou¡
)

31 
ch¨s
 = 
cou¡
;

32 i‡(
ch¨s
 > 
size
)

33 
ch¨s
 = 
size
;

34 
cou¡
 -
ch¨s
;

35 
ªad
 +
ch¨s
;

36 
size
 = 
	`PIPE_TAIL
(*
öode
);

37 
	`PIPE_TAIL
(*
öode
Ë+
ch¨s
;

38 
	`PIPE_TAIL
(*
öode
Ë&(
PAGE_SIZE
-1);

39 
ch¨s
-->0)

40 
	`put_fs_byã
(((*)
öode
->
i_size
)[
size
++],
buf
++);

42 
	`wake_up
(& 
	`PIPE_WRITE_WAIT
(*
öode
));

43  
ªad
;

44 
	}
}

46 
	$wrôe_pùe
(
m_öode
 * 
öode
, * 
buf
, 
cou¡
)

48 
ch¨s
, 
size
, 
wrôãn
 = 0;

50 
cou¡
>0) {

51 !(
size
=(
PAGE_SIZE
-1)-
	`PIPE_SIZE
(*
öode
))) {

52 
	`wake_up
(& 
	`PIPE_READ_WAIT
(*
öode
));

53 i‡(
öode
->
i_cou¡
 != 2) {

54 
cuºít
->
sig«l
 |(1<<(
SIGPIPE
-1));

55  
wrôãn
?written:-1;

57 
	`¶ìp_⁄
(& 
	`PIPE_WRITE_WAIT
(*
öode
));

59 
ch¨s
 = 
PAGE_SIZE
-
	`PIPE_HEAD
(*
öode
);

60 i‡(
ch¨s
 > 
cou¡
)

61 
ch¨s
 = 
cou¡
;

62 i‡(
ch¨s
 > 
size
)

63 
ch¨s
 = 
size
;

64 
cou¡
 -
ch¨s
;

65 
wrôãn
 +
ch¨s
;

66 
size
 = 
	`PIPE_HEAD
(*
öode
);

67 
	`PIPE_HEAD
(*
öode
Ë+
ch¨s
;

68 
	`PIPE_HEAD
(*
öode
Ë&(
PAGE_SIZE
-1);

69 
ch¨s
-->0)

70 ((*)
öode
->
i_size
)[
size
++]=
	`gë_fs_byã
(
buf
++);

72 
	`wake_up
(& 
	`PIPE_READ_WAIT
(*
öode
));

73  
wrôãn
;

74 
	}
}

76 
	$sys_pùe
(* 
fûdes
)

78 
m_öode
 * 
öode
;

79 
fûe
 * 
f
[2];

80 
fd
[2];

81 
i
,
j
;

83 
j
=0;

84 
i
=0;
j
<2 && i<
NR_FILE
;i++)

85 i‡(!
fûe_èbÀ
[
i
].
f_cou¡
)

86 (
f
[
j
++]=
i
+
fûe_èbÀ
)->
f_cou¡
++;

87 i‡(
j
==1)

88 
f
[0]->
f_cou¡
=0;

89 i‡(
j
<2)

91 
j
=0;

92 
i
=0;
j
<2 && i<
NR_OPEN
;i++)

93 i‡(!
cuºít
->
fûp
[
i
]) {

94 
cuºít
->
fûp
[ 
fd
[
j
]=
i
 ] = 
f
[j];

95 
j
++;

97 i‡(
j
==1)

98 
cuºít
->
fûp
[
fd
[0]]=
NULL
;

99 i‡(
j
<2) {

100 
f
[0]->
f_cou¡
=f[1]->f_count=0;

103 i‡(!(
öode
=
	`gë_pùe_öode
())) {

104 
cuºít
->
fûp
[
fd
[0]] =

105 
cuºít
->
fûp
[
fd
[1]] = 
NULL
;

106 
f
[0]->
f_cou¡
 = f[1]->f_count = 0;

109 
f
[0]->
f_öode
 = f[1]->f_öodê
öode
;

110 
f
[0]->
f_pos
 = f[1]->f_pos = 0;

111 
f
[0]->
f_mode
 = 1;

112 
f
[1]->
f_mode
 = 2;

113 
	`put_fs_l⁄g
(
fd
[0],0+
fûdes
);

114 
	`put_fs_l⁄g
(
fd
[1],1+
fûdes
);

116 
	}
}

118 
	$pùe_io˘l
(
m_öode
 *
pöo
, 
cmd
, 
¨g
)

120 
cmd
) {

121 
FIONREAD
:

122 
	`vîify_¨ó
((*Ë
¨g
,4);

123 
	`put_fs_l⁄g
(
	`PIPE_SIZE
(*
pöo
),(*Ë
¨g
);

126  -
EINVAL
;

128 
	}
}

	@fs/read_write.c

7 
	~<sys/°©.h
>

8 
	~<î∫o.h
>

9 
	~<sys/ty≥s.h
>

11 
	~<löux/kî√l.h
>

12 
	~<löux/sched.h
>

13 
	~<asm/£gmít.h
>

15 
rw_ch¨
(
rw
,
dev
, * 
buf
, 
cou¡
, 
off_t
 * 
pos
);

16 
ªad_pùe
(
m_öode
 * 
öode
, * 
buf
, 
cou¡
);

17 
wrôe_pùe
(
m_öode
 * 
öode
, * 
buf
, 
cou¡
);

18 
block_ªad
(
dev
, 
off_t
 * 
pos
, * 
buf
, 
cou¡
);

19 
block_wrôe
(
dev
, 
off_t
 * 
pos
, * 
buf
, 
cou¡
);

20 
fûe_ªad
(
m_öode
 * 
öode
, 
fûe
 * 
fûp
,

21 * 
buf
, 
cou¡
);

22 
fûe_wrôe
(
m_öode
 * 
öode
, 
fûe
 * 
fûp
,

23 * 
buf
, 
cou¡
);

25 
	$sys_l£ek
(
fd
,
off_t
 
off£t
, 
‹igö
)

27 
fûe
 * file;

28 
tmp
;

30 i‡(
fd
 >
NR_OPEN
 || !(
fûe
=
cuºít
->
fûp
[fd]Ë|| !(fûe->
f_öode
)

31 || !
	`IS_SEEKABLE
(
	`MAJOR
(
fûe
->
f_öode
->
i_dev
)))

32  -
EBADF
;

33 i‡(
fûe
->
f_öode
->
i_pùe
)

34  -
ESPIPE
;

35 
‹igö
) {

37 i‡(
off£t
<0Ë -
EINVAL
;

38 
fûe
->
f_pos
=
off£t
;

41 i‡(
fûe
->
f_pos
+
off£t
<0Ë -
EINVAL
;

42 
fûe
->
f_pos
 +
off£t
;

45 i‡((
tmp
=
fûe
->
f_öode
->
i_size
+
off£t
) < 0)

46  -
EINVAL
;

47 
fûe
->
f_pos
 = 
tmp
;

50  -
EINVAL
;

52  
fûe
->
f_pos
;

53 
	}
}

55 
	$sys_ªad
(
fd
,* 
buf
,
cou¡
)

57 
fûe
 * file;

58 
m_öode
 * 
öode
;

60 i‡(
fd
>=
NR_OPEN
 || 
cou¡
<0 || !(
fûe
=
cuºít
->
fûp
[fd]))

61  -
EINVAL
;

62 i‡(!
cou¡
)

64 
	`vîify_¨ó
(
buf
,
cou¡
);

65 
öode
 = 
fûe
->
f_öode
;

66 i‡(
öode
->
i_pùe
)

67  (
fûe
->
f_mode
&1)?
	`ªad_pùe
(
öode
,
buf
,
cou¡
):-
EIO
;

68 i‡(
	`S_ISCHR
(
öode
->
i_mode
))

69  
	`rw_ch¨
(
READ
,
öode
->
i_z⁄e
[0],
buf
,
cou¡
,&
fûe
->
f_pos
);

70 i‡(
	`S_ISBLK
(
öode
->
i_mode
))

71  
	`block_ªad
(
öode
->
i_z⁄e
[0],&
fûe
->
f_pos
,
buf
,
cou¡
);

72 i‡(
	`S_ISDIR
(
öode
->
i_mode
Ë|| 
	`S_ISREG
(inode->i_mode)) {

73 i‡(
cou¡
+
fûe
->
f_pos
 > 
öode
->
i_size
)

74 
cou¡
 = 
öode
->
i_size
 - 
fûe
->
f_pos
;

75 i‡(
cou¡
<=0)

77  
	`fûe_ªad
(
öode
,
fûe
,
buf
,
cou¡
);

79 
	`¥ötk
("(Ród)öode->i_mode=%06o\n\r",
öode
->
i_mode
);

80  -
EINVAL
;

81 
	}
}

83 
	$sys_wrôe
(
fd
,* 
buf
,
cou¡
)

85 
fûe
 * file;

86 
m_öode
 * 
öode
;

88 i‡(
fd
>=
NR_OPEN
 || 
cou¡
 <0 || !(
fûe
=
cuºít
->
fûp
[fd]))

89  -
EINVAL
;

90 i‡(!
cou¡
)

92 
öode
=
fûe
->
f_öode
;

93 i‡(
öode
->
i_pùe
)

94  (
fûe
->
f_mode
&2)?
	`wrôe_pùe
(
öode
,
buf
,
cou¡
):-
EIO
;

95 i‡(
	`S_ISCHR
(
öode
->
i_mode
))

96  
	`rw_ch¨
(
WRITE
,
öode
->
i_z⁄e
[0],
buf
,
cou¡
,&
fûe
->
f_pos
);

97 i‡(
	`S_ISBLK
(
öode
->
i_mode
))

98  
	`block_wrôe
(
öode
->
i_z⁄e
[0],&
fûe
->
f_pos
,
buf
,
cou¡
);

99 i‡(
	`S_ISREG
(
öode
->
i_mode
))

100  
	`fûe_wrôe
(
öode
,
fûe
,
buf
,
cou¡
);

101 
	`¥ötk
("(Wrôe)öode->i_mode=%06o\n\r",
öode
->
i_mode
);

102  -
EINVAL
;

103 
	}
}

	@fs/select.c

8 
	~<löux/fs.h
>

9 
	~<löux/kî√l.h
>

10 
	~<löux/ây.h
>

11 
	~<löux/sched.h
>

13 
	~<asm/£gmít.h
>

14 
	~<asm/sy°em.h
>

16 
	~<sys/°©.h
>

17 
	~<sys/ty≥s.h
>

18 
	~<°rög.h
>

19 
	~<c⁄°.h
>

20 
	~<î∫o.h
>

21 
	~<sys/time.h
>

22 
	~<sig«l.h
>

38 
èsk_°ru˘
 * 
	mﬁd_èsk
;

39 
èsk_°ru˘
 ** 
	mwaô_addªss
;

40 } 
	twaô_íåy
;

43 
	mƒ
;

44 
waô_íåy
 
	míåy
[
NR_OPEN
*3];

45 } 
	t£À˘_èbÀ
;

47 
	$add_waô
(
èsk_°ru˘
 ** 
waô_addªss
, 
£À˘_èbÀ
 * 
p
)

49 
i
;

51 i‡(!
waô_addªss
)

53 
i
 = 0 ; i < 
p
->
ƒ
 ; i++)

54 i‡(
p
->
íåy
[
i
].
waô_addªss
 == wait_address)

56 
p
->
íåy
[p->
ƒ
].
waô_addªss
 = wait_address;

57 
p
->
íåy
[p->
ƒ
].
ﬁd_èsk
 = * 
waô_addªss
;

58 *
waô_addªss
 = 
cuºít
;

59 
p
->
ƒ
++;

60 
	}
}

62 
	$‰ì_waô
(
£À˘_èbÀ
 * 
p
)

64 
i
;

65 
èsk_°ru˘
 ** 
çp
;

67 
i
 = 0; i < 
p
->
ƒ
 ; i++) {

68 
çp
 = 
p
->
íåy
[
i
].
waô_addªss
;

69 *
çp
 && *ç∞!
cuºít
) {

70 (*
çp
)->
°©e
 = 0;

71 
cuºít
->
°©e
 = 
TASK_UNINTERRUPTIBLE
;

72 
	`scheduÀ
();

74 i‡(!*
çp
)

75 
	`¥ötk
("free_wait: NULL");

76 i‡(*
çp
 = 
p
->
íåy
[
i
].
ﬁd_èsk
)

77 (**
çp
).
°©e
 = 0;

79 
p
->
ƒ
 = 0;

80 
	}
}

82 
ây_°ru˘
 * 
	$gë_ây
(
m_öode
 * 
öode
)

84 
maj‹
, 
mö‹
;

86 i‡(!
	`S_ISCHR
(
öode
->
i_mode
))

87  
NULL
;

88 i‡((
maj‹
 = 
	`MAJOR
(
öode
->
i_z⁄e
[0])) != 5 && major != 4)

89  
NULL
;

90 i‡(
maj‹
 == 5)

91 
mö‹
 = 
cuºít
->
ây
;

93 
mö‹
 = 
	`MINOR
(
öode
->
i_z⁄e
[0]);

94 i‡(
mö‹
 < 0)

95  
NULL
;

96  
	`TTY_TABLE
(
mö‹
);

97 
	}
}

103 
	$check_ö
(
£À˘_èbÀ
 * 
waô
, 
m_öode
 * 
öode
)

105 
ây_°ru˘
 * 
ây
;

107 i‡(
ây
 = 
	`gë_ây
(
öode
))

108 i‡(!
	`EMPTY
(
ây
->
£c⁄d¨y
))

111 
	`add_waô
(&
ây
->
£c⁄d¨y
->
¥oc_li°
, 
waô
);

112 i‡(
öode
->
i_pùe
)

113 i‡(!
	`PIPE_EMPTY
(*
öode
))

116 
	`add_waô
(&
öode
->
i_waô
, 
waô
);

118 
	}
}

120 
	$check_out
(
£À˘_èbÀ
 * 
waô
, 
m_öode
 * 
öode
)

122 
ây_°ru˘
 * 
ây
;

124 i‡(
ây
 = 
	`gë_ây
(
öode
))

125 i‡(!
	`FULL
(
ây
->
wrôe_q
))

128 
	`add_waô
(&
ây
->
wrôe_q
->
¥oc_li°
, 
waô
);

129 i‡(
öode
->
i_pùe
)

130 i‡(!
	`PIPE_FULL
(*
öode
))

133 
	`add_waô
(&
öode
->
i_waô
, 
waô
);

135 
	}
}

137 
	$check_ex
(
£À˘_èbÀ
 * 
waô
, 
m_öode
 * 
öode
)

139 
ây_°ru˘
 * 
ây
;

141 i‡(
ây
 = 
	`gë_ây
(
öode
))

142 i‡(!
	`FULL
(
ây
->
wrôe_q
))

146 i‡(
öode
->
i_pùe
)

147 i‡(
öode
->
i_cou¡
 < 2)

150 
	`add_waô
(&
öode
->
i_waô
,
waô
);

152 
	}
}

154 
	$do_£À˘
(
fd_£t
 
ö
, fd_£à
out
, fd_£à
ex
,

155 
fd_£t
 *
öp
, fd_£à*
ouç
, fd_£à*
exp
)

157 
cou¡
;

158 
£À˘_èbÀ
 
waô_èbÀ
;

159 
i
;

160 
fd_£t
 
mask
;

162 
mask
 = 
ö
 | 
out
 | 
ex
;

163 
i
 = 0 ; i < 
NR_OPEN
 ; i++,
mask
 >>= 1) {

164 i‡(!(
mask
 & 1))

166 i‡(!
cuºít
->
fûp
[
i
])

167  -
EBADF
;

168 i‡(!
cuºít
->
fûp
[
i
]->
f_öode
)

169  -
EBADF
;

170 i‡(
cuºít
->
fûp
[
i
]->
f_öode
->
i_pùe
)

172 i‡(
	`S_ISCHR
(
cuºít
->
fûp
[
i
]->
f_öode
->
i_mode
))

174 i‡(
	`S_ISFIFO
(
cuºít
->
fûp
[
i
]->
f_öode
->
i_mode
))

176  -
EBADF
;

178 
ª≥©
:

179 
waô_èbÀ
.
ƒ
 = 0;

180 *
öp
 = *
ouç
 = *
exp
 = 0;

181 
cou¡
 = 0;

182 
mask
 = 1;

183 
i
 = 0 ; i < 
NR_OPEN
 ; i++, 
mask
 += mask) {

184 i‡(
mask
 & 
ö
)

185 i‡(
	`check_ö
(&
waô_èbÀ
,
cuºít
->
fûp
[
i
]->
f_öode
)) {

186 *
öp
 |
mask
;

187 
cou¡
++;

189 i‡(
mask
 & 
out
)

190 i‡(
	`check_out
(&
waô_èbÀ
,
cuºít
->
fûp
[
i
]->
f_öode
)) {

191 *
ouç
 |
mask
;

192 
cou¡
++;

194 i‡(
mask
 & 
ex
)

195 i‡(
	`check_ex
(&
waô_èbÀ
,
cuºít
->
fûp
[
i
]->
f_öode
)) {

196 *
exp
 |
mask
;

197 
cou¡
++;

200 i‡(!(
cuºít
->
sig«l
 & ~cuºít->
blocked
) &&

201 (
waô_èbÀ
.
ƒ
 || 
cuºít
->
timeout
Ë&& !
cou¡
) {

202 
cuºít
->
°©e
 = 
TASK_INTERRUPTIBLE
;

203 
	`scheduÀ
();

204 
	`‰ì_waô
(&
waô_èbÀ
);

205 
ª≥©
;

207 
	`‰ì_waô
(&
waô_èbÀ
);

208  
cou¡
;

209 
	}
}

216 
	$sys_£À˘
–*
buf„r
 )

219 
i
;

220 
fd_£t
 
ªs_ö
, 
ö
 = 0, *
öp
;

221 
fd_£t
 
ªs_out
, 
out
 = 0, *
ouç
;

222 
fd_£t
 
ªs_ex
, 
ex
 = 0, *
exp
;

223 
fd_£t
 
mask
;

224 
timevÆ
 *
tvp
;

225 
timeout
;

227 
mask
 = ~((~0Ë<< 
	`gë_fs_l⁄g
(
buf„r
++));

228 
öp
 = (
fd_£t
 *Ë
	`gë_fs_l⁄g
(
buf„r
++);

229 
ouç
 = (
fd_£t
 *Ë
	`gë_fs_l⁄g
(
buf„r
++);

230 
exp
 = (
fd_£t
 *Ë
	`gë_fs_l⁄g
(
buf„r
++);

231 
tvp
 = (
timevÆ
 *Ë
	`gë_fs_l⁄g
(
buf„r
);

233 i‡(
öp
)

234 
ö
 = 
mask
 & 
	`gë_fs_l⁄g
(
öp
);

235 i‡(
ouç
)

236 
out
 = 
mask
 & 
	`gë_fs_l⁄g
(
ouç
);

237 i‡(
exp
)

238 
ex
 = 
mask
 & 
	`gë_fs_l⁄g
(
exp
);

239 
timeout
 = 0xffffffff;

240 i‡(
tvp
) {

241 
timeout
 = 
	`gë_fs_l⁄g
((*)&
tvp
->
tv_u£c
)/(1000000/
HZ
);

242 
timeout
 +
	`gë_fs_l⁄g
((*)&
tvp
->
tv_£c
Ë* 
HZ
;

243 
timeout
 +
jiffõs
;

245 
cuºít
->
timeout
 =Åimeout;

246 
	`˛i
();

247 
i
 = 
	`do_£À˘
(
ö
, 
out
, 
ex
, &
ªs_ö
, &
ªs_out
, &
ªs_ex
);

248 i‡(
cuºít
->
timeout
 > 
jiffõs
)

249 
timeout
 = 
cuºít
->timeouà- 
jiffõs
;

251 
timeout
 = 0;

252 
	`°i
();

253 
cuºít
->
timeout
 = 0;

254 i‡(
i
 < 0)

255  
i
;

256 i‡(
öp
) {

257 
	`vîify_¨ó
(
öp
, 4);

258 
	`put_fs_l⁄g
(
ªs_ö
,
öp
);

260 i‡(
ouç
) {

261 
	`vîify_¨ó
(
ouç
,4);

262 
	`put_fs_l⁄g
(
ªs_out
,
ouç
);

264 i‡(
exp
) {

265 
	`vîify_¨ó
(
exp
,4);

266 
	`put_fs_l⁄g
(
ªs_ex
,
exp
);

268 i‡(
tvp
) {

269 
	`vîify_¨ó
(
tvp
, (*tvp));

270 
	`put_fs_l⁄g
(
timeout
/
HZ
, (*Ë&
tvp
->
tv_£c
);

271 
timeout
 %
HZ
;

272 
timeout
 *(1000000/
HZ
);

273 
	`put_fs_l⁄g
(
timeout
, (*Ë&
tvp
->
tv_u£c
);

275 i‡(!
i
 && (
cuºít
->
sig«l
 & ~cuºít->
blocked
))

276  -
EINTR
;

277  
i
;

278 
	}
}

	@fs/stat.c

7 
	~<î∫o.h
>

8 
	~<sys/°©.h
>

10 
	~<löux/fs.h
>

11 
	~<löux/sched.h
>

12 
	~<löux/kî√l.h
>

13 
	~<asm/£gmít.h
>

15 
	$˝_°©
(
m_öode
 * 
öode
, 
°©
 * 
°©buf
)

17 
°©
 
tmp
;

18 
i
;

20 
	`vîify_¨ó
(
°©buf
, (
°©
));

21 
tmp
.
°_dev
 = 
öode
->
i_dev
;

22 
tmp
.
°_öo
 = 
öode
->
i_num
;

23 
tmp
.
°_mode
 = 
öode
->
i_mode
;

24 
tmp
.
°_∆ök
 = 
öode
->
i_∆öks
;

25 
tmp
.
°_uid
 = 
öode
->
i_uid
;

26 
tmp
.
°_gid
 = 
öode
->
i_gid
;

27 
tmp
.
°_rdev
 = 
öode
->
i_z⁄e
[0];

28 
tmp
.
°_size
 = 
öode
->
i_size
;

29 
tmp
.
°_©ime
 = 
öode
->
i_©ime
;

30 
tmp
.
°_mtime
 = 
öode
->
i_mtime
;

31 
tmp
.
°_˘ime
 = 
öode
->
i_˘ime
;

32 
i
=0 ; i< (
tmp
) ; i++)

33 
	`put_fs_byã
(((*Ë&
tmp
)[
i
],ò+ (*Ë
°©buf
);

34 
	}
}

36 
	$sys_°©
(* 
fûíame
, 
°©
 * 
°©buf
)

38 
m_öode
 * 
öode
;

40 i‡(!(
öode
=
	`«mei
(
fûíame
)))

41  -
ENOENT
;

42 
	`˝_°©
(
öode
,
°©buf
);

43 
	`ùut
(
öode
);

45 
	}
}

47 
	$sys_l°©
(* 
fûíame
, 
°©
 * 
°©buf
)

49 
m_öode
 * 
öode
;

51 i‡(!(
öode
 = 
	` amei
(
fûíame
)))

52  -
ENOENT
;

53 
	`˝_°©
(
öode
,
°©buf
);

54 
	`ùut
(
öode
);

56 
	}
}

58 
	$sys_f°©
(
fd
, 
°©
 * 
°©buf
)

60 
fûe
 * 
f
;

61 
m_öode
 * 
öode
;

63 i‡(
fd
 >
NR_OPEN
 || !(
f
=
cuºít
->
fûp
[fd]Ë|| !(
öode
=f->
f_öode
))

64  -
EBADF
;

65 
	`˝_°©
(
öode
,
°©buf
);

67 
	}
}

69 
	$sys_ªadlök
(c⁄° * 
∑th
, * 
buf
, 
bufsiz
)

71 
m_öode
 * 
öode
;

72 
buf„r_hód
 * 
bh
;

73 
i
;

74 
c
;

76 i‡(
bufsiz
 <= 0)

77  -
EBADF
;

78 i‡(
bufsiz
 > 1023)

79 
bufsiz
 = 1023;

80 
	`vîify_¨ó
(
buf
,
bufsiz
);

81 i‡(!(
öode
 = 
	` amei
(
∑th
)))

82  -
ENOENT
;

83 i‡(
öode
->
i_z⁄e
[0])

84 
bh
 = 
	`bªad
(
öode
->
i_dev
, inode->
i_z⁄e
[0]);

86 
bh
 = 
NULL
;

87 
	`ùut
(
öode
);

88 i‡(!
bh
)

90 
i
 = 0;

91 
i
<
bufsiz
 && (
c
 = 
bh
->
b_d©a
[i])) {

92 
i
++;

93 
	`put_fs_byã
(
c
,
buf
++);

95 
	`bªl£
(
bh
);

96  
i
;

97 
	}
}

	@fs/super.c

10 
	~<löux/c⁄fig.h
>

11 
	~<löux/sched.h
>

12 
	~<löux/kî√l.h
>

13 
	~<asm/sy°em.h
>

15 
	~<î∫o.h
>

16 
	~<sys/°©.h
>

18 
sync_dev
(
dev
);

19 
waô_f‹_key¥ess
();

22 
	#£t_bô
(
bôƒ
,
addr
) ({ \

23 
__ªs
 
	`__asm__
("ax"); \

24 
	`__asm__
("bà%2,%3;£tb %%Æ":"˜" (
__ªs
):"a" (0),"r" (
bôƒ
),"m" (*(
addr
))); \

25 
__ªs
; })

	)

27 
su≥r_block
 
	gsu≥r_block
[
NR_SUPER
];

29 
	gROOT_DEV
 = 0;

31 
	$lock_su≥r
(
su≥r_block
 * 
sb
)

33 
	`˛i
();

34 
sb
->
s_lock
)

35 
	`¶ìp_⁄
(&(
sb
->
s_waô
));

36 
sb
->
s_lock
 = 1;

37 
	`°i
();

38 
	}
}

40 
	$‰ì_su≥r
(
su≥r_block
 * 
sb
)

42 
	`˛i
();

43 
sb
->
s_lock
 = 0;

44 
	`wake_up
(&(
sb
->
s_waô
));

45 
	`°i
();

46 
	}
}

48 
	$waô_⁄_su≥r
(
su≥r_block
 * 
sb
)

50 
	`˛i
();

51 
sb
->
s_lock
)

52 
	`¶ìp_⁄
(&(
sb
->
s_waô
));

53 
	`°i
();

54 
	}
}

56 
su≥r_block
 * 
	$gë_su≥r
(
dev
)

58 
su≥r_block
 * 
s
;

60 i‡(!
dev
)

61  
NULL
;

62 
s
 = 0+
su≥r_block
;

63 
s
 < 
NR_SUPER
+
su≥r_block
)

64 i‡(
s
->
s_dev
 =
dev
) {

65 
	`waô_⁄_su≥r
(
s
);

66 i‡(
s
->
s_dev
 =
dev
)

67  
s
;

68 
s
 = 0+
su≥r_block
;

70 
s
++;

71  
NULL
;

72 
	}
}

74 
	$put_su≥r
(
dev
)

76 
su≥r_block
 * 
sb
;

77 
i
;

79 i‡(
dev
 =
ROOT_DEV
) {

80 
	`¥ötk
("root diskette changed:Örepare forármageddon\n\r");

83 i‡(!(
sb
 = 
	`gë_su≥r
(
dev
)))

85 i‡(
sb
->
s_imou¡
) {

86 
	`¥ötk
("Mounted disk changed -Åssk,Åssk\n\r");

89 
	`lock_su≥r
(
sb
);

90 
sb
->
s_dev
 = 0;

91 
i
=0;i<
I_MAP_SLOTS
;i++)

92 
	`bªl£
(
sb
->
s_im≠
[
i
]);

93 
i
=0;i<
Z_MAP_SLOTS
;i++)

94 
	`bªl£
(
sb
->
s_zm≠
[
i
]);

95 
	`‰ì_su≥r
(
sb
);

97 
	}
}

99 
su≥r_block
 * 
	$ªad_su≥r
(
dev
)

101 
su≥r_block
 * 
s
;

102 
buf„r_hód
 * 
bh
;

103 
i
,
block
;

105 i‡(!
dev
)

106  
NULL
;

107 
	`check_disk_ch™ge
(
dev
);

108 i‡(
s
 = 
	`gë_su≥r
(
dev
))

109  
s
;

110 
s
 = 0+
su≥r_block
 ;; s++) {

111 i‡(
s
 >
NR_SUPER
+
su≥r_block
)

112  
NULL
;

113 i‡(!
s
->
s_dev
)

116 
s
->
s_dev
 = 
dev
;

117 
s
->
s_isup
 = 
NULL
;

118 
s
->
s_imou¡
 = 
NULL
;

119 
s
->
s_time
 = 0;

120 
s
->
s_rd_⁄ly
 = 0;

121 
s
->
s_dút
 = 0;

122 
	`lock_su≥r
(
s
);

123 i‡(!(
bh
 = 
	`bªad
(
dev
,1))) {

124 
s
->
s_dev
=0;

125 
	`‰ì_su≥r
(
s
);

126  
NULL
;

128 *((
d_su≥r_block
 *Ë
s
) =

129 *((
d_su≥r_block
 *Ë
bh
->
b_d©a
);

130 
	`bªl£
(
bh
);

131 i‡(
s
->
s_magic
 !
SUPER_MAGIC
) {

132 
s
->
s_dev
 = 0;

133 
	`‰ì_su≥r
(
s
);

134  
NULL
;

136 
i
=0;i<
I_MAP_SLOTS
;i++)

137 
s
->
s_im≠
[
i
] = 
NULL
;

138 
i
=0;i<
Z_MAP_SLOTS
;i++)

139 
s
->
s_zm≠
[
i
] = 
NULL
;

140 
block
=2;

141 
i
=0 ; i < 
s
->
s_im≠_blocks
 ; i++)

142 i‡(
s
->
s_im≠
[
i
]=
	`bªad
(
dev
,
block
))

143 
block
++;

146 
i
=0 ; i < 
s
->
s_zm≠_blocks
 ; i++)

147 i‡(
s
->
s_zm≠
[
i
]=
	`bªad
(
dev
,
block
))

148 
block
++;

151 i‡(
block
 !2+
s
->
s_im≠_blocks
+s->
s_zm≠_blocks
) {

152 
i
=0;i<
I_MAP_SLOTS
;i++)

153 
	`bªl£
(
s
->
s_im≠
[
i
]);

154 
i
=0;i<
Z_MAP_SLOTS
;i++)

155 
	`bªl£
(
s
->
s_zm≠
[
i
]);

156 
s
->
s_dev
=0;

157 
	`‰ì_su≥r
(
s
);

158  
NULL
;

160 
s
->
s_im≠
[0]->
b_d©a
[0] |= 1;

161 
s
->
s_zm≠
[0]->
b_d©a
[0] |= 1;

162 
	`‰ì_su≥r
(
s
);

163  
s
;

164 
	}
}

166 
	$sys_umou¡
(* 
dev_«me
)

168 
m_öode
 * 
öode
;

169 
su≥r_block
 * 
sb
;

170 
dev
;

172 i‡(!(
öode
=
	`«mei
(
dev_«me
)))

173  -
ENOENT
;

174 
dev
 = 
öode
->
i_z⁄e
[0];

175 i‡(!
	`S_ISBLK
(
öode
->
i_mode
)) {

176 
	`ùut
(
öode
);

177  -
ENOTBLK
;

179 
	`ùut
(
öode
);

180 i‡(
dev
==
ROOT_DEV
)

181  -
EBUSY
;

182 i‡(!(
sb
=
	`gë_su≥r
(
dev
)Ë|| !(sb->
s_imou¡
))

183  -
ENOENT
;

184 i‡(!
sb
->
s_imou¡
->
i_mou¡
)

185 
	`¥ötk
("Mounted inode has i_mount=0\n");

186 
öode
=
öode_èbÀ
+0 ; inode<öode_èbÀ+
NR_INODE
 ; inode++)

187 i‡(
öode
->
i_dev
==
dev
 && inode->
i_cou¡
)

188  -
EBUSY
;

189 
sb
->
s_imou¡
->
i_mou¡
=0;

190 
	`ùut
(
sb
->
s_imou¡
);

191 
sb
->
s_imou¡
 = 
NULL
;

192 
	`ùut
(
sb
->
s_isup
);

193 
sb
->
s_isup
 = 
NULL
;

194 
	`put_su≥r
(
dev
);

195 
	`sync_dev
(
dev
);

197 
	}
}

199 
	$sys_mou¡
(* 
dev_«me
, * 
dú_«me
, 
rw_Êag
)

201 
m_öode
 * 
dev_i
, * 
dú_i
;

202 
su≥r_block
 * 
sb
;

203 
dev
;

205 i‡(!(
dev_i
=
	`«mei
(
dev_«me
)))

206  -
ENOENT
;

207 
dev
 = 
dev_i
->
i_z⁄e
[0];

208 i‡(!
	`S_ISBLK
(
dev_i
->
i_mode
)) {

209 
	`ùut
(
dev_i
);

210  -
EPERM
;

212 
	`ùut
(
dev_i
);

213 i‡(!(
dú_i
=
	`«mei
(
dú_«me
)))

214  -
ENOENT
;

215 i‡(
dú_i
->
i_cou¡
 !1 || dú_i->
i_num
 =
ROOT_INO
) {

216 
	`ùut
(
dú_i
);

217  -
EBUSY
;

219 i‡(!
	`S_ISDIR
(
dú_i
->
i_mode
)) {

220 
	`ùut
(
dú_i
);

221  -
EPERM
;

223 i‡(!(
sb
=
	`ªad_su≥r
(
dev
))) {

224 
	`ùut
(
dú_i
);

225  -
EBUSY
;

227 i‡(
sb
->
s_imou¡
) {

228 
	`ùut
(
dú_i
);

229  -
EBUSY
;

231 i‡(
dú_i
->
i_mou¡
) {

232 
	`ùut
(
dú_i
);

233  -
EPERM
;

235 
sb
->
s_imou¡
=
dú_i
;

236 
dú_i
->
i_mou¡
=1;

237 
dú_i
->
i_dút
=1;

239 
	}
}

241 
	$mou¡_roŸ
()

243 
i
,
‰ì
;

244 
su≥r_block
 * 
p
;

245 
m_öode
 * 
mi
;

247 i‡(32 ! (
d_öode
))

248 
	`∑nic
("bad i-node size");

249 
i
=0;i<
NR_FILE
;i++)

250 
fûe_èbÀ
[
i
].
f_cou¡
=0;

251 i‡(
	`MAJOR
(
ROOT_DEV
) == 2) {

252 
	`¥ötk
("InsertÑoot floppyándÖress ENTER");

253 
	`waô_f‹_key¥ess
();

255 
p
 = &
su≥r_block
[0] ;Ö < &su≥r_block[
NR_SUPER
] ;Ö++) {

256 
p
->
s_dev
 = 0;

257 
p
->
s_lock
 = 0;

258 
p
->
s_waô
 = 
NULL
;

260 i‡(!(
p
=
	`ªad_su≥r
(
ROOT_DEV
)))

261 
	`∑nic
("UnableÅo mountÑoot");

262 i‡(!(
mi
=
	`igë
(
ROOT_DEV
,
ROOT_INO
)))

263 
	`∑nic
("UnableÅoÑeadÑoot i-node");

264 
mi
->
i_cou¡
 += 3 ;

265 
p
->
s_isup
 =Ö->
s_imou¡
 = 
mi
;

266 
cuºít
->
pwd
 = 
mi
;

267 
cuºít
->
roŸ
 = 
mi
;

268 
‰ì
=0;

269 
i
=
p
->
s_nz⁄es
;

270 -- 
i
 >= 0)

271 i‡(!
	`£t_bô
(
i
&8191,
p
->
s_zm≠
[i>>13]->
b_d©a
))

272 
‰ì
++;

273 
	`¥ötk
("%d/%d fªêblocks\n\r",
‰ì
,
p
->
s_nz⁄es
);

274 
‰ì
=0;

275 
i
=
p
->
s_nöodes
+1;

276 -- 
i
 >= 0)

277 i‡(!
	`£t_bô
(
i
&8191,
p
->
s_im≠
[i>>13]->
b_d©a
))

278 
‰ì
++;

279 
	`¥ötk
("%d/%d fªêöodes\n\r",
‰ì
,
p
->
s_nöodes
);

280 
	}
}

	@fs/truncate.c

7 
	~<löux/sched.h
>

9 
	~<sys/°©.h
>

11 
	$‰ì_öd
(
dev
,
block
)

13 
buf„r_hód
 * 
bh
;

14 * 
p
;

15 
i
;

16 
block_busy
;

18 i‡(!
block
)

20 
block_busy
 = 0;

21 i‡(
bh
=
	`bªad
(
dev
,
block
)) {

22 
p
 = (*Ë
bh
->
b_d©a
;

23 
i
=0;i<512;i++,
p
++)

24 i‡(*
p
)

25 i‡(
	`‰ì_block
(
dev
,*
p
)) {

26 *
p
 = 0;

27 
bh
->
b_dút
 = 1;

29 
block_busy
 = 1;

30 
	`bªl£
(
bh
);

32 i‡(
block_busy
)

35  
	`‰ì_block
(
dev
,
block
);

36 
	}
}

38 
	$‰ì_död
(
dev
,
block
)

40 
buf„r_hód
 * 
bh
;

41 * 
p
;

42 
i
;

43 
block_busy
;

45 i‡(!
block
)

47 
block_busy
 = 0;

48 i‡(
bh
=
	`bªad
(
dev
,
block
)) {

49 
p
 = (*Ë
bh
->
b_d©a
;

50 
i
=0;i<512;i++,
p
++)

51 i‡(*
p
)

52 i‡(
	`‰ì_öd
(
dev
,*
p
)) {

53 *
p
 = 0;

54 
bh
->
b_dút
 = 1;

56 
block_busy
 = 1;

57 
	`bªl£
(
bh
);

59 i‡(
block_busy
)

62  
	`‰ì_block
(
dev
,
block
);

63 
	}
}

65 
	$åunˇã
(
m_öode
 * 
öode
)

67 
i
;

68 
block_busy
;

70 i‡(!(
	`S_ISREG
(
öode
->
i_mode
Ë|| 
	`S_ISDIR
(inode->i_mode) ||

71 
	`S_ISLNK
(
öode
->
i_mode
)))

73 
ª≥©
:

74 
block_busy
 = 0;

75 
i
=0;i<7;i++)

76 i‡(
öode
->
i_z⁄e
[
i
]) {

77 i‡(
	`‰ì_block
(
öode
->
i_dev
,öode->
i_z⁄e
[
i
]))

78 
öode
->
i_z⁄e
[
i
]=0;

80 
block_busy
 = 1;

82 i‡(
	`‰ì_öd
(
öode
->
i_dev
,öode->
i_z⁄e
[7]))

83 
öode
->
i_z⁄e
[7] = 0;

85 
block_busy
 = 1;

86 i‡(
	`‰ì_död
(
öode
->
i_dev
,öode->
i_z⁄e
[8]))

87 
öode
->
i_z⁄e
[8] = 0;

89 
block_busy
 = 1;

90 
öode
->
i_dút
 = 1;

91 i‡(
block_busy
) {

92 
cuºít
->
cou¡î
 = 0;

93 
	`scheduÀ
();

94 
ª≥©
;

96 
öode
->
i_size
 = 0;

97 
öode
->
i_mtime
 = inode->
i_˘ime
 = 
CURRENT_TIME
;

98 
	}
}

	@include/a.out.h

1 #i‚de‡
_A_OUT_H


2 
	#_A_OUT_H


	)

4 
	#__GNU_EXEC_MACROS__


	)

6 
	sexec
 {

7 
	ma_magic
;

8 
	ma_ãxt
;

9 
	ma_d©a
;

10 
	ma_bss
;

11 
	ma_syms
;

12 
	ma_íåy
;

13 
	ma_åsize
;

14 
	ma_drsize
;

17 #i‚de‡
N_MAGIC


18 
	#N_MAGIC
(
exec
Ë(”xec).
a_magic
)

	)

21 #i‚de‡
OMAGIC


23 
	#OMAGIC
 0407

	)

25 
	#NMAGIC
 0410

	)

27 
	#ZMAGIC
 0413

	)

30 #i‚de‡
N_BADMAG


31 
	#N_BADMAG
(
x
) \

32 (
	`N_MAGIC
(
x
Ë!
OMAGIC
 && N_MAGIC(xË!
NMAGIC
 \

33 && 
	`N_MAGIC
(
x
Ë!
ZMAGIC
)

	)

36 
	#_N_BADMAG
(
x
) \

37 (
	`N_MAGIC
(
x
Ë!
OMAGIC
 && N_MAGIC(xË!
NMAGIC
 \

38 && 
	`N_MAGIC
(
x
Ë!
ZMAGIC
)

	)

40 
	#_N_HDROFF
(
x
Ë(
SEGMENT_SIZE
 -  (
exec
))

	)

42 #i‚de‡
N_TXTOFF


43 
	#N_TXTOFF
(
x
) \

44 (
	`N_MAGIC
(
x
Ë=
ZMAGIC
 ? 
	`_N_HDROFF
((x)Ë+  (
exec
Ë:  (exec))

	)

47 #i‚de‡
N_DATOFF


48 
	#N_DATOFF
(
x
Ë(
	`N_TXTOFF
(xË+ (x).
a_ãxt
)

	)

51 #i‚de‡
N_TRELOFF


52 
	#N_TRELOFF
(
x
Ë(
	`N_DATOFF
(xË+ (x).
a_d©a
)

	)

55 #i‚de‡
N_DRELOFF


56 
	#N_DRELOFF
(
x
Ë(
	`N_TRELOFF
(xË+ (x).
a_åsize
)

	)

59 #i‚de‡
N_SYMOFF


60 
	#N_SYMOFF
(
x
Ë(
	`N_DRELOFF
(xË+ (x).
a_drsize
)

	)

63 #i‚de‡
N_STROFF


64 
	#N_STROFF
(
x
Ë(
	`N_SYMOFF
(xË+ (x).
a_syms
)

	)

68 #i‚de‡
N_TXTADDR


69 
	#N_TXTADDR
(
x
Ë0

	)

75 #i‡
deföed
(
vax
Ë|| deföed(
hp300
Ë|| deföed(
pyr
)

76 
	#SEGMENT_SIZE
 
PAGE_SIZE


	)

78 #ifdef 
hp300


79 
	#PAGE_SIZE
 4096

	)

81 #ifdef 
s⁄y


82 
	#SEGMENT_SIZE
 0x2000

	)

84 #ifde‡
is68k


85 
	#SEGMENT_SIZE
 0x20000

	)

87 #i‡
deföed
(
m68k
Ë&& deföed(
PORTAR
)

88 
	#PAGE_SIZE
 0x400

	)

89 
	#SEGMENT_SIZE
 
PAGE_SIZE


	)

92 
	#PAGE_SIZE
 4096

	)

93 
	#SEGMENT_SIZE
 1024

	)

95 
	#_N_SEGMENT_ROUND
(
x
Ë(((xË+ 
SEGMENT_SIZE
 - 1Ë& ~(SEGMENT_SIZE - 1))

	)

97 
	#_N_TXTENDADDR
(
x
Ë(
	`N_TXTADDR
(x)+(x).
a_ãxt
)

	)

99 #i‚de‡
N_DATADDR


100 
	#N_DATADDR
(
x
) \

101 (
	`N_MAGIC
(
x
)==
OMAGIC
? (
	`_N_TXTENDADDR
(x)) \

102 : (
	`_N_SEGMENT_ROUND
 (
	`_N_TXTENDADDR
(
x
))))

	)

106 #i‚de‡
N_BSSADDR


107 
	#N_BSSADDR
(
x
Ë(
	`N_DATADDR
(xË+ (x).
a_d©a
)

	)

110 #i‚de‡
N_NLIST_DECLARED


111 
	s∆i°
 {

113 *
	mn_«me
;

114 
∆i°
 *
	mn_√xt
;

115 
	mn_°rx
;

116 } 
	mn_un
;

117 
	mn_ty≥
;

118 
	mn_Ÿhî
;

119 
	mn_desc
;

120 
	mn_vÆue
;

124 #i‚de‡
N_UNDF


125 
	#N_UNDF
 0

	)

127 #i‚de‡
N_ABS


128 
	#N_ABS
 2

	)

130 #i‚de‡
N_TEXT


131 
	#N_TEXT
 4

	)

133 #i‚de‡
N_DATA


134 
	#N_DATA
 6

	)

136 #i‚de‡
N_BSS


137 
	#N_BSS
 8

	)

139 #i‚de‡
N_COMM


140 
	#N_COMM
 18

	)

142 #i‚de‡
N_FN


143 
	#N_FN
 15

	)

146 #i‚de‡
N_EXT


147 
	#N_EXT
 1

	)

149 #i‚de‡
N_TYPE


150 
	#N_TYPE
 036

	)

152 #i‚de‡
N_STAB


153 
	#N_STAB
 0340

	)

164 
	#N_INDR
 0xa

	)

178 
	#N_SETA
 0x14

	)

179 
	#N_SETT
 0x16

	)

180 
	#N_SETD
 0x18

	)

181 
	#N_SETB
 0x1A

	)

184 
	#N_SETV
 0x1C

	)

186 #i‚de‡
N_RELOCATION_INFO_DECLARED


193 
	sªloˇti⁄_öfo


196 
	mr_addªss
;

198 
	mr_symbﬁnum
:24;

202 
	mr_p¸ñ
:1;

205 
	mr_Àngth
:2;

212 
	mr_exã∫
:1;

215 
	mr_∑d
:4;

	@include/asm/io.h

1 
	#outb
(
vÆue
,
p‹t
) \

2 
	`__asm__
 ("outb %%Æ,%%dx"::"a" (
vÆue
),"d" (
p‹t
))

	)

5 
	#öb
(
p‹t
) ({ \

6 
_v
; \

7 
__asm__
 vﬁ©ûê("öb %%dx,%%Æ":"˜" (
_v
):"d" (
p‹t
)); \

8 
_v
; \

9 })

	)

11 
	#outb_p
(
vÆue
,
p‹t
) \

12 
	`__asm__
 ("outb %%al,%%dx\n" \

15 "1:"::"a" (
vÆue
),"d" (
p‹t
))

	)

17 
	#öb_p
(
p‹t
) ({ \

18 
_v
; \

19 
__asm__
 volatile ("inb %%dx,%%al\n" \

22 "1:":"˜" (
_v
):"d" (
p‹t
)); \

23 
_v
; \

24 })

	)

	@include/asm/memory.h

8 
	#mem˝y
(
de°
,
§c
,
n
) ({ \

9 * 
_ªs
 = 
de°
; \

10 
	`__asm__
 ("cld;rep;movsb" \

11 ::"D" (()(
_ªs
)),"S" (()(
§c
)),"c" ((Ë(
n
)) \

13 
_ªs
; \

14 })

	)

	@include/asm/segment.h

1 
ölöe
 
	$gë_fs_byã
(c⁄° * 
addr
)

3 
_v
;

5 
	`__asm__
 ("movb %%fs:%1,%0":"Ù" (
_v
):"m" (*
addr
));

6  
_v
;

7 
	}
}

9 
ölöe
 
	$gë_fs_w‹d
(c⁄° *
addr
)

11 
_v
;

13 
	`__asm__
 ("movw %%fs:%1,%0":"Ù" (
_v
):"m" (*
addr
));

14  
_v
;

15 
	}
}

17 
ölöe
 
	$gë_fs_l⁄g
(c⁄° *
addr
)

19 
_v
;

21 
	`__asm__
 ("mov»%%fs:%1,%0":"Ù" (
_v
):"m" (*
addr
)); \

22  
_v
;

23 
	}
}

25 
ölöe
 
	$put_fs_byã
(
vÆ
,*
addr
)

27 
	`__asm__
 ("movb %0,%%fs:%1"::"r" (
vÆ
),"m" (*
addr
));

28 
	}
}

30 
ölöe
 
	$put_fs_w‹d
(
vÆ
,* 
addr
)

32 
	`__asm__
 ("movw %0,%%fs:%1"::"r" (
vÆ
),"m" (*
addr
));

33 
	}
}

35 
ölöe
 
	$put_fs_l⁄g
(
vÆ
,* 
addr
)

37 
	`__asm__
 ("mov»%0,%%fs:%1"::"r" (
vÆ
),"m" (*
addr
));

38 
	}
}

47 
ölöe
 
	$gë_fs
()

49 
_v
;

50 
	`__asm__
("mov %%fs,%%ax":"˜" (
_v
):);

51  
_v
;

52 
	}
}

54 
ölöe
 
	$gë_ds
()

56 
_v
;

57 
	`__asm__
("mov %%ds,%%ax":"˜" (
_v
):);

58  
_v
;

59 
	}
}

61 
ölöe
 
	$£t_fs
(
vÆ
)

63 
	`__asm__
("mov %0,%%fs"::"a" ((Ë
vÆ
));

64 
	}
}

	@include/asm/system.h

1 
	#move_to_u£r_mode
() \

2 
	`__asm__
 ("movl %%esp,%%eax\n\t" \

14 :::"ax")

	)

16 
	#°i
(Ë
	`__asm__
 ("°i"::)

	)

17 
	#˛i
(Ë
	`__asm__
 ("˛i"::)

	)

18 
	#n›
(Ë
	`__asm__
 ("n›"::)

	)

20 
	#úë
(Ë
	`__asm__
 ("úë"::)

	)

22 
	#_£t_g©e
(
g©e_addr
,
ty≥
,
d∂
,
addr
) \

23 
	`__asm__
 ("movw %%dx,%%ax\n\t" \

28 : "i" ((Ë(0x8000+(
d∂
<<13)+(
ty≥
<<8))), \

29 "o" (*((*Ë(
g©e_addr
))), \

30 "o" (*(4+(*Ë(
g©e_addr
))), \

31 "d" ((*Ë(
addr
)),"a" (0x00080000))

	)

33 
	#£t_öå_g©e
(
n
,
addr
) \

34 
	`_£t_g©e
(&
idt
[
n
],14,0,
addr
)

	)

36 
	#£t_å≠_g©e
(
n
,
addr
) \

37 
	`_£t_g©e
(&
idt
[
n
],15,0,
addr
)

	)

39 
	#£t_sy°em_g©e
(
n
,
addr
) \

40 
	`_£t_g©e
(&
idt
[
n
],15,3,
addr
)

	)

42 
	#_£t_£g_desc
(
g©e_addr
,
ty≥
,
d∂
,
ba£
,
limô
) {\

43 *(
g©e_addr
Ë((
ba£
) & 0xff000000) | \

44 (((
ba£
) & 0x00ff0000)>>16) | \

45 ((
limô
) & 0xf0000) | \

46 ((
d∂
)<<13) | \

48 ((
ty≥
)<<8); \

49 *((
g©e_addr
)+1Ë(((
ba£
) & 0x0000ffff)<<16) | \

50 ((
limô
Ë& 0x0ffff); }

	)

52 
	#_£t_ts¶dt_desc
(
n
,
addr
,
ty≥
) \

53 
	`__asm__
 ("movw $104,%1\n\t" \

57 "movb $" 
ty≥
 ",%4\n\t" \

61 ::"a" (
addr
), "m" (*(
n
)), "m" (*(n+2)), "m" (*(n+4)), \

62 "m" (*(
n
+5)), "m" (*(n+6)), "m" (*(n+7)) \

63 )

	)

65 
	#£t_tss_desc
(
n
,
addr
Ë
	`_£t_ts¶dt_desc
(((*Ë“)),addr,"0x89")

	)

66 
	#£t_ldt_desc
(
n
,
addr
Ë
	`_£t_ts¶dt_desc
(((*Ë“)),addr,"0x82")

	)

	@include/const.h

1 #i‚de‡
_CONST_H


2 
	#_CONST_H


	)

4 
	#BUFFER_END
 0x200000

	)

6 
	#I_TYPE
 0170000

	)

7 
	#I_DIRECTORY
 0040000

	)

8 
	#I_REGULAR
 0100000

	)

9 
	#I_BLOCK_SPECIAL
 0060000

	)

10 
	#I_CHAR_SPECIAL
 0020000

	)

11 
	#I_NAMED_PIPE
 0010000

	)

12 
	#I_SET_UID_BIT
 0004000

	)

13 
	#I_SET_GID_BIT
 0002000

	)

	@include/ctype.h

1 #i‚de‡
_CTYPE_H


2 
	#_CTYPE_H


	)

4 
	#_U
 0x01

	)

5 
	#_L
 0x02

	)

6 
	#_D
 0x04

	)

7 
	#_C
 0x08

	)

8 
	#_P
 0x10

	)

9 
	#_S
 0x20

	)

10 
	#_X
 0x40

	)

11 
	#_SP
 0x80

	)

13 
_˘y≥
[];

14 
_˘mp
;

16 
	#iß um
(
c
Ë((
_˘y≥
+1)[c]&(
_U
|
_L
|
_D
))

	)

17 
	#ißÕha
(
c
Ë((
_˘y≥
+1)[c]&(
_U
|
_L
))

	)

18 
	#is˙ål
(
c
Ë((
_˘y≥
+1)[c]&(
_C
))

	)

19 
	#isdigô
(
c
Ë((
_˘y≥
+1)[c]&(
_D
))

	)

20 
	#isgøph
(
c
Ë((
_˘y≥
+1)[c]&(
_P
|
_U
|
_L
|
_D
))

	)

21 
	#i¶owî
(
c
Ë((
_˘y≥
+1)[c]&(
_L
))

	)

22 
	#i•röt
(
c
Ë((
_˘y≥
+1)[c]&(
_P
|
_U
|
_L
|
_D
|
_SP
))

	)

23 
	#i•un˘
(
c
Ë((
_˘y≥
+1)[c]&(
_P
))

	)

24 
	#is•a˚
(
c
Ë((
_˘y≥
+1)[c]&(
_S
))

	)

25 
	#isuµî
(
c
Ë((
_˘y≥
+1)[c]&(
_U
))

	)

26 
	#isxdigô
(
c
Ë((
_˘y≥
+1)[c]&(
_D
|
_X
))

	)

28 
	#ißscii
(
c
Ë(((Ëc)<=0x7f)

	)

29 
	#tﬂscii
(
c
Ë(((Ëc)&0x7f)

	)

31 
	#tﬁowî
(
c
Ë(
_˘mp
=c,
	`isuµî
(_˘mp)?_˘mp-('A'-'a'):_˘mp)

	)

32 
	#touµî
(
c
Ë(
_˘mp
=c,
	`i¶owî
(_˘mp)?_˘mp-('a'-'A'):_˘mp)

	)

	@include/errno.h

1 #i‚de‡
_ERRNO_H


2 
	#_ERRNO_H


	)

17 
î∫o
;

19 
	#ERROR
 99

	)

20 
	#EPERM
 1

	)

21 
	#ENOENT
 2

	)

22 
	#ESRCH
 3

	)

23 
	#EINTR
 4

	)

24 
	#EIO
 5

	)

25 
	#ENXIO
 6

	)

26 
	#E2BIG
 7

	)

27 
	#ENOEXEC
 8

	)

28 
	#EBADF
 9

	)

29 
	#ECHILD
 10

	)

30 
	#EAGAIN
 11

	)

31 
	#ENOMEM
 12

	)

32 
	#EACCES
 13

	)

33 
	#EFAULT
 14

	)

34 
	#ENOTBLK
 15

	)

35 
	#EBUSY
 16

	)

36 
	#EEXIST
 17

	)

37 
	#EXDEV
 18

	)

38 
	#ENODEV
 19

	)

39 
	#ENOTDIR
 20

	)

40 
	#EISDIR
 21

	)

41 
	#EINVAL
 22

	)

42 
	#ENFILE
 23

	)

43 
	#EMFILE
 24

	)

44 
	#ENOTTY
 25

	)

45 
	#ETXTBSY
 26

	)

46 
	#EFBIG
 27

	)

47 
	#ENOSPC
 28

	)

48 
	#ESPIPE
 29

	)

49 
	#EROFS
 30

	)

50 
	#EMLINK
 31

	)

51 
	#EPIPE
 32

	)

52 
	#EDOM
 33

	)

53 
	#ERANGE
 34

	)

54 
	#EDEADLK
 35

	)

55 
	#ENAMETOOLONG
 36

	)

56 
	#ENOLCK
 37

	)

57 
	#ENOSYS
 38

	)

58 
	#ENOTEMPTY
 39

	)

61 
	#ERESTARTSYS
 512

	)

62 
	#ERESTARTNOINTR
 513

	)

	@include/fcntl.h

1 #i‚de‡
_FCNTL_H


2 
	#_FCNTL_H


	)

4 
	~<sys/ty≥s.h
>

7 
	#O_ACCMODE
 00003

	)

8 
	#O_RDONLY
 00

	)

9 
	#O_WRONLY
 01

	)

10 
	#O_RDWR
 02

	)

11 
	#O_CREAT
 00100

	)

12 
	#O_EXCL
 00200

	)

13 
	#O_NOCTTY
 00400

	)

14 
	#O_TRUNC
 01000

	)

15 
	#O_APPEND
 02000

	)

16 
	#O_NONBLOCK
 04000

	)

17 
	#O_NDELAY
 
O_NONBLOCK


	)

23 
	#F_DUPFD
 0

	)

24 
	#F_GETFD
 1

	)

25 
	#F_SETFD
 2

	)

26 
	#F_GETFL
 3

	)

27 
	#F_SETFL
 4

	)

28 
	#F_GETLK
 5

	)

29 
	#F_SETLK
 6

	)

30 
	#F_SETLKW
 7

	)

33 
	#FD_CLOEXEC
 1

	)

38 
	#F_RDLCK
 0

	)

39 
	#F_WRLCK
 1

	)

40 
	#F_UNLCK
 2

	)

43 
	sÊock
 {

44 
	ml_ty≥
;

45 
	ml_whí˚
;

46 
off_t
 
	ml_°¨t
;

47 
off_t
 
	ml_Àn
;

48 
pid_t
 
	ml_pid
;

51 
¸ót
(c⁄° * 
fûíame
,
mode_t
 
mode
);

52 
f˙é
(
fûdes
,
cmd
, ...);

53 
›í
(c⁄° * 
fûíame
, 
Êags
, ...);

	@include/linux/config.h

1 #i‚de‡
_CONFIG_H


2 
	#_CONFIG_H


	)

7 
	#UTS_SYSNAME
 "Löux"

	)

8 
	#UTS_NODENAME
 "“⁄e)"

	)

9 
	#UTS_RELEASE
 "0"

	)

10 
	#UTS_VERSION
 "0.12"

	)

11 
	#UTS_MACHINE
 "i386"

	)

14 
	#DEF_INITSEG
 0x9000

	)

15 
	#DEF_SYSSEG
 0x1000

	)

16 
	#DEF_SETUPSEG
 0x9020

	)

17 
	#DEF_SYSSIZE
 0x3000

	)

	@include/linux/fdreg.h

6 #i‚de‡
_FDREG_H


7 
	#_FDREG_H


	)

9 
ticks_to_Ê›py_⁄
(
ƒ
);

10 
Ê›py_⁄
(
ƒ
);

11 
Ê›py_off
(
ƒ
);

12 
Ê›py_£À˘
(
ƒ
);

13 
Ê›py_de£À˘
(
ƒ
);

16 
	#FD_STATUS
 0x3f4

	)

17 
	#FD_DATA
 0x3f5

	)

18 
	#FD_DOR
 0x3f2

	)

19 
	#FD_DIR
 0x3f7

	)

20 
	#FD_DCR
 0x3f7

	)

23 
	#STATUS_BUSYMASK
 0x0F

	)

24 
	#STATUS_BUSY
 0x10

	)

25 
	#STATUS_DMA
 0x20

	)

26 
	#STATUS_DIR
 0x40

	)

27 
	#STATUS_READY
 0x80

	)

30 
	#ST0_DS
 0x03

	)

31 
	#ST0_HA
 0x04

	)

32 
	#ST0_NR
 0x08

	)

33 
	#ST0_ECE
 0x10

	)

34 
	#ST0_SE
 0x20

	)

35 
	#ST0_INTR
 0xC0

	)

38 
	#ST1_MAM
 0x01

	)

39 
	#ST1_WP
 0x02

	)

40 
	#ST1_ND
 0x04

	)

41 
	#ST1_OR
 0x10

	)

42 
	#ST1_CRC
 0x20

	)

43 
	#ST1_EOC
 0x80

	)

46 
	#ST2_MAM
 0x01

	)

47 
	#ST2_BC
 0x02

	)

48 
	#ST2_SNS
 0x04

	)

49 
	#ST2_SEH
 0x08

	)

50 
	#ST2_WC
 0x10

	)

51 
	#ST2_CRC
 0x20

	)

52 
	#ST2_CM
 0x40

	)

55 
	#ST3_HA
 0x04

	)

56 
	#ST3_TZ
 0x10

	)

57 
	#ST3_WP
 0x40

	)

60 
	#FD_RECALIBRATE
 0x07

	)

61 
	#FD_SEEK
 0x0F

	)

62 
	#FD_READ
 0xE6

	)

63 
	#FD_WRITE
 0xC5

	)

64 
	#FD_SENSEI
 0x08

	)

65 
	#FD_SPECIFY
 0x03

	)

68 
	#DMA_READ
 0x46

	)

69 
	#DMA_WRITE
 0x4A

	)

	@include/linux/fs.h

6 #i‚de‡
_FS_H


7 
	#_FS_H


	)

9 
	~<sys/ty≥s.h
>

24 
	#IS_SEEKABLE
(
x
Ë((x)>=1 && (x)<=3)

	)

26 
	#READ
 0

	)

27 
	#WRITE
 1

	)

28 
	#READA
 2

	)

29 
	#WRITEA
 3

	)

31 
buf„r_öô
(
buf„r_íd
);

33 
	#MAJOR
(
a
Ë((()◊))>>8)

	)

34 
	#MINOR
(
a
Ë(◊)&0xff)

	)

36 
	#NAME_LEN
 14

	)

37 
	#ROOT_INO
 1

	)

39 
	#I_MAP_SLOTS
 8

	)

40 
	#Z_MAP_SLOTS
 8

	)

41 
	#SUPER_MAGIC
 0x137F

	)

43 
	#NR_OPEN
 20

	)

44 
	#NR_INODE
 64

	)

45 
	#NR_FILE
 64

	)

46 
	#NR_SUPER
 8

	)

47 
	#NR_HASH
 307

	)

48 
	#NR_BUFFERS
 
ƒ_buf„rs


	)

49 
	#BLOCK_SIZE
 1024

	)

50 
	#BLOCK_SIZE_BITS
 10

	)

51 #i‚de‡
NULL


52 
	#NULL
 ((*Ë0)

	)

55 
	#INODES_PER_BLOCK
 ((
BLOCK_SIZE
)/( (
d_öode
)))

	)

56 
	#DIR_ENTRIES_PER_BLOCK
 ((
BLOCK_SIZE
)/( (
dú_íåy
)))

	)

58 
	#PIPE_READ_WAIT
(
öode
Ë((öode).
i_waô
)

	)

59 
	#PIPE_WRITE_WAIT
(
öode
Ë((öode).
i_waô2
)

	)

60 
	#PIPE_HEAD
(
öode
Ë((öode).
i_z⁄e
[0])

	)

61 
	#PIPE_TAIL
(
öode
Ë((öode).
i_z⁄e
[1])

	)

62 
	#PIPE_SIZE
(
öode
Ë((
	`PIPE_HEAD
(öode)-
	`PIPE_TAIL
(öode))&(
PAGE_SIZE
-1))

	)

63 
	#PIPE_EMPTY
(
öode
Ë(
	`PIPE_HEAD
(öode)==
	`PIPE_TAIL
(öode))

	)

64 
	#PIPE_FULL
(
öode
Ë(
	`PIPE_SIZE
(öode)==(
PAGE_SIZE
-1))

	)

66 
	#NIL_FILP
 ((
fûe
 *)0)

	)

67 
	#SEL_IN
 1

	)

68 
	#SEL_OUT
 2

	)

69 
	#SEL_EX
 4

	)

71 
	tbuf„r_block
[
BLOCK_SIZE
];

73 
	sbuf„r_hód
 {

74 * 
	mb_d©a
;

75 
	mb_blockƒ
;

76 
	mb_dev
;

77 
	mb_u±od©e
;

78 
	mb_dút
;

79 
	mb_cou¡
;

80 
	mb_lock
;

81 
èsk_°ru˘
 * 
	mb_waô
;

82 
buf„r_hód
 * 
	mb_¥ev
;

83 
buf„r_hód
 * 
	mb_√xt
;

84 
buf„r_hód
 * 
	mb_¥ev_‰ì
;

85 
buf„r_hód
 * 
	mb_√xt_‰ì
;

88 
	sd_öode
 {

89 
	mi_mode
;

90 
	mi_uid
;

91 
	mi_size
;

92 
	mi_time
;

93 
	mi_gid
;

94 
	mi_∆öks
;

95 
	mi_z⁄e
[9];

98 
	sm_öode
 {

99 
	mi_mode
;

100 
	mi_uid
;

101 
	mi_size
;

102 
	mi_mtime
;

103 
	mi_gid
;

104 
	mi_∆öks
;

105 
	mi_z⁄e
[9];

107 
èsk_°ru˘
 * 
	mi_waô
;

108 
èsk_°ru˘
 * 
	mi_waô2
;

109 
	mi_©ime
;

110 
	mi_˘ime
;

111 
	mi_dev
;

112 
	mi_num
;

113 
	mi_cou¡
;

114 
	mi_lock
;

115 
	mi_dút
;

116 
	mi_pùe
;

117 
	mi_mou¡
;

118 
	mi_£ek
;

119 
	mi_upd©e
;

122 
	sfûe
 {

123 
	mf_mode
;

124 
	mf_Êags
;

125 
	mf_cou¡
;

126 
m_öode
 * 
	mf_öode
;

127 
off_t
 
	mf_pos
;

130 
	ssu≥r_block
 {

131 
	ms_nöodes
;

132 
	ms_nz⁄es
;

133 
	ms_im≠_blocks
;

134 
	ms_zm≠_blocks
;

135 
	ms_fú°d©az⁄e
;

136 
	ms_log_z⁄e_size
;

137 
	ms_max_size
;

138 
	ms_magic
;

140 
buf„r_hód
 * 
	ms_im≠
[8];

141 
buf„r_hód
 * 
	ms_zm≠
[8];

142 
	ms_dev
;

143 
m_öode
 * 
	ms_isup
;

144 
m_öode
 * 
	ms_imou¡
;

145 
	ms_time
;

146 
èsk_°ru˘
 * 
	ms_waô
;

147 
	ms_lock
;

148 
	ms_rd_⁄ly
;

149 
	ms_dút
;

152 
	sd_su≥r_block
 {

153 
	ms_nöodes
;

154 
	ms_nz⁄es
;

155 
	ms_im≠_blocks
;

156 
	ms_zm≠_blocks
;

157 
	ms_fú°d©az⁄e
;

158 
	ms_log_z⁄e_size
;

159 
	ms_max_size
;

160 
	ms_magic
;

163 
	sdú_íåy
 {

164 
	möode
;

165 
	m«me
[
NAME_LEN
];

168 
m_öode
 
öode_èbÀ
[
NR_INODE
];

169 
fûe
 
fûe_èbÀ
[
NR_FILE
];

170 
su≥r_block
 su≥r_block[
NR_SUPER
];

171 
buf„r_hód
 * 
°¨t_buf„r
;

172 
ƒ_buf„rs
;

174 
check_disk_ch™ge
(
dev
);

175 
Ê›py_ch™ge
(
ƒ
);

176 
ticks_to_Ê›py_⁄
(
dev
);

177 
Ê›py_⁄
(
dev
);

178 
Ê›py_off
(
dev
);

179 
åunˇã
(
m_öode
 * 
öode
);

180 
sync_öodes
();

181 
waô_⁄
(
m_öode
 * 
öode
);

182 
bm≠
(
m_öode
 * 
öode
,
block
);

183 
¸óã_block
(
m_öode
 * 
öode
,
block
);

184 
m_öode
 * 
«mei
(c⁄° * 
∑th«me
);

185 
m_öode
 * 
 amei
(c⁄° * 
∑th«me
);

186 
›í_«mei
(c⁄° * 
∑th«me
, 
Êag
, 
mode
,

187 
m_öode
 ** 
ªs_öode
);

188 
ùut
(
m_öode
 * 
öode
);

189 
m_öode
 * 
igë
(
dev
,
ƒ
);

190 
m_öode
 * 
gë_em±y_öode
();

191 
m_öode
 * 
gë_pùe_öode
();

192 
buf„r_hód
 * 
gë_hash_èbÀ
(
dev
, 
block
);

193 
buf„r_hód
 * 
gëblk
(
dev
, 
block
);

194 
Œ_rw_block
(
rw
, 
buf„r_hód
 * 
bh
);

195 
Œ_rw_∑ge
(
rw
, 
dev
, 
ƒ
, * 
buf„r
);

196 
bªl£
(
buf„r_hód
 * 
buf
);

197 
buf„r_hód
 * 
bªad
(
dev
,
block
);

198 
bªad_∑ge
(
addr
,
dev
,
b
[4]);

199 
buf„r_hód
 * 
bªada
(
dev
,
block
,...);

200 
√w_block
(
dev
);

201 
‰ì_block
(
dev
, 
block
);

202 
m_öode
 * 
√w_öode
(
dev
);

203 
‰ì_öode
(
m_öode
 * 
öode
);

204 
sync_dev
(
dev
);

205 
su≥r_block
 * 
gë_su≥r
(
dev
);

206 
ROOT_DEV
;

208 
mou¡_roŸ
();

	@include/linux/hdreg.h

6 #i‚de‡
_HDREG_H


7 
	#_HDREG_H


	)

10 
	#HD_DATA
 0x1f0

	)

11 
	#HD_ERROR
 0x1f1

	)

12 
	#HD_NSECTOR
 0x1f2

	)

13 
	#HD_SECTOR
 0x1f3

	)

14 
	#HD_LCYL
 0x1f4

	)

15 
	#HD_HCYL
 0x1f5

	)

16 
	#HD_CURRENT
 0x1f6

	)

17 
	#HD_STATUS
 0x1f7

	)

18 
	#HD_PRECOMP
 
HD_ERROR


	)

19 
	#HD_COMMAND
 
HD_STATUS


	)

21 
	#HD_CMD
 0x3f6

	)

24 
	#ERR_STAT
 0x01

	)

25 
	#INDEX_STAT
 0x02

	)

26 
	#ECC_STAT
 0x04

	)

27 
	#DRQ_STAT
 0x08

	)

28 
	#SEEK_STAT
 0x10

	)

29 
	#WRERR_STAT
 0x20

	)

30 
	#READY_STAT
 0x40

	)

31 
	#BUSY_STAT
 0x80

	)

34 
	#WIN_RESTORE
 0x10

	)

35 
	#WIN_READ
 0x20

	)

36 
	#WIN_WRITE
 0x30

	)

37 
	#WIN_VERIFY
 0x40

	)

38 
	#WIN_FORMAT
 0x50

	)

39 
	#WIN_INIT
 0x60

	)

40 
	#WIN_SEEK
 0x70

	)

41 
	#WIN_DIAGNOSE
 0x90

	)

42 
	#WIN_SPECIFY
 0x91

	)

45 
	#MARK_ERR
 0x01

	)

46 
	#TRK0_ERR
 0x02

	)

47 
	#ABRT_ERR
 0x04

	)

48 
	#ID_ERR
 0x10

	)

49 
	#ECC_ERR
 0x40

	)

50 
	#BBD_ERR
 0x80

	)

52 
	s∑πôi⁄
 {

53 
	mboŸ_öd
;

54 
	mhód
;

55 
	m£˘‹
;

56 
	mcyl
;

57 
	msys_öd
;

58 
	míd_hód
;

59 
	míd_£˘‹
;

60 
	míd_cyl
;

61 
	m°¨t_£˘
;

62 
	mƒ_£˘s
;

	@include/linux/head.h

1 #i‚de‡
_HEAD_H


2 
	#_HEAD_H


	)

4 
	sdesc_°ru˘
 {

5 
	ma
,
	mb
;

6 } 
	tdesc_èbÀ
[256];

8 
pg_dú
[1024];

9 
desc_èbÀ
 
idt
,
gdt
;

11 
	#GDT_NUL
 0

	)

12 
	#GDT_CODE
 1

	)

13 
	#GDT_DATA
 2

	)

14 
	#GDT_TMP
 3

	)

16 
	#LDT_NUL
 0

	)

17 
	#LDT_CODE
 1

	)

18 
	#LDT_DATA
 2

	)

	@include/linux/kernel.h

4 
vîify_¨ó
(* 
addr
,
cou¡
);

5 vﬁ©ûê
∑nic
(c⁄° * 
°r
);

6 vﬁ©ûê
do_exô
(
îr‹_code
);

7 
¥ötf
(c⁄° * 
fmt
, ...);

8 
¥ötk
(c⁄° * 
fmt
, ...);

9 
c⁄sﬁe_¥öt
(c⁄° * 
°r
);

10 
ây_wrôe
(
ch
,* 
buf
,
cou¡
);

11 * 
mÆloc
(
size
);

12 
‰ì_s
(* 
obj
, 
size
);

13 
hd_times_out
();

14 
sysbìp°›
();

15 
bœnk_s¸ìn
();

16 
unbœnk_s¸ìn
();

18 
bìpcou¡
;

19 
hd_timeout
;

20 
bœnköãrvÆ
;

21 
bœnkcou¡
;

23 
	#‰ì
(
x
Ë
	`‰ì_s
((x), 0)

	)

32 
	#su£r
(Ë(
cuºít
->
euid
 =0)

	)

	@include/linux/math_emu.h

6 #i‚de‡
_LINUX_MATH_EMU_H


7 
	#_LINUX_MATH_EMU_H


	)

9 
	~<löux/sched.h
>

11 
	söfo
 {

12 
	m___m©h_ªt
;

13 
	m___‹ig_eù
;

14 
	m___edi
;

15 
	m___esi
;

16 
	m___ebp
;

17 
	m___sys_ˇŒ_ªt
;

18 
	m___óx
;

19 
	m___ebx
;

20 
	m___ecx
;

21 
	m___edx
;

22 
	m___‹ig_óx
;

23 
	m___fs
;

24 
	m___es
;

25 
	m___ds
;

26 
	m___eù
;

27 
	m___cs
;

28 
	m___eÊags
;

29 
	m___e•
;

30 
	m___ss
;

33 
	#EAX
 (
öfo
->
___óx
)

	)

34 
	#EBX
 (
öfo
->
___ebx
)

	)

35 
	#ECX
 (
öfo
->
___ecx
)

	)

36 
	#EDX
 (
öfo
->
___edx
)

	)

37 
	#ESI
 (
öfo
->
___esi
)

	)

38 
	#EDI
 (
öfo
->
___edi
)

	)

39 
	#EBP
 (
öfo
->
___ebp
)

	)

40 
	#ESP
 (
öfo
->
___e•
)

	)

41 
	#EIP
 (
öfo
->
___eù
)

	)

42 
	#ORIG_EIP
 (
öfo
->
___‹ig_eù
)

	)

43 
	#EFLAGS
 (
öfo
->
___eÊags
)

	)

44 
	#DS
 (*(*Ë&(
öfo
->
___ds
))

	)

45 
	#ES
 (*(*Ë&(
öfo
->
___es
))

	)

46 
	#FS
 (*(*Ë&(
öfo
->
___fs
))

	)

47 
	#CS
 (*(*Ë&(
öfo
->
___cs
))

	)

48 
	#SS
 (*(*Ë&(
öfo
->
___ss
))

	)

50 
__m©h_ab‹t
(
öfo
 *, );

52 
	#m©h_ab‹t
(
x
,
y
) \

53 (((vﬁ©ûê(*)(
öfo
 *,)Ë
__m©h_ab‹t
)((
x
),(
y
)))

	)

63 
	ma
,
	mb
;

64 
	mexp⁄ít
;

65 } 
	tãmp_ªÆ
;

68 
	mm0
,
	mm1
,
	mm2
,
	mm3
;

69 
	mexp⁄ít
;

70 } 
	tãmp_ªÆ_u«lig√d
;

72 
	#ªÆ_to_ªÆ
(
a
,
b
) \

73 ((*(*Ë(
b
Ë*(*Ë(
a
)),((b)->
exp⁄ít
 = (a)->exp⁄ít))

	)

76 
	ma
,
	mb
;

77 } 
	tl⁄g_ªÆ
;

79 
	tsh‹t_ªÆ
;

82 
	ma
,
	mb
;

83 
	msign
;

84 } 
	tãmp_öt
;

86 
	sswd
 {

87 
	mõ
:1;

88 
	mde
:1;

89 
	mze
:1;

90 
	m€
:1;

91 
	mue
:1;

92 
	m≥
:1;

93 
	msf
:1;

94 
	mú
:1;

95 
	mc0
:1;

96 
	mc1
:1;

97 
	mc2
:1;

98 
	mt›
:3;

99 
	mc3
:1;

100 
	mb
:1;

103 
	#I387
 (
cuºít
->
tss
.
i387
)

	)

104 
	#SWD
 (*(
swd
 *Ë&
I387
.swd)

	)

105 
	#ROUNDING
 ((
I387
.
cwd
 >> 10Ë& 3)

	)

106 
	#PRECISION
 ((
I387
.
cwd
 >> 8Ë& 3)

	)

108 
	#BITS24
 0

	)

109 
	#BITS53
 2

	)

110 
	#BITS64
 3

	)

112 
	#ROUND_NEAREST
 0

	)

113 
	#ROUND_DOWN
 1

	)

114 
	#ROUND_UP
 2

	)

115 
	#ROUND_0
 3

	)

117 
	#CONSTZ
 (
ãmp_ªÆ_u«lig√d
Ë{0x0000,0x0000,0x0000,0x0000,0x0000}

	)

118 
	#CONST1
 (
ãmp_ªÆ_u«lig√d
Ë{0x0000,0x0000,0x0000,0x8000,0x3FFF}

	)

119 
	#CONSTPI
 (
ãmp_ªÆ_u«lig√d
Ë{0xC235,0x2168,0xDAA2,0xC90F,0x4000}

	)

120 
	#CONSTLN2
 (
ãmp_ªÆ_u«lig√d
Ë{0x79AC,0xD1CF,0x17F7,0xB172,0x3FFE}

	)

121 
	#CONSTLG2
 (
ãmp_ªÆ_u«lig√d
Ë{0xF799,0xFBCF,0x9A84,0x9A20,0x3FFD}

	)

122 
	#CONSTL2E
 (
ãmp_ªÆ_u«lig√d
Ë{0xF0BC,0x5C17,0x3B29,0xB8AA,0x3FFF}

	)

123 
	#CONSTL2T
 (
ãmp_ªÆ_u«lig√d
Ë{0x8AFE,0xCD1B,0x784B,0xD49A,0x4000}

	)

125 
	#£t_IE
(Ë(
I387
.
swd
 |1)

	)

126 
	#£t_DE
(Ë(
I387
.
swd
 |2)

	)

127 
	#£t_ZE
(Ë(
I387
.
swd
 |4)

	)

128 
	#£t_OE
(Ë(
I387
.
swd
 |8)

	)

129 
	#£t_UE
(Ë(
I387
.
swd
 |16)

	)

130 
	#£t_PE
(Ë(
I387
.
swd
 |32)

	)

132 
	#£t_C0
(Ë(
I387
.
swd
 |0x0100)

	)

133 
	#£t_C1
(Ë(
I387
.
swd
 |0x0200)

	)

134 
	#£t_C2
(Ë(
I387
.
swd
 |0x0400)

	)

135 
	#£t_C3
(Ë(
I387
.
swd
 |0x4000)

	)

139 * 
ó
(
öfo
 * 
__öfo
, 
__code
);

143 
sh‹t_to_ãmp
(c⁄° 
sh‹t_ªÆ
 * 
__a
, 
ãmp_ªÆ
 * 
__b
);

144 
l⁄g_to_ãmp
(c⁄° 
l⁄g_ªÆ
 * 
__a
, 
ãmp_ªÆ
 * 
__b
);

145 
ãmp_to_sh‹t
(c⁄° 
ãmp_ªÆ
 * 
__a
, 
sh‹t_ªÆ
 * 
__b
);

146 
ãmp_to_l⁄g
(c⁄° 
ãmp_ªÆ
 * 
__a
, 
l⁄g_ªÆ
 * 
__b
);

147 
ªÆ_to_öt
(c⁄° 
ãmp_ªÆ
 * 
__a
, 
ãmp_öt
 * 
__b
);

148 
öt_to_ªÆ
(c⁄° 
ãmp_öt
 * 
__a
, 
ãmp_ªÆ
 * 
__b
);

152 
gë_sh‹t_ªÆ
(
ãmp_ªÆ
 *, 
öfo
 *, );

153 
gë_l⁄g_ªÆ
(
ãmp_ªÆ
 *, 
öfo
 *, );

154 
gë_ãmp_ªÆ
(
ãmp_ªÆ
 *, 
öfo
 *, );

155 
gë_sh‹t_öt
(
ãmp_ªÆ
 *, 
öfo
 *, );

156 
gë_l⁄g_öt
(
ãmp_ªÆ
 *, 
öfo
 *, );

157 
gë_l⁄gl⁄g_öt
(
ãmp_ªÆ
 *, 
öfo
 *, );

158 
gë_BCD
(
ãmp_ªÆ
 *, 
öfo
 *, );

159 
put_sh‹t_ªÆ
(c⁄° 
ãmp_ªÆ
 *, 
öfo
 *, );

160 
put_l⁄g_ªÆ
(c⁄° 
ãmp_ªÆ
 *, 
öfo
 *, );

161 
put_ãmp_ªÆ
(c⁄° 
ãmp_ªÆ
 *, 
öfo
 *, );

162 
put_sh‹t_öt
(c⁄° 
ãmp_ªÆ
 *, 
öfo
 *, );

163 
put_l⁄g_öt
(c⁄° 
ãmp_ªÆ
 *, 
öfo
 *, );

164 
put_l⁄gl⁄g_öt
(c⁄° 
ãmp_ªÆ
 *, 
öfo
 *, );

165 
put_BCD
(c⁄° 
ãmp_ªÆ
 *, 
öfo
 *, );

169 
Ádd
(c⁄° 
ãmp_ªÆ
 *, constÅemp_real *,Åemp_real *);

173 
fmul
(c⁄° 
ãmp_ªÆ
 *, constÅemp_real *,Åemp_real *);

177 
fdiv
(c⁄° 
ãmp_ªÆ
 *, constÅemp_real *,Åemp_real *);

181 
fcom
(c⁄° 
ãmp_ªÆ
 *, constÅemp_real *);

182 
fucom
(c⁄° 
ãmp_ªÆ
 *, constÅemp_real *);

183 
·°
(c⁄° 
ãmp_ªÆ
 *);

	@include/linux/mm.h

1 #i‚de‡
_MM_H


2 
	#_MM_H


	)

4 
	#PAGE_SIZE
 4096

	)

6 
	~<löux/kî√l.h
>

7 
	~<sig«l.h
>

9 
SWAP_DEV
;

11 
	#ªad_sw≠_∑ge
(
ƒ
,
buf„r
Ë
	`Œ_rw_∑ge
(
READ
,
SWAP_DEV
,“r),(buf„r));

	)

12 
	#wrôe_sw≠_∑ge
(
ƒ
,
buf„r
Ë
	`Œ_rw_∑ge
(
WRITE
,
SWAP_DEV
,“r),(buf„r));

	)

14 
gë_‰ì_∑ge
();

15 
put_dúty_∑ge
(
∑ge
,
addªss
);

16 
‰ì_∑ge
(
addr
);

17 
sw≠_‰ì
(
∑ge_ƒ
);

18 
sw≠_ö
(*
èbÀ_±r
);

20 
ölöe
 vﬁ©ûê
	$oom
()

22 
	`¥ötk
("out of memory\n\r");

23 
	`do_exô
(
SIGSEGV
);

24 
	}
}

26 
	#övÆid©e
() \

27 
	`__asm__
("mov»%%óx,%%¸3"::"a" (0))

	)

30 
	#LOW_MEM
 0x100000

	)

31 
HIGH_MEMORY
;

32 
	#PAGING_MEMORY
 (15*1024*1024)

	)

33 
	#PAGING_PAGES
 (
PAGING_MEMORY
>>12)

	)

34 
	#MAP_NR
(
addr
Ë((◊ddr)-
LOW_MEM
)>>12)

	)

35 
	#USED
 100

	)

37 
mem_m≠
 [ 
PAGING_PAGES
 ];

39 
	#PAGE_DIRTY
 0x40

	)

40 
	#PAGE_ACCESSED
 0x20

	)

41 
	#PAGE_USER
 0x04

	)

42 
	#PAGE_RW
 0x02

	)

43 
	#PAGE_PRESENT
 0x01

	)

	@include/linux/sched.h

1 #i‚de‡
_SCHED_H


2 
	#_SCHED_H


	)

4 
	#HZ
 100

	)

6 
	#NR_TASKS
 64

	)

7 
	#TASK_SIZE
 0x04000000

	)

8 
	#LIBRARY_SIZE
 0x00400000

	)

10 #i‡(
TASK_SIZE
 & 0x3fffff)

14 #i‡(
LIBRARY_SIZE
 & 0x3fffff)

18 #i‡(
LIBRARY_SIZE
 >(
TASK_SIZE
/2))

22 #i‡(((
TASK_SIZE
>>16)*
NR_TASKS
) != 0x10000)

26 
	#LIBRARY_OFFSET
 (
TASK_SIZE
 - 
LIBRARY_SIZE
)

	)

28 
	#CT_TO_SECS
(
x
Ë((xË/ 
HZ
)

	)

29 
	#CT_TO_USECS
(
x
Ë(((xË% 
HZ
Ë* 1000000/HZ)

	)

31 
	#FIRST_TASK
 
èsk
[0]

	)

32 
	#LAST_TASK
 
èsk
[
NR_TASKS
-1]

	)

34 
	~<löux/hód.h
>

35 
	~<löux/fs.h
>

36 
	~<löux/mm.h
>

37 
	~<sys/∑øm.h
>

38 
	~<sys/time.h
>

39 
	~<sys/ªsour˚.h
>

40 
	~<sig«l.h
>

42 #i‡(
NR_OPEN
 > 32)

46 
	#TASK_RUNNING
 0

	)

47 
	#TASK_INTERRUPTIBLE
 1

	)

48 
	#TASK_UNINTERRUPTIBLE
 2

	)

49 
	#TASK_ZOMBIE
 3

	)

50 
	#TASK_STOPPED
 4

	)

52 #i‚de‡
NULL


53 
	#NULL
 ((*Ë0)

	)

56 
c›y_∑ge_èbÀs
(
‰om
, 
to
, 
size
);

57 
‰ì_∑ge_èbÀs
(
‰om
, 
size
);

59 
sched_öô
();

60 
scheduÀ
();

61 
å≠_öô
();

62 
∑nic
(c⁄° * 
°r
);

63 
ây_wrôe
(
mö‹
,* 
buf
,
cou¡
);

65 (*
	g‚_±r
)();

67 
	si387_°ru˘
 {

68 
	mcwd
;

69 
	mswd
;

70 
	mtwd
;

71 
	mfù
;

72 
	mfcs
;

73 
	mfoo
;

74 
	mfos
;

75 
	m°_•a˚
[20];

78 
	stss_°ru˘
 {

79 
	mback_lök
;

80 
	me•0
;

81 
	mss0
;

82 
	me•1
;

83 
	mss1
;

84 
	me•2
;

85 
	mss2
;

86 
	m¸3
;

87 
	meù
;

88 
	meÊags
;

89 
	móx
,
	mecx
,
	medx
,
	mebx
;

90 
	me•
;

91 
	mebp
;

92 
	mesi
;

93 
	medi
;

94 
	mes
;

95 
	mcs
;

96 
	mss
;

97 
	mds
;

98 
	mfs
;

99 
	mgs
;

100 
	mldt
;

101 
	måa˚_bôm≠
;

102 
i387_°ru˘
 
	mi387
;

105 
	sèsk_°ru˘
 {

107 
	m°©e
;

108 
	mcou¡î
;

109 
	m¥i‹ôy
;

110 
	msig«l
;

111 
siga˘i⁄
 
	msiga˘i⁄
[32];

112 
	mblocked
;

114 
	mexô_code
;

115 
	m°¨t_code
,
	míd_code
,
	míd_d©a
,
	mbrk
,
	m°¨t_°ack
;

116 
	mpid
,
	mpgΩ
,
	m£ssi⁄
,
	mÀadî
;

117 
	mgroups
[
NGROUPS
];

123 
èsk_°ru˘
 *
	mp_µå
, *
	mp_˝å
, *
	mp_y•å
, *
	mp_o•å
;

124 
	muid
,
	meuid
,
	msuid
;

125 
	mgid
,
	megid
,
	msgid
;

126 
	mtimeout
,
	mÆ¨m
;

127 
	mutime
,
	m°ime
,
	mcutime
,
	mc°ime
,
	m°¨t_time
;

128 
æimô
 
	mæim
[
RLIM_NLIMITS
];

129 
	mÊags
;

130 
	mu£d_m©h
;

132 
	mây
;

133 
	mumask
;

134 
m_öode
 * 
	mpwd
;

135 
m_öode
 * 
	mroŸ
;

136 
m_öode
 * 
	mexecuèbÀ
;

137 
m_öode
 * 
	mlibøry
;

138 
	m˛o£_⁄_exec
;

139 
fûe
 * 
	mfûp
[
NR_OPEN
];

141 
desc_°ru˘
 
	mldt
[3];

143 
tss_°ru˘
 
	mtss
;

149 
	#PF_ALIGNWARN
 0x00000001

	)

156 
	#INIT_TASK
 \

161  {
NOGROUP
,}, \

162  &
öô_èsk
.
èsk
,0,0,0, \

170  -1,0022,
NULL
,NULL,NULL,NULL,0, \

171  {
NULL
,}, \

177  {0,
PAGE_SIZE
+()&
öô_èsk
,0x10,0,0,0,0,()&
pg_dú
,\

180 
	`_LDT
(0),0x80000000, \

183 }

	)

185 
èsk_°ru˘
 *
èsk
[
NR_TASKS
];

186 
èsk_°ru˘
 *
œ°_èsk_u£d_m©h
;

187 
èsk_°ru˘
 *
cuºít
;

188 vﬁ©ûê
jiffõs
;

189 
°¨tup_time
;

190 
jiffõs_off£t
;

192 
	#CURRENT_TIME
 (
°¨tup_time
+(
jiffõs
+
jiffõs_off£t
)/
HZ
)

	)

194 
add_timî
(
jiffõs
, (*
‚
)());

195 
	`¶ìp_⁄
(
èsk_°ru˘
 ** 
p
);

196 
	`öãºu±ibÀ_¶ìp_⁄
(
èsk_°ru˘
 ** 
p
);

197 
	`wake_up
(
èsk_°ru˘
 ** 
p
);

198 
	`ö_group_p
(
gid_t
 
gΩ
);

204 
	#FIRST_TSS_ENTRY
 4

	)

205 
	#FIRST_LDT_ENTRY
 (
FIRST_TSS_ENTRY
+1)

	)

206 
	#_TSS
(
n
Ë((((Ën)<<4)+(
FIRST_TSS_ENTRY
<<3))

	)

207 
	#_LDT
(
n
Ë((((Ën)<<4)+(
FIRST_LDT_ENTRY
<<3))

	)

208 
	#…r
(
n
Ë
	`__asm__
("…∏%%ax"::"a" (
	`_TSS
“)))

	)

209 
	#Œdt
(
n
Ë
	`__asm__
("Œdà%%ax"::"a" (
	`_LDT
“)))

	)

210 
	#°r
(
n
) \

211 
	`__asm__
("str %%ax\n\t" \

214 :"˜" (
n
) \

215 :"a" (0),"i" (
FIRST_TSS_ENTRY
<<3))

	)

222 
	#swôch_to
(
n
) {\

223 °ru˘ {
a
,
b
;} 
__tmp
; \

224 
	`__asm__
("cmpl %%ecx,_current\n\t" \

233 ::"m" (*&
__tmp
.
a
),"m" (*&__tmp.
b
), \

234 "d" (
	`_TSS
(
n
)),"c" ((Ë
èsk
[n])); \

235 
	}

	)
}

237 
	#PAGE_ALIGN
(
n
Ë((“)+0xfff)&0xfffff000)

	)

239 
	#_£t_ba£
(
addr
,
ba£
) \

240 
	`__asm__
("movw %%dx,%0\n\t" \

244 ::"m" (*((
addr
)+2)), \

245 "m" (*((
addr
)+4)), \

246 "m" (*((
addr
)+7)), \

247 "d" (
ba£
) \

248 :"dx")

	)

250 
	#_£t_limô
(
addr
,
limô
) \

251 
	`__asm__
("movw %%dx,%0\n\t" \

257 ::"m" (*(
addr
)), \

258 "m" (*((
addr
)+6)), \

259 "d" (
limô
) \

260 :"dx")

	)

262 
	#£t_ba£
(
ldt
,
ba£
Ë
	`_£t_ba£
–((*)&÷dt)Ë, ba£ )

	)

263 
	#£t_limô
(
ldt
,
limô
Ë
	`_£t_limô
–((*)&÷dt)Ë, (limô-1)>>12 )

	)

265 
	#_gë_ba£
(
addr
) ({\

266 
__ba£
; \

267 
	`__asm__
("movb %3,%%dh\n\t" \

271 :"=d" (
__ba£
) \

272 :"m" (*((
addr
)+2)), \

273 "m" (*((
addr
)+4)), \

274 "m" (*((
addr
)+7))); \

275 
__ba£
;})

	)

277 
	#gë_ba£
(
ldt
Ë
	`_gë_ba£
–((*)&÷dt)Ë)

	)

279 
	#gë_limô
(
£gmít
) ({ \

280 
__limô
; \

281 
	`__asm__
("l¶»%1,%0\n\tö˛ %0":"Ù" (
__limô
):"r" (
£gmít
)); \

282 
__limô
;})

	)

	@include/linux/sys.h

5 
sys_£tup
();

6 
sys_exô
();

7 
sys_f‹k
();

8 
sys_ªad
();

9 
sys_wrôe
();

10 
sys_›í
();

11 
sys_˛o£
();

12 
sys_waôpid
();

13 
sys_¸ót
();

14 
sys_lök
();

15 
sys_u∆ök
();

16 
sys_execve
();

17 
sys_chdú
();

18 
sys_time
();

19 
sys_mknod
();

20 
sys_chmod
();

21 
sys_chown
();

22 
sys_bªak
();

23 
sys_°©
();

24 
sys_l£ek
();

25 
sys_gëpid
();

26 
sys_mou¡
();

27 
sys_umou¡
();

28 
sys_£tuid
();

29 
sys_gëuid
();

30 
sys_°ime
();

31 
sys_±ø˚
();

32 
sys_Æ¨m
();

33 
sys_f°©
();

34 
sys_∑u£
();

35 
sys_utime
();

36 
sys_°ty
();

37 
sys_gây
();

38 
sys_ac˚ss
();

39 
sys_ni˚
();

40 
sys_·ime
();

41 
sys_sync
();

42 
sys_kûl
();

43 
sys_ª«me
();

44 
sys_mkdú
();

45 
sys_rmdú
();

46 
sys_dup
();

47 
sys_pùe
();

48 
sys_times
();

49 
sys_¥of
();

50 
sys_brk
();

51 
sys_£tgid
();

52 
sys_gëgid
();

53 
sys_sig«l
();

54 
sys_gëeuid
();

55 
sys_gëegid
();

56 
sys_ac˘
();

57 
sys_phys
();

58 
sys_lock
();

59 
sys_io˘l
();

60 
sys_f˙é
();

61 
sys_mpx
();

62 
sys_£çgid
();

63 
sys_ulimô
();

64 
sys_u«me
();

65 
sys_umask
();

66 
sys_chroŸ
();

67 
sys_u°©
();

68 
sys_dup2
();

69 
sys_gëµid
();

70 
sys_gëpgΩ
();

71 
sys_£tsid
();

72 
sys_siga˘i⁄
();

73 
sys_sgëmask
();

74 
sys_s£tmask
();

75 
sys_£åeuid
();

76 
sys_£åegid
();

77 
sys_sig≥ndög
();

78 
sys_sigsu•íd
();

79 
sys_£tho°«me
();

80 
sys_£ålimô
();

81 
sys_gëæimô
();

82 
sys_gërußge
();

83 
sys_gëtimeofday
();

84 
sys_£âimeofday
();

85 
sys_gëgroups
();

86 
sys_£tgroups
();

87 
sys_£À˘
();

88 
sys_symlök
();

89 
sys_l°©
();

90 
sys_ªadlök
();

91 
sys_u£lib
();

93 
‚_±r
 
	gsys_ˇŒ_èbÀ
[] = { 
sys_£tup
, 
sys_exô
, 
sys_f‹k
, 
sys_ªad
,

94 
sys_wrôe
, 
sys_›í
, 
sys_˛o£
, 
sys_waôpid
, 
sys_¸ót
, 
sys_lök
,

95 
sys_u∆ök
, 
sys_execve
, 
sys_chdú
, 
sys_time
, 
sys_mknod
, 
sys_chmod
,

96 
sys_chown
, 
sys_bªak
, 
sys_°©
, 
sys_l£ek
, 
sys_gëpid
, 
sys_mou¡
,

97 
sys_umou¡
, 
sys_£tuid
, 
sys_gëuid
, 
sys_°ime
, 
sys_±ø˚
, 
sys_Æ¨m
,

98 
sys_f°©
, 
sys_∑u£
, 
sys_utime
, 
sys_°ty
, 
sys_gây
, 
sys_ac˚ss
,

99 
sys_ni˚
, 
sys_·ime
, 
sys_sync
, 
sys_kûl
, 
sys_ª«me
, 
sys_mkdú
,

100 
sys_rmdú
, 
sys_dup
, 
sys_pùe
, 
sys_times
, 
sys_¥of
, 
sys_brk
, 
sys_£tgid
,

101 
sys_gëgid
, 
sys_sig«l
, 
sys_gëeuid
, 
sys_gëegid
, 
sys_ac˘
, 
sys_phys
,

102 
sys_lock
, 
sys_io˘l
, 
sys_f˙é
, 
sys_mpx
, 
sys_£çgid
, 
sys_ulimô
,

103 
sys_u«me
, 
sys_umask
, 
sys_chroŸ
, 
sys_u°©
, 
sys_dup2
, 
sys_gëµid
,

104 
sys_gëpgΩ
, 
sys_£tsid
, 
sys_siga˘i⁄
, 
sys_sgëmask
, 
sys_s£tmask
,

105 
sys_£åeuid
,
sys_£åegid
, 
sys_sigsu•íd
, 
sys_sig≥ndög
, 
sys_£tho°«me
,

106 
sys_£ålimô
, 
sys_gëæimô
, 
sys_gërußge
, 
sys_gëtimeofday
,

107 
sys_£âimeofday
, 
sys_gëgroups
, 
sys_£tgroups
, 
sys_£À˘
, 
sys_symlök
,

108 
sys_l°©
, 
sys_ªadlök
, 
sys_u£lib
 };

111 
	gNR_sysˇŒs
 = (
sys_ˇŒ_èbÀ
)/(
‚_±r
);

	@include/linux/tty.h

9 #i‚de‡
_TTY_H


10 
	#_TTY_H


	)

12 
	#MAX_CONSOLES
 8

	)

13 
	#NR_SERIALS
 2

	)

14 
	#NR_PTYS
 4

	)

16 
NR_CONSOLES
;

18 
	~<ãrmios.h
>

20 
	#TTY_BUF_SIZE
 1024

	)

22 
	sây_queue
 {

23 
	md©a
;

24 
	mhód
;

25 
	mèû
;

26 
èsk_°ru˘
 * 
	m¥oc_li°
;

27 
	mbuf
[
TTY_BUF_SIZE
];

30 
	#IS_A_CONSOLE
(
mö
Ë(((möË& 0xC0Ë=0x00)

	)

31 
	#IS_A_SERIAL
(
mö
Ë(((möË& 0xC0Ë=0x40)

	)

32 
	#IS_A_PTY
(
mö
Ë((möË& 0x80)

	)

33 
	#IS_A_PTY_MASTER
(
mö
Ë(((möË& 0xC0Ë=0x80)

	)

34 
	#IS_A_PTY_SLAVE
(
mö
Ë(((möË& 0xC0Ë=0xC0)

	)

35 
	#PTY_OTHER
(
mö
Ë((möË^ 0x40)

	)

37 
	#INC
(
a
Ë(◊Ë(◊)+1Ë& (
TTY_BUF_SIZE
-1))

	)

38 
	#DEC
(
a
Ë(◊Ë(◊)-1Ë& (
TTY_BUF_SIZE
-1))

	)

39 
	#EMPTY
(
a
Ë(◊)->
hód
 =◊)->
èû
)

	)

40 
	#LEFT
(
a
Ë((◊)->
èû
-◊)->
hód
-1)&(
TTY_BUF_SIZE
-1))

	)

41 
	#LAST
(
a
Ë(◊)->
buf
[(
TTY_BUF_SIZE
-1)&(◊)->
hód
-1)])

	)

42 
	#FULL
(
a
Ë(!
	`LEFT
◊))

	)

43 
	#CHARS
(
a
Ë((◊)->
hód
-◊)->
èû
)&(
TTY_BUF_SIZE
-1))

	)

44 
	#GETCH
(
queue
,
c
) \

45 ()({
c
=(
queue
)->
buf
[(queue)->
èû
];
	`INC
((queue)->èû);})

	)

46 
	#PUTCH
(
c
,
queue
) \

47 ()({(
queue
)->
buf
[(queue)->
hód
]=(
c
);
	`INC
((queue)->hód);})

	)

49 
	#INTR_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VINTR
])

	)

50 
	#QUIT_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VQUIT
])

	)

51 
	#ERASE_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VERASE
])

	)

52 
	#KILL_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VKILL
])

	)

53 
	#EOF_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VEOF
])

	)

54 
	#START_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VSTART
])

	)

55 
	#STOP_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VSTOP
])

	)

56 
	#SUSPEND_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VSUSP
])

	)

58 
	sây_°ru˘
 {

59 
ãrmios
 
	mãrmios
;

60 
	mpgΩ
;

61 
	m£ssi⁄
;

62 
	m°›≥d
;

63 (*
	mwrôe
)(
ây_°ru˘
 * 
	mây
);

64 
ây_queue
 *
	mªad_q
;

65 
ây_queue
 *
	mwrôe_q
;

66 
ây_queue
 *
	m£c⁄d¨y
;

69 
ây_°ru˘
 
ây_èbÀ
[];

70 
fg_c⁄sﬁe
;

72 
	#TTY_TABLE
(
ƒ
) \

73 (
ây_èbÀ
 + ((
ƒ
Ë? ((“rË< 64)? (ƒ)-1:“r)Ë: 
fg_c⁄sﬁe
))

	)

81 
	#INIT_C_CC
 "\003\034\177\025\004\0\1\0\021\023\032\0\022\017\027\026\0"

	)

83 
rs_öô
();

84 
c⁄_öô
();

85 
ây_öô
();

87 
ây_ªad
(
c
, * 
buf
, 
n
);

88 
ây_wrôe
(
c
, * 
buf
, 
n
);

90 
c⁄_wrôe
(
ây_°ru˘
 * 
ây
);

91 
rs_wrôe
(
ây_°ru˘
 * 
ây
);

92 
m±y_wrôe
(
ây_°ru˘
 * 
ây
);

93 
•ty_wrôe
(
ây_°ru˘
 * 
ây
);

95 
c›y_to_cooked
(
ây_°ru˘
 * 
ây
);

97 
upd©e_s¸ìn
();

	@include/signal.h

1 #i‚de‡
_SIGNAL_H


2 
	#_SIGNAL_H


	)

4 
	~<sys/ty≥s.h
>

6 
	tsig_©omic_t
;

7 
	tsig£t_t
;

9 
	#_NSIG
 32

	)

10 
	#NSIG
 
_NSIG


	)

12 
	#SIGHUP
 1

	)

13 
	#SIGINT
 2

	)

14 
	#SIGQUIT
 3

	)

15 
	#SIGILL
 4

	)

16 
	#SIGTRAP
 5

	)

17 
	#SIGABRT
 6

	)

18 
	#SIGIOT
 6

	)

19 
	#SIGUNUSED
 7

	)

20 
	#SIGFPE
 8

	)

21 
	#SIGKILL
 9

	)

22 
	#SIGUSR1
 10

	)

23 
	#SIGSEGV
 11

	)

24 
	#SIGUSR2
 12

	)

25 
	#SIGPIPE
 13

	)

26 
	#SIGALRM
 14

	)

27 
	#SIGTERM
 15

	)

28 
	#SIGSTKFLT
 16

	)

29 
	#SIGCHLD
 17

	)

30 
	#SIGCONT
 18

	)

31 
	#SIGSTOP
 19

	)

32 
	#SIGTSTP
 20

	)

33 
	#SIGTTIN
 21

	)

34 
	#SIGTTOU
 22

	)

37 
	#SA_NOCLDSTOP
 1

	)

38 
	#SA_INTERRUPT
 0x20000000

	)

39 
	#SA_NOMASK
 0x40000000

	)

40 
	#SA_ONESHOT
 0x80000000

	)

42 
	#SIG_BLOCK
 0

	)

43 
	#SIG_UNBLOCK
 1

	)

44 
	#SIG_SETMASK
 2

	)

46 
	#SIG_DFL
 (((*)())0Ë

	)

47 
	#SIG_IGN
 (((*)())1Ë

	)

48 
	#SIG_ERR
 (((*)())-1Ë

	)

50 #ifde‡
nŸdef


51 
	#sigem±y£t
(
mask
Ë((*(maskË0), 1)

	)

52 
	#sigfûl£t
(
mask
Ë((*(maskË~0), 1)

	)

55 
	ssiga˘i⁄
 {

56 (*
	mß_h™dÀr
)();

57 
sig£t_t
 
	mß_mask
;

58 
	mß_Êags
;

59 (*
	mß_ª°‹î
)();

62 (*
sig«l
(
_sig
, (*
_func
)()))();

63 
	`øi£
(
sig
);

64 
	`kûl
(
pid_t
 
pid
, 
sig
);

65 
	`sigadd£t
(
sig£t_t
 *
mask
, 
signo
);

66 
	`sigdñ£t
(
sig£t_t
 *
mask
, 
signo
);

67 
	`sigem±y£t
(
sig£t_t
 *
mask
);

68 
	`sigfûl£t
(
sig£t_t
 *
mask
);

69 
	`sigismembî
(
sig£t_t
 *
mask
, 
signo
);

70 
	`sig≥ndög
(
sig£t_t
 *
£t
);

71 
	`sig¥ocmask
(
how
, 
sig£t_t
 *
£t
, sig£t_à*
ﬁd£t
);

72 
	`sigsu•íd
(
sig£t_t
 *
sigmask
);

73 
	`siga˘i⁄
(
sig
, 
siga˘i⁄
 *
a˘
, siga˘i⁄ *
ﬁda˘
);

	@include/stdarg.h

1 #i‚de‡
_STDARG_H


2 
	#_STDARG_H


	)

4 *
	tva_li°
;

9 
	#__va_rounded_size
(
TYPE
) \

10 ((( (
TYPE
Ë+  (Ë- 1Ë/  ()Ë*  ())

	)

12 #i‚de‡
__•¨c__


13 
	#va_°¨t
(
AP
, 
LASTARG
) \

14 (
AP
 = ((*Ë&(
LASTARG
Ë+ 
	`__va_rounded_size
 (LASTARG)))

	)

16 
	#va_°¨t
(
AP
, 
LASTARG
) \

17 (
	`__buûtö_ßvîegs
 (), \

18 
AP
 = ((*Ë&(
LASTARG
Ë+ 
	`__va_rounded_size
 (LASTARG)))

	)

21 
va_íd
 (
va_li°
);

22 
	#va_íd
(
AP
)

	)

24 
	#va_¨g
(
AP
, 
TYPE
) \

25 (
AP
 +
	`__va_rounded_size
 (
TYPE
), \

26 *((
TYPE
 *Ë(
AP
 - 
	`__va_rounded_size
 (TYPE))))

	)

	@include/stddef.h

1 #i‚de‡
_STDDEF_H


2 
	#_STDDEF_H


	)

4 #i‚de‡
_PTRDIFF_T


5 
	#_PTRDIFF_T


	)

6 
	t±rdiff_t
;

9 #i‚de‡
_SIZE_T


10 
	#_SIZE_T


	)

11 
	tsize_t
;

14 #unde‡
NULL


15 
	#NULL
 ((*)0)

	)

17 
	#off£tof
(
TYPE
, 
MEMBER
Ë((
size_t
Ë&((TYPE *)0)->MEMBER)

	)

	@include/string.h

1 #i‚de‡
_STRING_H_


2 
	#_STRING_H_


	)

4 #i‚de‡
NULL


5 
	#NULL
 ((*Ë0)

	)

8 #i‚de‡
_SIZE_T


9 
	#_SIZE_T


	)

10 
	tsize_t
;

13 * 
°ªº‹
(
î∫o
);

27 
ölöe
 * 
	$°r˝y
(* 
de°
,c⁄° *
§c
)

29 
	`__asm__
("cld\n"

34 ::"S" (
§c
),"D" (
de°
):"si","di","ax");

35  
de°
;

36 
	}
}

38 
ölöe
 * 
	$°∫˝y
(* 
de°
,c⁄° *
§c
,
cou¡
)

40 
	`__asm__
("cld\n"

50 ::"S" (
§c
),"D" (
de°
),"c" (
cou¡
):"si","di","ax","cx");

51  
de°
;

52 
	}
}

54 
ölöe
 * 
	$°rˇt
(* 
de°
,c⁄° * 
§c
)

56 
	`__asm__
("cld\n\t"

64 ::"S" (
§c
),"D" (
de°
),"a" (0),"c" (0xffffffff):"si","di","ax","cx");

65  
de°
;

66 
	}
}

68 
ölöe
 * 
	$°∫ˇt
(* 
de°
,c⁄° * 
§c
,
cou¡
)

70 
	`__asm__
("cld\n\t"

83 ::"S" (
§c
),"D" (
de°
),"a" (0),"c" (0xffffffff),"g" (
cou¡
)

85  
de°
;

86 
	}
}

88 
ölöe
 
	$°rcmp
(c⁄° * 
cs
,c⁄° * 
˘
)

90 
__ªs
 
	`__asm__
("ax");

91 
	`__asm__
("cld\n"

103 :"˜" (
__ªs
):"D" (
cs
),"S" (
˘
):"si","di");

104  
__ªs
;

105 
	}
}

107 
ölöe
 
	$°∫cmp
(c⁄° * 
cs
,c⁄° * 
˘
,
cou¡
)

109 
__ªs
 
	`__asm__
("ax");

110 
	`__asm__
("cld\n"

124 :"˜" (
__ªs
):"D" (
cs
),"S" (
˘
),"c" (
cou¡
):"si","di","cx");

125  
__ªs
;

126 
	}
}

128 
ölöe
 * 
	$°rchr
(c⁄° * 
s
,
c
)

130 * 
__ªs
 
	`__asm__
("ax");

131 
	`__asm__
("cld\n\t"

141 :"˜" (
__ªs
):"S" (
s
),"0" (
c
):"si");

142  
__ªs
;

143 
	}
}

145 
ölöe
 * 
	$°ºchr
(c⁄° * 
s
,
c
)

147 * 
__ªs
 
	`__asm__
("dx");

148 
	`__asm__
("cld\n\t"

157 :"=d" (
__ªs
):"0" (0),"S" (
s
),"a" (
c
):"ax","si");

158  
__ªs
;

159 
	}
}

161 
ölöe
 
	$°r•n
(c⁄° * 
cs
, c⁄° * 
˘
)

163 * 
__ªs
 
	`__asm__
("si");

164 
	`__asm__
("cld\n\t"

180 :"=S" (
__ªs
):"a" (0),"c" (0xffffffff),"0" (
cs
),"g" (
˘
)

182  
__ªs
-
cs
;

183 
	}
}

185 
ölöe
 
	$°rc•n
(c⁄° * 
cs
, c⁄° * 
˘
)

187 * 
__ªs
 
	`__asm__
("si");

188 
	`__asm__
("cld\n\t"

204 :"=S" (
__ªs
):"a" (0),"c" (0xffffffff),"0" (
cs
),"g" (
˘
)

206  
__ªs
-
cs
;

207 
	}
}

209 
ölöe
 * 
	$°Ωbrk
(c⁄° * 
cs
,c⁄° * 
˘
)

211 * 
__ªs
 
	`__asm__
("si");

212 
	`__asm__
("cld\n\t"

231 :"=S" (
__ªs
):"a" (0),"c" (0xffffffff),"0" (
cs
),"g" (
˘
)

233  
__ªs
;

234 
	}
}

236 
ölöe
 * 
	$°r°r
(c⁄° * 
cs
,c⁄° * 
˘
)

238 * 
__ªs
 
	`__asm__
("ax");

239 
	`__asm__
("cld\n\t" \

258 :"˜" (
__ªs
):"0" (0),"c" (0xffffffff),"S" (
cs
),"g" (
˘
)

260  
__ªs
;

261 
	}
}

263 
ölöe
 
	$°æí
(c⁄° * 
s
)

265 
__ªs
 
	`__asm__
("cx");

266 
	`__asm__
("cld\n\t"

271 :"=c" (
__ªs
):"D" (
s
),"a" (0),"0" (0xffffffff):"di");

272  
__ªs
;

273 
	}
}

275 * 
___°πok
;

277 
ölöe
 * 
	$°πok
(* 
s
,c⁄° * 
˘
)

279 * 
__ªs
 
	`__asm__
("si");

280 
	`__asm__
("testl %1,%1\n\t"

330 :"=b" (
__ªs
),"=S" (
___°πok
)

331 :"0" (
___°πok
),"1" (
s
),"g" (
˘
)

333  
__ªs
;

334 
	}
}

336 
ölöe
 * 
	$mem˝y
(* 
de°
,c⁄° * 
§c
, 
n
)

338 
	`__asm__
("cld\n\t"

341 ::"c" (
n
),"S" (
§c
),"D" (
de°
)

343  
de°
;

344 
	}
}

346 
ölöe
 * 
	$memmove
(* 
de°
,c⁄° * 
§c
, 
n
)

348 i‡(
de°
<
§c
)

349 
	`__asm__
("cld\n\t"

352 ::"c" (
n
),"S" (
§c
),"D" (
de°
)

355 
	`__asm__
("std\n\t"

358 ::"c" (
n
),"S" (
§c
+n-1),"D" (
de°
+n-1)

360  
de°
;

361 
	}
}

363 
ölöe
 
	$memcmp
(c⁄° * 
cs
,c⁄° * 
˘
,
cou¡
)

365 
__ªs
 
	`__asm__
("ax");

366 
	`__asm__
("cld\n\t"

374 :"˜" (
__ªs
):"0" (0),"D" (
cs
),"S" (
˘
),"c" (
cou¡
)

376  
__ªs
;

377 
	}
}

379 
ölöe
 * 
	$memchr
(c⁄° * 
cs
,
c
,
cou¡
)

381 * 
__ªs
 
	`__asm__
("di");

382 i‡(!
cou¡
)

383  
NULL
;

384 
	`__asm__
("cld\n\t"

390 :"=D" (
__ªs
):"a" (
c
),"D" (
cs
),"c" (
cou¡
)

392  
__ªs
;

393 
	}
}

395 
ölöe
 * 
	$mem£t
(* 
s
,
c
,
cou¡
)

397 
	`__asm__
("cld\n\t"

400 ::"a" (
c
),"D" (
s
),"c" (
cou¡
)

402  
s
;

403 
	}
}

	@include/sys/param.h

1 #i‚de‡
_SYS_PARAM_H


2 
	#_SYS_PARAM_H


	)

4 
	#HZ
 100

	)

5 
	#EXEC_PAGESIZE
 4096

	)

7 
	#NGROUPS
 32

	)

8 
	#NOGROUP
 -1

	)

10 
	#MAXHOSTNAMELEN
 8

	)

	@include/sys/resource.h

5 #i‚de‡
_SYS_RESOURCE_H


6 
	#_SYS_RESOURCE_H


	)

15 
	#RUSAGE_SELF
 0

	)

16 
	#RUSAGE_CHILDREN
 -1

	)

18 
	srußge
 {

19 
timevÆ
 
	mru_utime
;

20 
timevÆ
 
	mru_°ime
;

21 
	mru_maxrss
;

22 
	mru_ixrss
;

23 
	mru_idrss
;

24 
	mru_i§ss
;

25 
	mru_möÊt
;

26 
	mru_majÊt
;

27 
	mru_nsw≠
;

28 
	mru_öblock
;

29 
	mru_oublock
;

30 
	mru_msg¢d
;

31 
	mru_msgrcv
;

32 
	mru_nsig«ls
;

33 
	mru_nvcsw
;

34 
	mru_nivcsw
;

41 
	#RLIMIT_CPU
 0

	)

42 
	#RLIMIT_FSIZE
 1

	)

43 
	#RLIMIT_DATA
 2

	)

44 
	#RLIMIT_STACK
 3

	)

45 
	#RLIMIT_CORE
 4

	)

46 
	#RLIMIT_RSS
 5

	)

48 #ifde‡
nŸdef


49 
	#RLIMIT_MEMLOCK
 6

	)

50 
	#RLIMIT_NPROC
 7

	)

51 
	#RLIMIT_OFILE
 8

	)

54 
	#RLIM_NLIMITS
 6

	)

56 
	#RLIM_INFINITY
 0x7fffffff

	)

58 
	sæimô
 {

59 
	mæim_cur
;

60 
	mæim_max
;

	@include/sys/stat.h

1 #i‚de‡
_SYS_STAT_H


2 
	#_SYS_STAT_H


	)

4 
	~<sys/ty≥s.h
>

6 
	s°©
 {

7 
dev_t
 
	m°_dev
;

8 
öo_t
 
	m°_öo
;

9 
umode_t
 
	m°_mode
;

10 
∆ök_t
 
	m°_∆ök
;

11 
uid_t
 
	m°_uid
;

12 
gid_t
 
	m°_gid
;

13 
dev_t
 
	m°_rdev
;

14 
off_t
 
	m°_size
;

15 
time_t
 
	m°_©ime
;

16 
time_t
 
	m°_mtime
;

17 
time_t
 
	m°_˘ime
;

20 
	#S_IFMT
 00170000

	)

21 
	#S_IFLNK
 0120000

	)

22 
	#S_IFREG
 0100000

	)

23 
	#S_IFBLK
 0060000

	)

24 
	#S_IFDIR
 0040000

	)

25 
	#S_IFCHR
 0020000

	)

26 
	#S_IFIFO
 0010000

	)

27 
	#S_ISUID
 0004000

	)

28 
	#S_ISGID
 0002000

	)

29 
	#S_ISVTX
 0001000

	)

31 
	#S_ISLNK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFLNK
)

	)

32 
	#S_ISREG
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFREG
)

	)

33 
	#S_ISDIR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFDIR
)

	)

34 
	#S_ISCHR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFCHR
)

	)

35 
	#S_ISBLK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFBLK
)

	)

36 
	#S_ISFIFO
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFIFO
)

	)

38 
	#S_IRWXU
 00700

	)

39 
	#S_IRUSR
 00400

	)

40 
	#S_IWUSR
 00200

	)

41 
	#S_IXUSR
 00100

	)

43 
	#S_IRWXG
 00070

	)

44 
	#S_IRGRP
 00040

	)

45 
	#S_IWGRP
 00020

	)

46 
	#S_IXGRP
 00010

	)

48 
	#S_IRWXO
 00007

	)

49 
	#S_IROTH
 00004

	)

50 
	#S_IWOTH
 00002

	)

51 
	#S_IXOTH
 00001

	)

53 
chmod
(c⁄° *
_∑th
, 
mode_t
 
mode
);

54 
f°©
(
fûdes
, 
°©
 *
°©_buf
);

55 
mkdú
(c⁄° *
_∑th
, 
mode_t
 
mode
);

56 
mkfifo
(c⁄° *
_∑th
, 
mode_t
 
mode
);

57 
°©
(c⁄° *
fûíame
, °© *
°©_buf
);

58 
mode_t
 
umask
(mode_à
mask
);

	@include/sys/time.h

1 #i‚de‡
_SYS_TIME_H


2 
	#_SYS_TIME_H


	)

5 
	stimevÆ
 {

6 
	mtv_£c
;

7 
	mtv_u£c
;

10 
	stimez⁄e
 {

11 
	mtz_möuãswe°
;

12 
	mtz_d°time
;

15 
	#DST_NONE
 0

	)

16 
	#DST_USA
 1

	)

17 
	#DST_AUST
 2

	)

18 
	#DST_WET
 3

	)

19 
	#DST_MET
 4

	)

20 
	#DST_EET
 5

	)

21 
	#DST_CAN
 6

	)

22 
	#DST_GB
 7

	)

23 
	#DST_RUM
 8

	)

24 
	#DST_TUR
 9

	)

25 
	#DST_AUSTALT
 10

	)

27 
	#FD_SET
(
fd
,
fd£ç
Ë(*(fd£çË|(1 << (fd)))

	)

28 
	#FD_CLR
(
fd
,
fd£ç
Ë(*(fd£çË&~(1 << (fd)))

	)

29 
	#FD_ISSET
(
fd
,
fd£ç
Ë((*(fd£çË>> fdË& 1)

	)

30 
	#FD_ZERO
(
fd£ç
Ë(*(fd£çË0)

	)

37 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

38 
	#timîcmp
(
tvp
, 
uvp
, 
cmp
) \

39 ((
tvp
)->
tv_£c
 
	`cmp
 (
uvp
)->tv_sec || \

40 (
tvp
)->
tv_£c
 =(
uvp
)->tv_£¯&& (tvp)->
tv_u£c
 
	`cmp
 (uvp)->tv_u£c)

	)

41 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

47 
	#ITIMER_REAL
 0

	)

48 
	#ITIMER_VIRTUAL
 1

	)

49 
	#ITIMER_PROF
 2

	)

51 
	sôimîvÆ
 {

52 
timevÆ
 
	mô_öãrvÆ
;

53 
timevÆ
 
	mô_vÆue
;

56 
	~<time.h
>

57 
	~<sys/ty≥s.h
>

59 
gëtimeofday
(
timevÆ
 * 
ç
, 
timez⁄e
 * 
tz
);

60 
£À˘
(
width
, 
fd_£t
 * 
ªadfds
, fd_£à* 
wrôefds
,

61 
fd_£t
 * 
ex˚±fds
, 
timevÆ
 * 
timeout
);

	@include/sys/times.h

1 #i‚de‡
_TIMES_H


2 
	#_TIMES_H


	)

4 
	~<sys/ty≥s.h
>

6 
	stms
 {

7 
time_t
 
	mtms_utime
;

8 
time_t
 
	mtms_°ime
;

9 
time_t
 
	mtms_cutime
;

10 
time_t
 
	mtms_c°ime
;

13 
time_t
 
times
(
tms
 * 
ç
);

	@include/sys/types.h

1 #i‚de‡
_SYS_TYPES_H


2 
	#_SYS_TYPES_H


	)

4 #i‚de‡
_SIZE_T


5 
	#_SIZE_T


	)

6 
	tsize_t
;

9 #i‚de‡
_TIME_T


10 
	#_TIME_T


	)

11 
	ttime_t
;

14 #i‚de‡
_PTRDIFF_T


15 
	#_PTRDIFF_T


	)

16 
	t±rdiff_t
;

19 #i‚de‡
NULL


20 
	#NULL
 ((*Ë0)

	)

23 
	tpid_t
;

24 
	tuid_t
;

25 
	tgid_t
;

26 
	tdev_t
;

27 
	töo_t
;

28 
	tmode_t
;

29 
	tumode_t
;

30 
	t∆ök_t
;

31 
	tdaddr_t
;

32 
	toff_t
;

33 
	tu_ch¨
;

34 
	tush‹t
;

36 
	tcc_t
;

37 
	t•ìd_t
;

38 
	ttcÊag_t
;

40 
	tfd_£t
;

42 °ru˘ { 
	mquŸ
,
	mªm
; } 
	tdiv_t
;

43 °ru˘ { 
	mquŸ
,
	mªm
; } 
	tldiv_t
;

45 
	su°©
 {

46 
daddr_t
 
	mf_t‰ì
;

47 
öo_t
 
	mf_töode
;

48 
	mf_‚ame
[6];

49 
	mf_Âack
[6];

	@include/sys/utsname.h

1 #i‚de‡
_SYS_UTSNAME_H


2 
	#_SYS_UTSNAME_H


	)

4 
	~<sys/ty≥s.h
>

5 
	~<sys/∑øm.h
>

7 
	sut¢ame
 {

8 
	msy¢ame
[9];

9 
	mnodíame
[
MAXHOSTNAMELEN
+1];

10 
	mªÀa£
[9];

11 
	mvîsi⁄
[9];

12 
	mmachöe
[9];

15 
u«me
(
ut¢ame
 * 
utsbuf
);

	@include/sys/wait.h

1 #i‚de‡
_SYS_WAIT_H


2 
	#_SYS_WAIT_H


	)

4 
	~<sys/ty≥s.h
>

6 
	#_LOW
(
v
Ë–(vË& 0377)

	)

7 
	#_HIGH
(
v
Ë–((vË>> 8Ë& 0377)

	)

10 
	#WNOHANG
 1

	)

11 
	#WUNTRACED
 2

	)

13 
	#WIFEXITED
(
s
Ë(!((s)&0xFF))

	)

14 
	#WIFSTOPPED
(
s
Ë(((s)&0xFF)==0x7F)

	)

15 
	#WEXITSTATUS
(
s
Ë(((s)>>8)&0xFF)

	)

16 
	#WTERMSIG
(
s
Ë((s)&0x7F)

	)

17 
	#WCOREDUMP
(
s
Ë((s)&0x80)

	)

18 
	#WSTOPSIG
(
s
Ë(((s)>>8)&0xFF)

	)

19 
	#WIFSIGNALED
(
s
Ë((()(s)-1 & 0xFFFFË< 0xFF)

	)

21 
pid_t
 
waô
(*
°©_loc
);

22 
pid_t
 
waôpid
’id_à
pid
, *
°©_loc
, 
›ti⁄s
);

	@include/termios.h

1 #i‚de‡
_TERMIOS_H


2 
	#_TERMIOS_H


	)

4 
	~<sys/ty≥s.h
>

6 
	#TTY_BUF_SIZE
 1024

	)

10 
	#TCGETS
 0x5401

	)

11 
	#TCSETS
 0x5402

	)

12 
	#TCSETSW
 0x5403

	)

13 
	#TCSETSF
 0x5404

	)

14 
	#TCGETA
 0x5405

	)

15 
	#TCSETA
 0x5406

	)

16 
	#TCSETAW
 0x5407

	)

17 
	#TCSETAF
 0x5408

	)

18 
	#TCSBRK
 0x5409

	)

19 
	#TCXONC
 0x540A

	)

20 
	#TCFLSH
 0x540B

	)

21 
	#TIOCEXCL
 0x540C

	)

22 
	#TIOCNXCL
 0x540D

	)

23 
	#TIOCSCTTY
 0x540E

	)

24 
	#TIOCGPGRP
 0x540F

	)

25 
	#TIOCSPGRP
 0x5410

	)

26 
	#TIOCOUTQ
 0x5411

	)

27 
	#TIOCSTI
 0x5412

	)

28 
	#TIOCGWINSZ
 0x5413

	)

29 
	#TIOCSWINSZ
 0x5414

	)

30 
	#TIOCMGET
 0x5415

	)

31 
	#TIOCMBIS
 0x5416

	)

32 
	#TIOCMBIC
 0x5417

	)

33 
	#TIOCMSET
 0x5418

	)

34 
	#TIOCGSOFTCAR
 0x5419

	)

35 
	#TIOCSSOFTCAR
 0x541A

	)

36 
	#FIONREAD
 0x541B

	)

37 
	#TIOCINQ
 
FIONREAD


	)

39 
	swösize
 {

40 
	mws_row
;

41 
	mws_cﬁ
;

42 
	mws_xpixñ
;

43 
	mws_ypixñ
;

46 
	#NCC
 8

	)

47 
	sãrmio
 {

48 
	mc_iÊag
;

49 
	mc_oÊag
;

50 
	mc_cÊag
;

51 
	mc_lÊag
;

52 
	mc_löe
;

53 
	mc_cc
[
NCC
];

56 
	#NCCS
 17

	)

57 
	sãrmios
 {

58 
tcÊag_t
 
	mc_iÊag
;

59 
tcÊag_t
 
	mc_oÊag
;

60 
tcÊag_t
 
	mc_cÊag
;

61 
tcÊag_t
 
	mc_lÊag
;

62 
cc_t
 
	mc_löe
;

63 
cc_t
 
	mc_cc
[
NCCS
];

67 
	#VINTR
 0

	)

68 
	#VQUIT
 1

	)

69 
	#VERASE
 2

	)

70 
	#VKILL
 3

	)

71 
	#VEOF
 4

	)

72 
	#VTIME
 5

	)

73 
	#VMIN
 6

	)

74 
	#VSWTC
 7

	)

75 
	#VSTART
 8

	)

76 
	#VSTOP
 9

	)

77 
	#VSUSP
 10

	)

78 
	#VEOL
 11

	)

79 
	#VREPRINT
 12

	)

80 
	#VDISCARD
 13

	)

81 
	#VWERASE
 14

	)

82 
	#VLNEXT
 15

	)

83 
	#VEOL2
 16

	)

86 
	#IGNBRK
 0000001

	)

87 
	#BRKINT
 0000002

	)

88 
	#IGNPAR
 0000004

	)

89 
	#PARMRK
 0000010

	)

90 
	#INPCK
 0000020

	)

91 
	#ISTRIP
 0000040

	)

92 
	#INLCR
 0000100

	)

93 
	#IGNCR
 0000200

	)

94 
	#ICRNL
 0000400

	)

95 
	#IUCLC
 0001000

	)

96 
	#IXON
 0002000

	)

97 
	#IXANY
 0004000

	)

98 
	#IXOFF
 0010000

	)

99 
	#IMAXBEL
 0020000

	)

102 
	#OPOST
 0000001

	)

103 
	#OLCUC
 0000002

	)

104 
	#ONLCR
 0000004

	)

105 
	#OCRNL
 0000010

	)

106 
	#ONOCR
 0000020

	)

107 
	#ONLRET
 0000040

	)

108 
	#OFILL
 0000100

	)

109 
	#OFDEL
 0000200

	)

110 
	#NLDLY
 0000400

	)

111 
	#NL0
 0000000

	)

112 
	#NL1
 0000400

	)

113 
	#CRDLY
 0003000

	)

114 
	#CR0
 0000000

	)

115 
	#CR1
 0001000

	)

116 
	#CR2
 0002000

	)

117 
	#CR3
 0003000

	)

118 
	#TABDLY
 0014000

	)

119 
	#TAB0
 0000000

	)

120 
	#TAB1
 0004000

	)

121 
	#TAB2
 0010000

	)

122 
	#TAB3
 0014000

	)

123 
	#XTABS
 0014000

	)

124 
	#BSDLY
 0020000

	)

125 
	#BS0
 0000000

	)

126 
	#BS1
 0020000

	)

127 
	#VTDLY
 0040000

	)

128 
	#VT0
 0000000

	)

129 
	#VT1
 0040000

	)

130 
	#FFDLY
 0040000

	)

131 
	#FF0
 0000000

	)

132 
	#FF1
 0040000

	)

135 
	#CBAUD
 0000017

	)

136 
	#B0
 0000000

	)

137 
	#B50
 0000001

	)

138 
	#B75
 0000002

	)

139 
	#B110
 0000003

	)

140 
	#B134
 0000004

	)

141 
	#B150
 0000005

	)

142 
	#B200
 0000006

	)

143 
	#B300
 0000007

	)

144 
	#B600
 0000010

	)

145 
	#B1200
 0000011

	)

146 
	#B1800
 0000012

	)

147 
	#B2400
 0000013

	)

148 
	#B4800
 0000014

	)

149 
	#B9600
 0000015

	)

150 
	#B19200
 0000016

	)

151 
	#B38400
 0000017

	)

152 
	#EXTA
 
B19200


	)

153 
	#EXTB
 
B38400


	)

154 
	#CSIZE
 0000060

	)

155 
	#CS5
 0000000

	)

156 
	#CS6
 0000020

	)

157 
	#CS7
 0000040

	)

158 
	#CS8
 0000060

	)

159 
	#CSTOPB
 0000100

	)

160 
	#CREAD
 0000200

	)

161 
	#PARENB
 0000400

	)

162 
	#PARODD
 0001000

	)

163 
	#HUPCL
 0002000

	)

164 
	#CLOCAL
 0004000

	)

165 
	#CIBAUD
 03600000

	)

166 
	#CRTSCTS
 020000000000

	)

169 
	#ISIG
 0000001

	)

170 
	#ICANON
 0000002

	)

171 
	#XCASE
 0000004

	)

172 
	#ECHO
 0000010

	)

173 
	#ECHOE
 0000020

	)

174 
	#ECHOK
 0000040

	)

175 
	#ECHONL
 0000100

	)

176 
	#NOFLSH
 0000200

	)

177 
	#TOSTOP
 0000400

	)

178 
	#ECHOCTL
 0001000

	)

179 
	#ECHOPRT
 0002000

	)

180 
	#ECHOKE
 0004000

	)

181 
	#FLUSHO
 0010000

	)

182 
	#PENDIN
 0040000

	)

183 
	#IEXTEN
 0100000

	)

186 
	#TIOCM_LE
 0x001

	)

187 
	#TIOCM_DTR
 0x002

	)

188 
	#TIOCM_RTS
 0x004

	)

189 
	#TIOCM_ST
 0x008

	)

190 
	#TIOCM_SR
 0x010

	)

191 
	#TIOCM_CTS
 0x020

	)

192 
	#TIOCM_CAR
 0x040

	)

193 
	#TIOCM_RNG
 0x080

	)

194 
	#TIOCM_DSR
 0x100

	)

195 
	#TIOCM_CD
 
TIOCM_CAR


	)

196 
	#TIOCM_RI
 
TIOCM_RNG


	)

199 
	#TCOOFF
 0

	)

200 
	#TCOON
 1

	)

201 
	#TCIOFF
 2

	)

202 
	#TCION
 3

	)

205 
	#TCIFLUSH
 0

	)

206 
	#TCOFLUSH
 1

	)

207 
	#TCIOFLUSH
 2

	)

210 
	#TCSANOW
 0

	)

211 
	#TCSADRAIN
 1

	)

212 
	#TCSAFLUSH
 2

	)

214 
•ìd_t
 
cfgëi•ìd
(
ãrmios
 *
ãrmios_p
);

215 
•ìd_t
 
cfgëo•ìd
(
ãrmios
 *
ãrmios_p
);

216 
cf£ti•ìd
(
ãrmios
 *
ãrmios_p
, 
•ìd_t
 
•ìd
);

217 
cf£to•ìd
(
ãrmios
 *
ãrmios_p
, 
•ìd_t
 
•ìd
);

218 
tcdøö
(
fûdes
);

219 
tcÊow
(
fûdes
, 
a˘i⁄
);

220 
tcÊush
(
fûdes
, 
queue_£À˘‹
);

221 
tcgë©å
(
fûdes
, 
ãrmios
 *
ãrmios_p
);

222 
tc£ndbªak
(
fûdes
, 
duøti⁄
);

223 
tc£èâr
(
fûdes
, 
›ti⁄Æ_a˘i⁄s
,

224 
ãrmios
 *
ãrmios_p
);

	@include/time.h

1 #i‚de‡
_TIME_H


2 
	#_TIME_H


	)

4 #i‚de‡
_TIME_T


5 
	#_TIME_T


	)

6 
	ttime_t
;

9 #i‚de‡
_SIZE_T


10 
	#_SIZE_T


	)

11 
	tsize_t
;

14 #i‚de‡
NULL


15 
	#NULL
 ((*Ë0)

	)

18 
	#CLOCKS_PER_SEC
 100

	)

20 
	t˛ock_t
;

22 
	stm
 {

23 
	mtm_£c
;

24 
	mtm_mö
;

25 
	mtm_hour
;

26 
	mtm_mday
;

27 
	mtm_m⁄
;

28 
	mtm_yór
;

29 
	mtm_wday
;

30 
	mtm_yday
;

31 
	mtm_isd°
;

34 
	#__i¶óp
(
yór
) \

35 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 1000 =0))

	)

37 
˛ock_t
 
˛ock
();

38 
time_t
 
time
—ime_à* 
ç
);

39 
dif·ime
(
time_t
 
time2
,Åime_à
time1
);

40 
time_t
 
mktime
(
tm
 * 
ç
);

42 * 
as˘ime
(c⁄° 
tm
 * 
ç
);

43 * 
˘ime
(c⁄° 
time_t
 * 
ç
);

44 
tm
 * 
gmtime
(c⁄° 
time_t
 *
ç
);

45 
tm
 *
loˇ…ime
(c⁄° 
time_t
 * 
ç
);

46 
size_t
 
°r·ime
(* 
s
, size_à
smax
, c⁄° * 
fmt
, c⁄° 
tm
 * 
ç
);

47 
tz£t
();

	@include/unistd.h

1 #i‚de‡
_UNISTD_H


2 
	#_UNISTD_H


	)

5 
	#_POSIX_VERSION
 198808L

	)

7 
	#_POSIX_CHOWN_RESTRICTED


	)

8 
	#_POSIX_NO_TRUNC


	)

9 
	#_POSIX_VDISABLE
 '\0'

	)

10 
	#_POSIX_JOB_CONTROL


	)

11 
	#_POSIX_SAVED_IDS


	)

13 
	#STDIN_FILENO
 0

	)

14 
	#STDOUT_FILENO
 1

	)

15 
	#STDERR_FILENO
 2

	)

17 #i‚de‡
NULL


18 
	#NULL
 ((*)0)

	)

22 
	#F_OK
 0

	)

23 
	#X_OK
 1

	)

24 
	#W_OK
 2

	)

25 
	#R_OK
 4

	)

28 
	#SEEK_SET
 0

	)

29 
	#SEEK_CUR
 1

	)

30 
	#SEEK_END
 2

	)

33 
	#_SC_ARG_MAX
 1

	)

34 
	#_SC_CHILD_MAX
 2

	)

35 
	#_SC_CLOCKS_PER_SEC
 3

	)

36 
	#_SC_NGROUPS_MAX
 4

	)

37 
	#_SC_OPEN_MAX
 5

	)

38 
	#_SC_JOB_CONTROL
 6

	)

39 
	#_SC_SAVED_IDS
 7

	)

40 
	#_SC_VERSION
 8

	)

43 
	#_PC_LINK_MAX
 1

	)

44 
	#_PC_MAX_CANON
 2

	)

45 
	#_PC_MAX_INPUT
 3

	)

46 
	#_PC_NAME_MAX
 4

	)

47 
	#_PC_PATH_MAX
 5

	)

48 
	#_PC_PIPE_BUF
 6

	)

49 
	#_PC_NO_TRUNC
 7

	)

50 
	#_PC_VDISABLE
 8

	)

51 
	#_PC_CHOWN_RESTRICTED
 9

	)

53 
	~<sys/°©.h
>

54 
	~<sys/time.h
>

55 
	~<sys/times.h
>

56 
	~<sys/ut¢ame.h
>

57 
	~<sys/ªsour˚.h
>

58 
	~<utime.h
>

60 #ifde‡
__LIBRARY__


62 
	#__NR_£tup
 0

	)

63 
	#__NR_exô
 1

	)

64 
	#__NR_f‹k
 2

	)

65 
	#__NR_ªad
 3

	)

66 
	#__NR_wrôe
 4

	)

67 
	#__NR_›í
 5

	)

68 
	#__NR_˛o£
 6

	)

69 
	#__NR_waôpid
 7

	)

70 
	#__NR_¸ót
 8

	)

71 
	#__NR_lök
 9

	)

72 
	#__NR_u∆ök
 10

	)

73 
	#__NR_execve
 11

	)

74 
	#__NR_chdú
 12

	)

75 
	#__NR_time
 13

	)

76 
	#__NR_mknod
 14

	)

77 
	#__NR_chmod
 15

	)

78 
	#__NR_chown
 16

	)

79 
	#__NR_bªak
 17

	)

80 
	#__NR_°©
 18

	)

81 
	#__NR_l£ek
 19

	)

82 
	#__NR_gëpid
 20

	)

83 
	#__NR_mou¡
 21

	)

84 
	#__NR_umou¡
 22

	)

85 
	#__NR_£tuid
 23

	)

86 
	#__NR_gëuid
 24

	)

87 
	#__NR_°ime
 25

	)

88 
	#__NR_±ø˚
 26

	)

89 
	#__NR_Æ¨m
 27

	)

90 
	#__NR_f°©
 28

	)

91 
	#__NR_∑u£
 29

	)

92 
	#__NR_utime
 30

	)

93 
	#__NR_°ty
 31

	)

94 
	#__NR_gây
 32

	)

95 
	#__NR_ac˚ss
 33

	)

96 
	#__NR_ni˚
 34

	)

97 
	#__NR_·ime
 35

	)

98 
	#__NR_sync
 36

	)

99 
	#__NR_kûl
 37

	)

100 
	#__NR_ª«me
 38

	)

101 
	#__NR_mkdú
 39

	)

102 
	#__NR_rmdú
 40

	)

103 
	#__NR_dup
 41

	)

104 
	#__NR_pùe
 42

	)

105 
	#__NR_times
 43

	)

106 
	#__NR_¥of
 44

	)

107 
	#__NR_brk
 45

	)

108 
	#__NR_£tgid
 46

	)

109 
	#__NR_gëgid
 47

	)

110 
	#__NR_sig«l
 48

	)

111 
	#__NR_gëeuid
 49

	)

112 
	#__NR_gëegid
 50

	)

113 
	#__NR_ac˘
 51

	)

114 
	#__NR_phys
 52

	)

115 
	#__NR_lock
 53

	)

116 
	#__NR_io˘l
 54

	)

117 
	#__NR_f˙é
 55

	)

118 
	#__NR_mpx
 56

	)

119 
	#__NR_£çgid
 57

	)

120 
	#__NR_ulimô
 58

	)

121 
	#__NR_u«me
 59

	)

122 
	#__NR_umask
 60

	)

123 
	#__NR_chroŸ
 61

	)

124 
	#__NR_u°©
 62

	)

125 
	#__NR_dup2
 63

	)

126 
	#__NR_gëµid
 64

	)

127 
	#__NR_gëpgΩ
 65

	)

128 
	#__NR_£tsid
 66

	)

129 
	#__NR_siga˘i⁄
 67

	)

130 
	#__NR_sgëmask
 68

	)

131 
	#__NR_s£tmask
 69

	)

132 
	#__NR_£åeuid
 70

	)

133 
	#__NR_£åegid
 71

	)

134 
	#__NR_sigsu•íd
 72

	)

135 
	#__NR_sig≥ndög
 73

	)

136 
	#__NR_£tho°«me
 74

	)

137 
	#__NR_£ålimô
 75

	)

138 
	#__NR_gëæimô
 76

	)

139 
	#__NR_gërußge
 77

	)

140 
	#__NR_gëtimeofday
 78

	)

141 
	#__NR_£âimeofday
 79

	)

142 
	#__NR_gëgroups
 80

	)

143 
	#__NR_£tgroups
 81

	)

144 
	#__NR_£À˘
 82

	)

145 
	#__NR_symlök
 83

	)

146 
	#__NR_l°©
 84

	)

147 
	#__NR_ªadlök
 85

	)

148 
	#__NR_u£lib
 86

	)

150 
	#_sysˇŒ0
(
ty≥
,
«me
) \

151 
ty≥
 
	`«me
() \

153 
__ªs
; \

154 
__asm__
 volatile ("int $0x80" \

155 : "˜" (
__ªs
) \

156 : "0" (
__NR_
##
«me
)); \

157 i‡(
__ªs
 >= 0) \

158  (
ty≥
Ë
__ªs
; \

159 
î∫o
 = -
__ªs
; \

161 }

	)

163 
	#_sysˇŒ1
(
ty≥
,
«me
,
©y≥
,
a
) \

164 
ty≥
 
	`«me
(
©y≥
 
a
) \

166 
__ªs
; \

167 
__asm__
 volatile ("int $0x80" \

168 : "˜" (
__ªs
) \

169 : "0" (
__NR_
##
«me
),"b" (()(
a
))); \

170 i‡(
__ªs
 >= 0) \

171  (
ty≥
Ë
__ªs
; \

172 
î∫o
 = -
__ªs
; \

174 }

	)

176 
	#_sysˇŒ2
(
ty≥
,
«me
,
©y≥
,
a
,
bty≥
,
b
) \

177 
ty≥
 
	`«me
(
©y≥
 
a
,
bty≥
 
b
) \

179 
__ªs
; \

180 
__asm__
 volatile ("int $0x80" \

181 : "˜" (
__ªs
) \

182 : "0" (
__NR_
##
«me
),"b" (()(
a
)),"c" (()(
b
))); \

183 i‡(
__ªs
 >= 0) \

184  (
ty≥
Ë
__ªs
; \

185 
î∫o
 = -
__ªs
; \

187 }

	)

189 
	#_sysˇŒ3
(
ty≥
,
«me
,
©y≥
,
a
,
bty≥
,
b
,
˘y≥
,
c
) \

190 
ty≥
 
	`«me
(
©y≥
 
a
,
bty≥
 
b
,
˘y≥
 
c
) \

192 
__ªs
; \

193 
__asm__
 volatile ("int $0x80" \

194 : "˜" (
__ªs
) \

195 : "0" (
__NR_
##
«me
),"b" (()(
a
)),"c" (()(
b
)),"d" (()(
c
))); \

196 i‡(
__ªs
>=0) \

197  (
ty≥
Ë
__ªs
; \

198 
î∫o
=-
__ªs
; \

200 }

	)

204 
î∫o
;

206 
ac˚ss
(c⁄° * 
fûíame
, 
mode_t
 
mode
);

207 
ac˘
(c⁄° * 
fûíame
);

208 
Æ¨m
(
£c
);

209 
brk
(* 
íd_d©a_£gmít
);

210 * 
sbrk
(
±rdiff_t
 
ö¸emít
);

211 
chdú
(c⁄° * 
fûíame
);

212 
chmod
(c⁄° * 
fûíame
, 
mode_t
 
mode
);

213 
chown
(c⁄° * 
fûíame
, 
uid_t
 
ow√r
, 
gid_t
 
group
);

214 
chroŸ
(c⁄° * 
fûíame
);

215 
˛o£
(
fûdes
);

216 
¸ót
(c⁄° * 
fûíame
, 
mode_t
 
mode
);

217 
dup
(
fûdes
);

218 
execve
(c⁄° * 
fûíame
, ** 
¨gv
, ** 
ívp
);

219 
execv
(c⁄° * 
∑th«me
, ** 
¨gv
);

220 
execvp
(c⁄° * 
fûe
, ** 
¨gv
);

221 
exe˛
(c⁄° * 
∑th«me
, * 
¨g0
, ...);

222 
exe˛p
(c⁄° * 
fûe
, * 
¨g0
, ...);

223 
exe˛e
(c⁄° * 
∑th«me
, * 
¨g0
, ...);

224 vﬁ©ûê
exô
(
°©us
);

225 vﬁ©ûê
_exô
(
°©us
);

226 
f˙é
(
fûdes
, 
cmd
, ...);

227 
f‹k
();

228 
gëpid
();

229 
gëuid
();

230 
gëeuid
();

231 
gëgid
();

232 
gëegid
();

233 
io˘l
(
fûdes
, 
cmd
, ...);

234 
kûl
(
pid_t
 
pid
, 
sig«l
);

235 
lök
(c⁄° * 
fûíame1
, c⁄° * 
fûíame2
);

236 
l£ek
(
fûdes
, 
off_t
 
off£t
, 
‹igö
);

237 
mknod
(c⁄° * 
fûíame
, 
mode_t
 
mode
, 
dev_t
 
dev
);

238 
mou¡
(c⁄° * 
•ecülfûe
, c⁄° * 
dú
, 
rwÊag
);

239 
ni˚
(
vÆ
);

240 
›í
(c⁄° * 
fûíame
, 
Êag
, ...);

241 
∑u£
();

242 
pùe
(* 
fûdes
);

243 
ªad
(
fûdes
, * 
buf
, 
off_t
 
cou¡
);

244 
£çgΩ
();

245 
£çgid
(
pid_t
 
pid
,pid_à
pgid
);

246 
£tuid
(
uid_t
 
uid
);

247 
£tgid
(
gid_t
 
gid
);

248 (*
sig«l
(
sig
, (*
‚
)()))();

249 
	`°©
(c⁄° * 
fûíame
, 
°©
 * 
°©_buf
);

250 
	`f°©
(
fûdes
, 
°©
 * 
°©_buf
);

251 
	`°ime
(
time_t
 * 
çå
);

252 
	`sync
();

253 
time_t
 
	`time
—ime_à* 
éoc
);

254 
time_t
 
	`times
(
tms
 * 
tbuf
);

255 
	`ulimô
(
cmd
, 
limô
);

256 
mode_t
 
	`umask
(mode_à
mask
);

257 
	`umou¡
(c⁄° * 
•ecülfûe
);

258 
	`u«me
(
ut¢ame
 * 
«me
);

259 
	`u∆ök
(c⁄° * 
fûíame
);

260 
	`u°©
(
dev_t
 
dev
, 
u°©
 * 
ubuf
);

261 
	`utime
(c⁄° * 
fûíame
, 
utimbuf
 * 
times
);

262 
pid_t
 
	`waôpid
’id_à
pid
,* 
waô_°©
,
›ti⁄s
);

263 
pid_t
 
	`waô
(* 
waô_°©
);

264 
	`wrôe
(
fûdes
, c⁄° * 
buf
, 
off_t
 
cou¡
);

265 
	`dup2
(
ﬁdfd
, 
√wfd
);

266 
	`gëµid
();

267 
pid_t
 
	`gëpgΩ
();

268 
pid_t
 
	`£tsid
();

269 
	`£tho°«me
(*
«me
, 
Àn
);

270 
	`£ålimô
(
ªsour˚
, 
æimô
 *
æp
);

271 
	`gëæimô
(
ªsour˚
, 
æimô
 *
æp
);

272 
	`gërußge
(
who
, 
rußge
 *rusage);

273 
	`gëtimeofday
(
timevÆ
 *
tv
, 
timez⁄e
 *
tz
);

274 
	`£âimeofday
(
timevÆ
 *
tv
, 
timez⁄e
 *
tz
);

275 
	`gëgroups
(
gid£éí
, 
gid_t
 *
gid£t
);

276 
	`£tgroups
(
gid£éí
, 
gid_t
 *
gid£t
);

277 
	`£À˘
(
width
, 
fd_£t
 * 
ªadfds
, fd_£à* 
wrôefds
,

278 
fd_£t
 * 
ex˚±fds
, 
timevÆ
 * 
timeout
);

	@include/utime.h

1 #i‚de‡
_UTIME_H


2 
	#_UTIME_H


	)

4 
	~<sys/ty≥s.h
>

6 
	sutimbuf
 {

7 
time_t
 
	ma˘ime
;

8 
time_t
 
	mmodtime
;

11 
utime
(c⁄° *
fûíame
, 
utimbuf
 *
times
);

	@init/main.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

9 
	~<time.h
>

23 
ölöe
 
	$_sysˇŒ0
(,
f‹k
)

24 
ölöe
 
	$_sysˇŒ0
(,
∑u£
)

25 
ölöe
 
	$_sysˇŒ1
(,
£tup
,*,
BIOS
)

26 
ölöe
 
	$_sysˇŒ0
(,
sync
)

28 
	~<löux/ây.h
>

29 
	~<löux/sched.h
>

30 
	~<löux/hód.h
>

31 
	~<asm/sy°em.h
>

32 
	~<asm/io.h
>

34 
	~<°ddef.h
>

35 
	~<°d¨g.h
>

36 
	~<uni°d.h
>

37 
	~<f˙é.h
>

38 
	~<sys/ty≥s.h
>

40 
	~<löux/fs.h
>

42 
	~<°rög.h
>

44 
¥ötbuf
[1024];

46 *
	`°r˝y
();

47 
	`v•rötf
();

48 
	`öô
();

49 
	`blk_dev_öô
();

50 
	`chr_dev_öô
();

51 
	`hd_öô
();

52 
	`Ê›py_öô
();

53 
	`mem_öô
(
°¨t
, 
íd
);

54 
	`rd_öô
(
mem_°¨t
, 
Àngth
);

55 
	`kî√l_mktime
(
tm
 *Åm);

57 
	$•rötf
(* 
°r
, c⁄° *
fmt
, ...)

59 
va_li°
 
¨gs
;

60 
i
;

62 
	`va_°¨t
(
¨gs
, 
fmt
);

63 
i
 = 
	`v•rötf
(
°r
, 
fmt
, 
¨gs
);

64 
	`va_íd
(
¨gs
);

65  
i
;

66 
	}
}

71 
	#EXT_MEM_K
 (*(*)0x90002)

	)

72 
	#CON_ROWS
 ((*(*)0x9000eË& 0xff)

	)

73 
	#CON_COLS
 (((*(*)0x9000eË& 0xff00Ë>> 8)

	)

74 
	#DRIVE_INFO
 (*(
drive_öfo
 *)0x90080)

	)

75 
	#ORIG_ROOT_DEV
 (*(*)0x901FC)

	)

76 
	#ORIG_SWAP_DEV
 (*(*)0x901FA)

	)

85 
	#CMOS_READ
(
addr
) ({ \

86 
	`outb_p
(0x80|
addr
,0x70); \

87 
	`öb_p
(0x71); \

88 })

	)

90 
	#BCD_TO_BIN
(
vÆ
Ë((vÆ)=((vÆ)&15Ë+ ((vÆ)>>4)*10)

	)

92 
	$time_öô
()

94 
tm
 
time
;

97 
time
.
tm_£c
 = 
	`CMOS_READ
(0);

98 
time
.
tm_mö
 = 
	`CMOS_READ
(2);

99 
time
.
tm_hour
 = 
	`CMOS_READ
(4);

100 
time
.
tm_mday
 = 
	`CMOS_READ
(7);

101 
time
.
tm_m⁄
 = 
	`CMOS_READ
(8);

102 
time
.
tm_yór
 = 
	`CMOS_READ
(9);

103 } 
time
.
tm_£c
 !
	`CMOS_READ
(0));

104 
	`BCD_TO_BIN
(
time
.
tm_£c
);

105 
	`BCD_TO_BIN
(
time
.
tm_mö
);

106 
	`BCD_TO_BIN
(
time
.
tm_hour
);

107 
	`BCD_TO_BIN
(
time
.
tm_mday
);

108 
	`BCD_TO_BIN
(
time
.
tm_m⁄
);

109 
	`BCD_TO_BIN
(
time
.
tm_yór
);

110 
time
.
tm_m⁄
--;

111 
°¨tup_time
 = 
	`kî√l_mktime
(&
time
);

112 
	}
}

114 
	gmem‹y_íd
 = 0;

115 
	gbuf„r_mem‹y_íd
 = 0;

116 
	gmaö_mem‹y_°¨t
 = 0;

117 
	gãrm
[32];

119 * 
	g¨gv_rc
[] = { "/bö/sh", 
NULL
 };

120 * 
	gívp_rc
[] = { "HOME=/", 
NULL
 ,NULL };

122 * 
	g¨gv
[] = { "-/bö/sh",
NULL
 };

123 * 
	gívp
[] = { "HOME=/u§/roŸ", 
NULL
, NULL };

125 
	sdrive_öfo
 { 
	mdummy
[32]; } 
	gdrive_öfo
;

127 
	$maö
()

133 
ROOT_DEV
 = 
ORIG_ROOT_DEV
;

134 
SWAP_DEV
 = 
ORIG_SWAP_DEV
;

135 
	`•rötf
(
ãrm
, "TERM=c⁄%dx%d", 
CON_COLS
, 
CON_ROWS
);

136 
ívp
[1] = 
ãrm
;

137 
ívp_rc
[1] = 
ãrm
;

138 
drive_öfo
 = 
DRIVE_INFO
;

139 
mem‹y_íd
 = (1<<20Ë+ (
EXT_MEM_K
<<10);

140 
mem‹y_íd
 &= 0xfffff000;

141 i‡(
mem‹y_íd
 > 16*1024*1024)

142 
mem‹y_íd
 = 16*1024*1024;

143 i‡(
mem‹y_íd
 > 12*1024*1024)

144 
buf„r_mem‹y_íd
 = 4*1024*1024;

145 i‡(
mem‹y_íd
 > 6*1024*1024)

146 
buf„r_mem‹y_íd
 = 2*1024*1024;

148 
buf„r_mem‹y_íd
 = 1*1024*1024;

149 
maö_mem‹y_°¨t
 = 
buf„r_mem‹y_íd
;

150 #ifde‡
RAMDISK


151 
maö_mem‹y_°¨t
 +
	`rd_öô
(maö_mem‹y_°¨t, 
RAMDISK
*1024);

153 
	`mem_öô
(
maö_mem‹y_°¨t
,
mem‹y_íd
);

154 
	`å≠_öô
();

155 
	`blk_dev_öô
();

156 
	`chr_dev_öô
();

157 
	`ây_öô
();

158 
	`time_öô
();

159 
	`sched_öô
();

160 
	`buf„r_öô
(
buf„r_mem‹y_íd
);

161 
	`hd_öô
();

162 
	`Ê›py_öô
();

163 
	`°i
();

164 
	`move_to_u£r_mode
();

165 i‡(!
	`f‹k
()) {

166 
	`öô
();

176 
	`__asm__
("öà$0x80"::"a" (
__NR_∑u£
):"ax");

177 
	}
}

179 
	$¥ötf
(c⁄° *
fmt
, ...)

181 
va_li°
 
¨gs
;

182 
i
;

184 
	`va_°¨t
(
¨gs
, 
fmt
);

185 
	`wrôe
(1,
¥ötbuf
,
i
=
	`v•rötf
’rötbuf, 
fmt
, 
¨gs
));

186 
	`va_íd
(
¨gs
);

187  
i
;

188 
	}
}

190 
	$öô
()

192 
pid
,
i
;

194 
	`£tup
((*Ë&
drive_öfo
);

195 (Ë
	`›í
("/dev/ây1",
O_RDWR
,0);

196 (Ë
	`dup
(0);

197 (Ë
	`dup
(0);

198 
	`¥ötf
("%d buf„r†%d byã†buf„∏•a˚\n\r",
NR_BUFFERS
,

199 
NR_BUFFERS
*
BLOCK_SIZE
);

200 
	`¥ötf
("Fªêmem: %d byãs\n\r",
mem‹y_íd
-
maö_mem‹y_°¨t
);

201 i‡(!(
pid
=
	`f‹k
())) {

202 
	`˛o£
(0);

203 i‡(
	`›í
("/ëc/rc",
O_RDONLY
,0))

204 
	`_exô
(1);

205 
	`execve
("/bö/sh",
¨gv_rc
,
ívp_rc
);

206 
	`_exô
(2);

208 i‡(
pid
>0)

209 
pid
 !
	`waô
(&
i
))

212 i‡((
pid
=
	`f‹k
())<0) {

213 
	`¥ötf
("Fork failed in init\r\n");

216 i‡(!
pid
) {

217 
	`˛o£
(0);close(1);close(2);

218 
	`£tsid
();

219 (Ë
	`›í
("/dev/ây1",
O_RDWR
,0);

220 (Ë
	`dup
(0);

221 (Ë
	`dup
(0);

222 
	`_exô
(
	`execve
("/bö/sh",
¨gv
,
ívp
));

225 i‡(
pid
 =
	`waô
(&
i
))

227 
	`¥ötf
("\n\rchûd %d dõd wôh codê%04x\n\r",
pid
,
i
);

228 
	`sync
();

230 
	`_exô
(0);

231 
	}
}

	@kernel/blk_drv/blk.h

1 #i‚de‡
_BLK_H


2 
	#_BLK_H


	)

4 
	#NR_BLK_DEV
 7

	)

15 
	#NR_REQUEST
 32

	)

23 
	sªque°
 {

24 
	mdev
;

25 
	mcmd
;

26 
	mîr‹s
;

27 
	m£˘‹
;

28 
	mƒ_£˘‹s
;

29 * 
	mbuf„r
;

30 
èsk_°ru˘
 * 
	mwaôög
;

31 
buf„r_hód
 * 
	mbh
;

32 
ªque°
 * 
	m√xt
;

40 
	#IN_ORDER
(
s1
,
s2
) \

41 ((
s1
)->
cmd
<(
s2
)->cmd || (s1)->cmd==(s2)->cmd && \

42 ((
s1
)->
dev
 < (
s2
)->dev || ((s1)->dev == (s2)->dev && \

43 (
s1
)->
£˘‹
 < (
s2
)->£˘‹)))

	)

45 
	sblk_dev_°ru˘
 {

46 (*
	mªque°_‚
)();

47 
ªque°
 * 
	mcuºít_ªque°
;

50 
blk_dev_°ru˘
 
blk_dev
[
NR_BLK_DEV
];

51 
ªque°
Ñeque°[
NR_REQUEST
];

52 
èsk_°ru˘
 * 
waô_f‹_ªque°
;

54 * 
blk_size
[
NR_BLK_DEV
];

56 #ifde‡
MAJOR_NR


63 #i‡(
MAJOR_NR
 == 1)

65 
	#DEVICE_NAME
 "ømdisk"

	)

66 
	#DEVICE_REQUEST
 
do_rd_ªque°


	)

67 
	#DEVICE_NR
(
devi˚
Ë((devi˚Ë& 7)

	)

68 
	#DEVICE_ON
(
devi˚
)

	)

69 
	#DEVICE_OFF
(
devi˚
)

	)

71 #ñi‡(
MAJOR_NR
 == 2)

73 
	#DEVICE_NAME
 "Ê›py"

	)

74 
	#DEVICE_INTR
 
do_Ê›py


	)

75 
	#DEVICE_REQUEST
 
do_fd_ªque°


	)

76 
	#DEVICE_NR
(
devi˚
Ë((devi˚Ë& 3)

	)

77 
	#DEVICE_ON
(
devi˚
Ë
	`Ê›py_⁄
(
	`DEVICE_NR
(devi˚))

	)

78 
	#DEVICE_OFF
(
devi˚
Ë
	`Ê›py_off
(
	`DEVICE_NR
(devi˚))

	)

80 #ñi‡(
MAJOR_NR
 == 3)

82 
	#DEVICE_NAME
 "h¨ddisk"

	)

83 
	#DEVICE_INTR
 
do_hd


	)

84 
	#DEVICE_TIMEOUT
 
hd_timeout


	)

85 
	#DEVICE_REQUEST
 
do_hd_ªque°


	)

86 
	#DEVICE_NR
(
devi˚
Ë(
	`MINOR
(devi˚)/5)

	)

87 
	#DEVICE_ON
(
devi˚
)

	)

88 
	#DEVICE_OFF
(
devi˚
)

	)

96 
	#CURRENT
 (
blk_dev
[
MAJOR_NR
].
cuºít_ªque°
)

	)

97 
	#CURRENT_DEV
 
	`DEVICE_NR
(
CURRENT
->
dev
)

	)

99 #ifde‡
DEVICE_INTR


100 (*
DEVICE_INTR
)(Ë
NULL
;

102 #ifde‡
DEVICE_TIMEOUT


103 
DEVICE_TIMEOUT
 = 0;

104 
	#SET_INTR
(
x
Ë(
DEVICE_INTR
 = (x),
DEVICE_TIMEOUT
 = 200)

	)

106 
	#SET_INTR
(
x
Ë(
DEVICE_INTR
 = (x))

	)

108 (
DEVICE_REQUEST
)();

110 
ölöe
 
	$u∆ock_buf„r
(
buf„r_hód
 * 
bh
)

112 i‡(!
bh
->
b_lock
)

113 
	`¥ötk
(
DEVICE_NAME
 ": free buffer being unlocked\n");

114 
bh
->
b_lock
=0;

115 
	`wake_up
(&
bh
->
b_waô
);

116 
	}
}

118 
ölöe
 
	$íd_ªque°
(
u±od©e
)

120 
	`DEVICE_OFF
(
CURRENT
->
dev
);

121 i‡(
CURRENT
->
bh
) {

122 
CURRENT
->
bh
->
b_u±od©e
 = 
u±od©e
;

123 
	`u∆ock_buf„r
(
CURRENT
->
bh
);

125 i‡(!
u±od©e
) {

126 
	`¥ötk
(
DEVICE_NAME
 " I/OÉrror\n\r");

127 
	`¥ötk
("dev %04x, block %d\n\r",
CURRENT
->
dev
,

128 
CURRENT
->
bh
->
b_blockƒ
);

130 
	`wake_up
(&
CURRENT
->
waôög
);

131 
	`wake_up
(&
waô_f‹_ªque°
);

132 
CURRENT
->
dev
 = -1;

133 
CURRENT
 = CURRENT->
√xt
;

134 
	}
}

136 #ifde‡
DEVICE_TIMEOUT


137 
	#CLEAR_DEVICE_TIMEOUT
 
DEVICE_TIMEOUT
 = 0;

	)

139 
	#CLEAR_DEVICE_TIMEOUT


	)

142 #ifde‡
DEVICE_INTR


143 
	#CLEAR_DEVICE_INTR
 
DEVICE_INTR
 = 0;

	)

145 
	#CLEAR_DEVICE_INTR


	)

148 
	#INIT_REQUEST
 \

149 
ª≥©
: \

150 i‡(!
CURRENT
) {\

151 
CLEAR_DEVICE_INTR
 \

152 
CLEAR_DEVICE_TIMEOUT
 \

155 i‡(
	`MAJOR
(
CURRENT
->
dev
Ë!
MAJOR_NR
) \

156 
	`∑nic
(
DEVICE_NAME
 ":ÑequestÜist destroyed"); \

157 i‡(
CURRENT
->
bh
) { \

158 i‡(!
CURRENT
->
bh
->
b_lock
) \

159 
	`∑nic
(
DEVICE_NAME
 ": blockÇotÜocked"); \

160 }

	)

	@kernel/blk_drv/floppy.c

33 
	~<löux/sched.h
>

34 
	~<löux/fs.h
>

35 
	~<löux/kî√l.h
>

36 
	~<löux/fdªg.h
>

37 
	~<asm/sy°em.h
>

38 
	~<asm/io.h
>

39 
	~<asm/£gmít.h
>

41 
	#MAJOR_NR
 2

	)

42 
	~"blk.h
"

44 
	gªˇlibøã
 = 0;

45 
	gª£t
 = 0;

46 
	g£ek
 = 0;

48 
cuºít_DOR
;

50 
	#immoutb_p
(
vÆ
,
p‹t
) \

51 
	`__asm__
("outb %0,%1\n\tjm∞1f\n1:\tjm∞1f\n1:"::"a" ((Ë(
vÆ
)),"i" (
p‹t
))

	)

53 
	#TYPE
(
x
Ë((x)>>2)

	)

54 
	#DRIVE
(
x
Ë((x)&0x03)

	)

60 
	#MAX_ERRORS
 8

	)

65 
	#MAX_REPLIES
 7

	)

66 
	gª∂y_buf„r
[
MAX_REPLIES
];

67 
	#ST0
 (
ª∂y_buf„r
[0])

	)

68 
	#ST1
 (
ª∂y_buf„r
[1])

	)

69 
	#ST2
 (
ª∂y_buf„r
[2])

	)

70 
	#ST3
 (
ª∂y_buf„r
[3])

	)

82 
	sÊ›py_°ru˘
 {

83 
	msize
, 
	m£˘
, 
	mhód
, 
	måack
, 
	m°ªtch
;

84 
	mg≠
,
	møã
,
	m•ec1
;

85 } 
	gÊ›py_ty≥
[] = {

105 
Ê›py_öãºu±
();

106 
tmp_Ê›py_¨ó
[1024];

113 
	gcur_•ec1
 = -1;

114 
	gcur_øã
 = -1;

115 
Ê›py_°ru˘
 * 
	gÊ›py
 = 
Ê›py_ty≥
;

116 
	gcuºít_drive
 = 0;

117 
	g£˘‹
 = 0;

118 
	ghód
 = 0;

119 
	gåack
 = 0;

120 
	g£ek_åack
 = 0;

121 
	gcuºít_åack
 = 255;

122 
	gcomm™d
 = 0;

123 
	g£À˘ed
 = 0;

124 
èsk_°ru˘
 * 
	gwaô_⁄_Ê›py_£À˘
 = 
NULL
;

126 
	$Ê›py_de£À˘
(
ƒ
)

128 i‡(
ƒ
 !(
cuºít_DOR
 & 3))

129 
	`¥ötk
("floppy_deselect: driveÇot selected\n\r");

130 
£À˘ed
 = 0;

131 
	`wake_up
(&
waô_⁄_Ê›py_£À˘
);

132 
	}
}

140 
	$Ê›py_ch™ge
(
ƒ
)

142 
ª≥©
:

143 
	`Ê›py_⁄
(
ƒ
);

144 (
cuºít_DOR
 & 3Ë!
ƒ
 && 
£À˘ed
)

145 
	`¶ìp_⁄
(&
waô_⁄_Ê›py_£À˘
);

146 i‡((
cuºít_DOR
 & 3Ë!
ƒ
)

147 
ª≥©
;

148 i‡(
	`öb
(
FD_DIR
) & 0x80) {

149 
	`Ê›py_off
(
ƒ
);

152 
	`Ê›py_off
(
ƒ
);

154 
	}
}

156 
	#c›y_buf„r
(
‰om
,
to
) \

157 
	`__asm__
("cld ;Ñep ; movsl" \

158 ::"c" (
BLOCK_SIZE
/4),"S" (()(
‰om
)),"D" (()(
to
)) \

159 :"cx","di","si")

	)

161 
	$£tup_DMA
()

163 
addr
 = (Ë
CURRENT
->
buf„r
;

165 
	`˛i
();

166 i‡(
addr
 >= 0x100000) {

167 
addr
 = (Ë
tmp_Ê›py_¨ó
;

168 i‡(
comm™d
 =
FD_WRITE
)

169 
	`c›y_buf„r
(
CURRENT
->
buf„r
,
tmp_Ê›py_¨ó
);

172 
	`immoutb_p
(4|2,10);

175 
	`__asm__
("outb %%al,$12\n\tjmp 1f\n1:\tjmp 1f\n1:\t"

177 "a" ((Ë((
comm™d
 =
FD_READ
)?
DMA_READ
:
DMA_WRITE
)));

179 
	`immoutb_p
(
addr
,4);

180 
addr
 >>= 8;

182 
	`immoutb_p
(
addr
,4);

183 
addr
 >>= 8;

185 
	`immoutb_p
(
addr
,0x81);

187 
	`immoutb_p
(0xff,5);

189 
	`immoutb_p
(3,5);

191 
	`immoutb_p
(0|2,10);

192 
	`°i
();

193 
	}
}

195 
	$ouçut_byã
(
byã
)

197 
cou¡î
;

198 
°©us
;

200 i‡(
ª£t
)

202 
cou¡î
 = 0 ; counter < 10000 ; counter++) {

203 
°©us
 = 
	`öb_p
(
FD_STATUS
Ë& (
STATUS_READY
 | 
STATUS_DIR
);

204 i‡(
°©us
 =
STATUS_READY
) {

205 
	`outb
(
byã
,
FD_DATA
);

209 
ª£t
 = 1;

210 
	`¥ötk
("UnableÅo send byteÅo FDC\n\r");

211 
	}
}

213 
	$ªsu…
()

215 
i
 = 0, 
cou¡î
, 
°©us
;

217 i‡(
ª£t
)

219 
cou¡î
 = 0 ; counter < 10000 ; counter++) {

220 
°©us
 = 
	`öb_p
(
FD_STATUS
)&(
STATUS_DIR
|
STATUS_READY
|
STATUS_BUSY
);

221 i‡(
°©us
 =
STATUS_READY
)

222  
i
;

223 i‡(
°©us
 =(
STATUS_DIR
|
STATUS_READY
|
STATUS_BUSY
)) {

224 i‡(
i
 >
MAX_REPLIES
)

226 
ª∂y_buf„r
[
i
++] = 
	`öb_p
(
FD_DATA
);

229 
ª£t
 = 1;

230 
	`¥ötk
("GetstatusÅimes out\n\r");

232 
	}
}

234 
	$bad_Êp_öå
()

236 
CURRENT
->
îr‹s
++;

237 i‡(
CURRENT
->
îr‹s
 > 
MAX_ERRORS
) {

238 
	`Ê›py_de£À˘
(
cuºít_drive
);

239 
	`íd_ªque°
(0);

241 i‡(
CURRENT
->
îr‹s
 > 
MAX_ERRORS
/2)

242 
ª£t
 = 1;

244 
ªˇlibøã
 = 1;

245 
	}
}

251 
	$rw_öãºu±
()

253 i‡(
	`ªsu…
(Ë!7 || (
ST0
 & 0xf8Ë|| (
ST1
 & 0xbfË|| (
ST2
 & 0x73)) {

254 i‡(
ST1
 & 0x02) {

255 
	`¥ötk
("Drivê%d i†wrôê¥Ÿe˘ed\n\r",
cuºít_drive
);

256 
	`Ê›py_de£À˘
(
cuºít_drive
);

257 
	`íd_ªque°
(0);

259 
	`bad_Êp_öå
();

260 
	`do_fd_ªque°
();

263 i‡(
comm™d
 =
FD_READ
 && ()(
CURRENT
->
buf„r
) >= 0x100000)

264 
	`c›y_buf„r
(
tmp_Ê›py_¨ó
,
CURRENT
->
buf„r
);

265 
	`Ê›py_de£À˘
(
cuºít_drive
);

266 
	`íd_ªque°
(1);

267 
	`do_fd_ªque°
();

268 
	}
}

270 
ölöe
 
	$£tup_rw_Ê›py
()

272 
	`£tup_DMA
();

273 
do_Ê›py
 = 
rw_öãºu±
;

274 
	`ouçut_byã
(
comm™d
);

275 
	`ouçut_byã
(
hód
<<2 | 
cuºít_drive
);

276 
	`ouçut_byã
(
åack
);

277 
	`ouçut_byã
(
hód
);

278 
	`ouçut_byã
(
£˘‹
);

279 
	`ouçut_byã
(2);

280 
	`ouçut_byã
(
Ê›py
->
£˘
);

281 
	`ouçut_byã
(
Ê›py
->
g≠
);

282 
	`ouçut_byã
(0xFF);

283 i‡(
ª£t
)

284 
	`do_fd_ªque°
();

285 
	}
}

292 
	$£ek_öãºu±
()

295 
	`ouçut_byã
(
FD_SENSEI
);

296 i‡(
	`ªsu…
(Ë!2 || (
ST0
 & 0xF8Ë!0x20 || 
ST1
 !
£ek_åack
) {

297 
	`bad_Êp_öå
();

298 
	`do_fd_ªque°
();

301 
cuºít_åack
 = 
ST1
;

302 
	`£tup_rw_Ê›py
();

303 
	}
}

310 
	$å™s„r
()

312 i‡(
cur_•ec1
 !
Ê›py
->
•ec1
) {

313 
cur_•ec1
 = 
Ê›py
->
•ec1
;

314 
	`ouçut_byã
(
FD_SPECIFY
);

315 
	`ouçut_byã
(
cur_•ec1
);

316 
	`ouçut_byã
(6);

318 i‡(
cur_øã
 !
Ê›py
->
øã
)

319 
	`outb_p
(
cur_øã
 = 
Ê›py
->
øã
,
FD_DCR
);

320 i‡(
ª£t
) {

321 
	`do_fd_ªque°
();

324 i‡(!
£ek
) {

325 
	`£tup_rw_Ê›py
();

328 
do_Ê›py
 = 
£ek_öãºu±
;

329 i‡(
£ek_åack
) {

330 
	`ouçut_byã
(
FD_SEEK
);

331 
	`ouçut_byã
(
hód
<<2 | 
cuºít_drive
);

332 
	`ouçut_byã
(
£ek_åack
);

334 
	`ouçut_byã
(
FD_RECALIBRATE
);

335 
	`ouçut_byã
(
hód
<<2 | 
cuºít_drive
);

337 i‡(
ª£t
)

338 
	`do_fd_ªque°
();

339 
	}
}

344 
	$ªˇl_öãºu±
()

346 
	`ouçut_byã
(
FD_SENSEI
);

347 i‡(
	`ªsu…
()!=2 || (
ST0
 & 0xE0) == 0x60)

348 
ª£t
 = 1;

350 
ªˇlibøã
 = 0;

351 
	`do_fd_ªque°
();

352 
	}
}

354 
	$u√x≥˘ed_Ê›py_öãºu±
()

356 
	`ouçut_byã
(
FD_SENSEI
);

357 i‡(
	`ªsu…
()!=2 || (
ST0
 & 0xE0) == 0x60)

358 
ª£t
 = 1;

360 
ªˇlibøã
 = 1;

361 
	}
}

363 
	$ªˇlibøã_Ê›py
()

365 
ªˇlibøã
 = 0;

366 
cuºít_åack
 = 0;

367 
do_Ê›py
 = 
ªˇl_öãºu±
;

368 
	`ouçut_byã
(
FD_RECALIBRATE
);

369 
	`ouçut_byã
(
hód
<<2 | 
cuºít_drive
);

370 i‡(
ª£t
)

371 
	`do_fd_ªque°
();

372 
	}
}

374 
	$ª£t_öãºu±
()

376 
	`ouçut_byã
(
FD_SENSEI
);

377 (Ë
	`ªsu…
();

378 
	`ouçut_byã
(
FD_SPECIFY
);

379 
	`ouçut_byã
(
cur_•ec1
);

380 
	`ouçut_byã
(6);

381 
	`do_fd_ªque°
();

382 
	}
}

387 
	$ª£t_Ê›py
()

389 
i
;

391 
ª£t
 = 0;

392 
cur_•ec1
 = -1;

393 
cur_øã
 = -1;

394 
ªˇlibøã
 = 1;

395 
	`¥ötk
("Reset-floppy called\n\r");

396 
	`˛i
();

397 
do_Ê›py
 = 
ª£t_öãºu±
;

398 
	`outb_p
(
cuºít_DOR
 & ~0x04,
FD_DOR
);

399 
i
=0 ; i<100 ; i++)

400 
	`__asm__
("nop");

401 
	`outb
(
cuºít_DOR
,
FD_DOR
);

402 
	`°i
();

403 
	}
}

405 
	$Ê›py_⁄_öãºu±
()

408 
£À˘ed
 = 1;

409 i‡(
cuºít_drive
 !(
cuºít_DOR
 & 3)) {

410 
cuºít_DOR
 &= 0xFC;

411 
cuºít_DOR
 |
cuºít_drive
;

412 
	`outb
(
cuºít_DOR
,
FD_DOR
);

413 
	`add_timî
(2,&
å™s„r
);

415 
	`å™s„r
();

416 
	}
}

418 
	$do_fd_ªque°
()

420 
block
;

422 
£ek
 = 0;

423 i‡(
ª£t
) {

424 
	`ª£t_Ê›py
();

427 i‡(
ªˇlibøã
) {

428 
	`ªˇlibøã_Ê›py
();

431 
INIT_REQUEST
;

432 
Ê›py
 = (
	`MINOR
(
CURRENT
->
dev
)>>2Ë+ 
Ê›py_ty≥
;

433 i‡(
cuºít_drive
 !
CURRENT_DEV
)

434 
£ek
 = 1;

435 
cuºít_drive
 = 
CURRENT_DEV
;

436 
block
 = 
CURRENT
->
£˘‹
;

437 i‡(
block
+2 > 
Ê›py
->
size
) {

438 
	`íd_ªque°
(0);

439 
ª≥©
;

441 
£˘‹
 = 
block
 % 
Ê›py
->
£˘
;

442 
block
 /
Ê›py
->
£˘
;

443 
hód
 = 
block
 % 
Ê›py
->head;

444 
åack
 = 
block
 / 
Ê›py
->
hód
;

445 
£ek_åack
 = 
åack
 << 
Ê›py
->
°ªtch
;

446 i‡(
£ek_åack
 !
cuºít_åack
)

447 
£ek
 = 1;

448 
£˘‹
++;

449 i‡(
CURRENT
->
cmd
 =
READ
)

450 
comm™d
 = 
FD_READ
;

451 i‡(
CURRENT
->
cmd
 =
WRITE
)

452 
comm™d
 = 
FD_WRITE
;

454 
	`∑nic
("do_fd_request: unknown command");

455 
	`add_timî
(
	`ticks_to_Ê›py_⁄
(
cuºít_drive
),&
Ê›py_⁄_öãºu±
);

456 
	}
}

458 
	gÊ›py_sizes
[] ={

469 
	$Ê›py_öô
()

471 
blk_size
[
MAJOR_NR
] = 
Ê›py_sizes
;

472 
blk_dev
[
MAJOR_NR
].
ªque°_‚
 = 
DEVICE_REQUEST
;

473 
	`£t_å≠_g©e
(0x26,&
Ê›py_öãºu±
);

474 
	`outb
(
	`öb_p
(0x21)&~0x40,0x21);

475 
	}
}

	@kernel/blk_drv/hd.c

16 
	~<löux/c⁄fig.h
>

17 
	~<löux/sched.h
>

18 
	~<löux/fs.h
>

19 
	~<löux/kî√l.h
>

20 
	~<löux/hdªg.h
>

21 
	~<asm/sy°em.h
>

22 
	~<asm/io.h
>

23 
	~<asm/£gmít.h
>

25 
	#MAJOR_NR
 3

	)

26 
	~"blk.h
"

28 
	#CMOS_READ
(
addr
) ({ \

29 
	`outb_p
(0x80|
addr
,0x70); \

30 
	`öb_p
(0x71); \

31 })

	)

34 
	#MAX_ERRORS
 7

	)

35 
	#MAX_HD
 2

	)

37 
ªˇl_öå
();

38 
bad_rw_öå
();

40 
	gªˇlibøã
 = 0;

41 
	gª£t
 = 0;

46 
	shd_i_°ru˘
 {

47 
	mhód
,
	m£˘
,
	mcyl
,
	mwpcom
,
	mlz⁄e
,
	m˘l
;

49 #ifde‡
HD_TYPE


50 
hd_i_°ru˘
 
	ghd_öfo
[] = { 
HD_TYPE
 };

51 
	#NR_HD
 (( (
hd_öfo
))/( (
hd_i_°ru˘
)))

	)

53 
hd_i_°ru˘
 
	ghd_öfo
[] = { {0,0,0,0,0,0},{0,0,0,0,0,0} };

54 
	gNR_HD
 = 0;

57 
	shd_°ru˘
 {

58 
	m°¨t_£˘
;

59 
	mƒ_£˘s
;

60 } 
	ghd
[5*
MAX_HD
]={{0,0},};

62 
	ghd_sizes
[5*
MAX_HD
] = {0, };

64 
	#p‹t_ªad
(
p‹t
,
buf
,
ƒ
) \

65 
	`__asm__
("˛d;ªp;ösw"::"d" (
p‹t
),"D" (
buf
),"c" (
ƒ
):"cx","di")

	)

67 
	#p‹t_wrôe
(
p‹t
,
buf
,
ƒ
) \

68 
	`__asm__
("˛d;ªp;outsw"::"d" (
p‹t
),"S" (
buf
),"c" (
ƒ
):"cx","si")

	)

70 
hd_öãºu±
();

71 
rd_lﬂd
();

74 
	$sys_£tup
(* 
BIOS
)

76 
ˇŒabÀ
 = 1;

77 
i
,
drive
;

78 
cmos_disks
;

79 
∑πôi⁄
 *
p
;

80 
buf„r_hód
 * 
bh
;

82 i‡(!
ˇŒabÀ
)

84 
ˇŒabÀ
 = 0;

85 #i‚de‡
HD_TYPE


86 
drive
=0 ; drive<2 ; drive++) {

87 
hd_öfo
[
drive
].
cyl
 = *(*Ë
BIOS
;

88 
hd_öfo
[
drive
].
hód
 = *(*Ë(2+
BIOS
);

89 
hd_öfo
[
drive
].
wpcom
 = *(*Ë(5+
BIOS
);

90 
hd_öfo
[
drive
].
˘l
 = *(*Ë(8+
BIOS
);

91 
hd_öfo
[
drive
].
lz⁄e
 = *(*Ë(12+
BIOS
);

92 
hd_öfo
[
drive
].
£˘
 = *(*Ë(14+
BIOS
);

93 
BIOS
 += 16;

95 i‡(
hd_öfo
[1].
cyl
)

96 
NR_HD
=2;

98 
NR_HD
=1;

100 
i
=0 ; i<
NR_HD
 ; i++) {

101 
hd
[
i
*5].
°¨t_£˘
 = 0;

102 
hd
[
i
*5].
ƒ_£˘s
 = 
hd_öfo
[i].
hód
*

103 
hd_öfo
[
i
].
£˘
*hd_öfo[i].
cyl
;

128 i‡((
cmos_disks
 = 
	`CMOS_READ
(0x12)) & 0xf0)

129 i‡(
cmos_disks
 & 0x0f)

130 
NR_HD
 = 2;

132 
NR_HD
 = 1;

134 
NR_HD
 = 0;

135 
i
 = 
NR_HD
 ; i < 2 ; i++) {

136 
hd
[
i
*5].
°¨t_£˘
 = 0;

137 
hd
[
i
*5].
ƒ_£˘s
 = 0;

139 
drive
=0 ; drive<
NR_HD
 ; drive++) {

140 i‡(!(
bh
 = 
	`bªad
(0x300 + 
drive
*5,0))) {

141 
	`¥ötk
("UnableÅoÑeadÖartitionÅable of drive %d\n\r",

142 
drive
);

143 
	`∑nic
("");

145 i‡(
bh
->
b_d©a
[510] != 0x55 || ()

146 
bh
->
b_d©a
[511] != 0xAA) {

147 
	`¥ötk
("BadÖ¨tôi⁄ÅabÀ o¿drivê%d\n\r",
drive
);

148 
	`∑nic
("");

150 
p
 = 0x1BE + (*)
bh
->
b_d©a
;

151 
i
=1;i<5;i++,
p
++) {

152 
hd
[
i
+5*
drive
].
°¨t_£˘
 = 
p
->start_sect;

153 
hd
[
i
+5*
drive
].
ƒ_£˘s
 = 
p
->nr_sects;

155 
	`bªl£
(
bh
);

157 
i
=0 ; i<5*
MAX_HD
 ; i++)

158 
hd_sizes
[
i
] = 
hd
[i].
ƒ_£˘s
>>1 ;

159 
blk_size
[
MAJOR_NR
] = 
hd_sizes
;

160 i‡(
NR_HD
)

161 
	`¥ötk
("P¨tôi⁄ÅabÀ%†ok.\n\r",(
NR_HD
>1)?"s":"");

162 
	`rd_lﬂd
();

163 
	`öô_sw≠pög
();

164 
	`mou¡_roŸ
();

166 
	}
}

168 
	$c⁄åﬁÀr_ªady
()

170 
ªåõs
 = 100000;

172 --
ªåõs
 && (
	`öb_p
(
HD_STATUS
)&0xc0)!=0x40);

173  (
ªåõs
);

174 
	}
}

176 
	$wö_ªsu…
()

178 
i
=
	`öb_p
(
HD_STATUS
);

180 i‡((
i
 & (
BUSY_STAT
 | 
READY_STAT
 | 
WRERR_STAT
 | 
SEEK_STAT
 | 
ERR_STAT
))

181 =(
READY_STAT
 | 
SEEK_STAT
))

183 i‡(
i
&1Ëi=
	`öb
(
HD_ERROR
);

185 
	}
}

187 
hd_out
(
drive
,
n£˘
,
£˘
,

188 
hód
,
cyl
,
cmd
,

189 (*
öå_addr
)())

191 
p‹t
 
	`asm
("dx");

193 i‡(
drive
>1 || 
hód
>15)

194 
	`∑nic
("TryingÅo write bad sector");

195 i‡(!
	`c⁄åﬁÀr_ªady
())

196 
	`∑nic
("HD controllerÇotÑeady");

197 
	`SET_INTR
(
öå_addr
);

198 
	`outb_p
(
hd_öfo
[
drive
].
˘l
,
HD_CMD
);

199 
p‹t
=
HD_DATA
;

200 
	`outb_p
(
hd_öfo
[
drive
].
wpcom
>>2,++
p‹t
);

201 
	`outb_p
(
n£˘
,++
p‹t
);

202 
	`outb_p
(
£˘
,++
p‹t
);

203 
	`outb_p
(
cyl
,++
p‹t
);

204 
	`outb_p
(
cyl
>>8,++
p‹t
);

205 
	`outb_p
(0xA0|(
drive
<<4)|
hód
,++
p‹t
);

206 
	`outb
(
cmd
,++
p‹t
);

207 
	}
}

209 
	$drive_busy
()

211 
i
;

212 
c
;

214 
i
 = 0; i < 50000; i++) {

215 
c
 = 
	`öb_p
(
HD_STATUS
);

216 
c
 &(
BUSY_STAT
 | 
READY_STAT
 | 
SEEK_STAT
);

217 i‡(
c
 =(
READY_STAT
 | 
SEEK_STAT
))

220 
	`¥ötk
("HD controllerÅimes out\n\r");

222 
	}
}

224 
	$ª£t_c⁄åﬁÀr
()

226 
i
;

228 
	`outb
(4,
HD_CMD
);

229 
i
 = 0; i < 1000; i++Ë
	`n›
();

230 
	`outb
(
hd_öfo
[0].
˘l
 & 0x0‡,
HD_CMD
);

231 i‡(
	`drive_busy
())

232 
	`¥ötk
("HD-controller still busy\n\r");

233 i‡((
i
 = 
	`öb
(
HD_ERROR
)) != 1)

234 
	`¥ötk
("HD-c⁄åﬁÀ∏ª£àÁûed: %02x\n\r",
i
);

235 
	}
}

237 
	$ª£t_hd
()

239 
i
;

241 
ª≥©
:

242 i‡(
ª£t
) {

243 
ª£t
 = 0;

244 
i
 = -1;

245 
	`ª£t_c⁄åﬁÀr
();

246 } i‡(
	`wö_ªsu…
()) {

247 
	`bad_rw_öå
();

248 i‡(
ª£t
)

249 
ª≥©
;

251 
i
++;

252 i‡(
i
 < 
NR_HD
) {

253 
	`hd_out
(
i
,
hd_öfo
[i].
£˘
,hd_öfo[i].£˘,hd_öfo[i].
hód
-1,

254 
hd_öfo
[
i
].
cyl
,
WIN_SPECIFY
,&
ª£t_hd
);

256 
	`do_hd_ªque°
();

257 
	}
}

259 
	$u√x≥˘ed_hd_öãºu±
()

261 
	`¥ötk
("Unexpected HD interrupt\n\r");

262 
ª£t
 = 1;

263 
	`do_hd_ªque°
();

264 
	}
}

266 
	$bad_rw_öå
()

268 i‡(++
CURRENT
->
îr‹s
 >
MAX_ERRORS
)

269 
	`íd_ªque°
(0);

270 i‡(
CURRENT
->
îr‹s
 > 
MAX_ERRORS
/2)

271 
ª£t
 = 1;

272 
	}
}

274 
	$ªad_öå
()

276 i‡(
	`wö_ªsu…
()) {

277 
	`bad_rw_öå
();

278 
	`do_hd_ªque°
();

281 
	`p‹t_ªad
(
HD_DATA
,
CURRENT
->
buf„r
,256);

282 
CURRENT
->
îr‹s
 = 0;

283 
CURRENT
->
buf„r
 += 512;

284 
CURRENT
->
£˘‹
++;

285 i‡(--
CURRENT
->
ƒ_£˘‹s
) {

286 
	`SET_INTR
(&
ªad_öå
);

289 
	`íd_ªque°
(1);

290 
	`do_hd_ªque°
();

291 
	}
}

293 
	$wrôe_öå
()

295 i‡(
	`wö_ªsu…
()) {

296 
	`bad_rw_öå
();

297 
	`do_hd_ªque°
();

300 i‡(--
CURRENT
->
ƒ_£˘‹s
) {

301 
CURRENT
->
£˘‹
++;

302 
CURRENT
->
buf„r
 += 512;

303 
	`SET_INTR
(&
wrôe_öå
);

304 
	`p‹t_wrôe
(
HD_DATA
,
CURRENT
->
buf„r
,256);

307 
	`íd_ªque°
(1);

308 
	`do_hd_ªque°
();

309 
	}
}

311 
	$ªˇl_öå
()

313 i‡(
	`wö_ªsu…
())

314 
	`bad_rw_öå
();

315 
	`do_hd_ªque°
();

316 
	}
}

318 
	$hd_times_out
()

320 i‡(!
CURRENT
)

322 
	`¥ötk
("HDÅimeout");

323 i‡(++
CURRENT
->
îr‹s
 >
MAX_ERRORS
)

324 
	`íd_ªque°
(0);

325 
	`SET_INTR
(
NULL
);

326 
ª£t
 = 1;

327 
	`do_hd_ªque°
();

328 
	}
}

330 
	$do_hd_ªque°
()

332 
i
,
r
;

333 
block
,
dev
;

334 
£c
,
hód
,
cyl
;

335 
n£˘
;

337 
INIT_REQUEST
;

338 
dev
 = 
	`MINOR
(
CURRENT
->dev);

339 
block
 = 
CURRENT
->
£˘‹
;

340 i‡(
dev
 >5*
NR_HD
 || 
block
+2 > 
hd
[dev].
ƒ_£˘s
) {

341 
	`íd_ªque°
(0);

342 
ª≥©
;

344 
block
 +
hd
[
dev
].
°¨t_£˘
;

345 
dev
 /= 5;

346 
	`__asm__
("div»%4":"˜" (
block
),"=d" (
£c
):"0" (block),"1" (0),

347 "r" (
hd_öfo
[
dev
].
£˘
));

348 
	`__asm__
("div»%4":"˜" (
cyl
),"=d" (
hód
):"0" (
block
),"1" (0),

349 "r" (
hd_öfo
[
dev
].
hód
));

350 
£c
++;

351 
n£˘
 = 
CURRENT
->
ƒ_£˘‹s
;

352 i‡(
ª£t
) {

353 
ªˇlibøã
 = 1;

354 
	`ª£t_hd
();

357 i‡(
ªˇlibøã
) {

358 
ªˇlibøã
 = 0;

359 
	`hd_out
(
dev
,
hd_öfo
[
CURRENT_DEV
].
£˘
,0,0,0,

360 
WIN_RESTORE
,&
ªˇl_öå
);

363 i‡(
CURRENT
->
cmd
 =
WRITE
) {

364 
	`hd_out
(
dev
,
n£˘
,
£c
,
hód
,
cyl
,
WIN_WRITE
,&
wrôe_öå
);

365 
i
=0 ; i<10000 && !(
r
=
	`öb_p
(
HD_STATUS
)&
DRQ_STAT
) ; i++)

367 i‡(!
r
) {

368 
	`bad_rw_öå
();

369 
ª≥©
;

371 
	`p‹t_wrôe
(
HD_DATA
,
CURRENT
->
buf„r
,256);

372 } i‡(
CURRENT
->
cmd
 =
READ
) {

373 
	`hd_out
(
dev
,
n£˘
,
£c
,
hód
,
cyl
,
WIN_READ
,&
ªad_öå
);

375 
	`∑nic
("unknown hd-command");

376 
	}
}

378 
	$hd_öô
()

380 
blk_dev
[
MAJOR_NR
].
ªque°_‚
 = 
DEVICE_REQUEST
;

381 
	`£t_öå_g©e
(0x2E,&
hd_öãºu±
);

382 
	`outb_p
(
	`öb_p
(0x21)&0xfb,0x21);

383 
	`outb
(
	`öb_p
(0xA1)&0xbf,0xA1);

384 
	}
}

	@kernel/blk_drv/ll_rw_blk.c

10 
	~<î∫o.h
>

11 
	~<löux/sched.h
>

12 
	~<löux/kî√l.h
>

13 
	~<asm/sy°em.h
>

15 
	~"blk.h
"

21 
ªque°
 
	gªque°
[
NR_REQUEST
];

26 
èsk_°ru˘
 * 
	gwaô_f‹_ªque°
 = 
NULL
;

32 
blk_dev_°ru˘
 
	gblk_dev
[
NR_BLK_DEV
] = {

33 { 
NULL
, NULL },

34 { 
NULL
, NULL },

35 { 
NULL
, NULL },

36 { 
NULL
, NULL },

37 { 
NULL
, NULL },

38 { 
NULL
, NULL },

39 { 
NULL
, NULL }

49 * 
	gblk_size
[
NR_BLK_DEV
] = { 
NULL
, NULL, };

51 
ölöe
 
	$lock_buf„r
(
buf„r_hód
 * 
bh
)

53 
	`˛i
();

54 
bh
->
b_lock
)

55 
	`¶ìp_⁄
(&
bh
->
b_waô
);

56 
bh
->
b_lock
=1;

57 
	`°i
();

58 
	}
}

60 
ölöe
 
	$u∆ock_buf„r
(
buf„r_hód
 * 
bh
)

62 i‡(!
bh
->
b_lock
)

63 
	`¥ötk
("ll_rw_block.c: bufferÇotÜocked\n\r");

64 
bh
->
b_lock
 = 0;

65 
	`wake_up
(&
bh
->
b_waô
);

66 
	}
}

76 
	$add_ªque°
(
blk_dev_°ru˘
 * 
dev
, 
ªque°
 * 
ªq
)

78 
ªque°
 * 
tmp
;

80 
ªq
->
√xt
 = 
NULL
;

81 
	`˛i
();

82 i‡(
ªq
->
bh
)

83 
ªq
->
bh
->
b_dút
 = 0;

84 i‡(!(
tmp
 = 
dev
->
cuºít_ªque°
)) {

85 
dev
->
cuºít_ªque°
 = 
ªq
;

86 
	`°i
();

87 (
dev
->
ªque°_‚
)();

90  ; 
tmp
->
√xt
 ;Åmp=tmp->next) {

91 i‡(!
ªq
->
bh
)

92 i‡(
tmp
->
√xt
->
bh
)

96 i‡((
	`IN_ORDER
(
tmp
,
ªq
) ||

97 !
	`IN_ORDER
(
tmp
,tmp->
√xt
)) &&

98 
	`IN_ORDER
(
ªq
,
tmp
->
√xt
))

101 
ªq
->
√xt
=
tmp
->next;

102 
tmp
->
√xt
=
ªq
;

103 
	`°i
();

104 
	}
}

106 
	$make_ªque°
(
maj‹
,
rw
, 
buf„r_hód
 * 
bh
)

108 
ªque°
 * 
ªq
;

109 
rw_ahód
;

113 i‡(
rw_ahód
 = (
rw
 =
READA
 ||Ñw =
WRITEA
)) {

114 i‡(
bh
->
b_lock
)

116 i‡(
rw
 =
READA
)

117 
rw
 = 
READ
;

119 
rw
 = 
WRITE
;

121 i‡(
rw
!=
READ
 &&Ñw!=
WRITE
)

122 
	`∑nic
("Bad block dev command, must be R/W/RA/WA");

123 
	`lock_buf„r
(
bh
);

124 i‡((
rw
 =
WRITE
 && !
bh
->
b_dút
Ë|| (rw =
READ
 && bh->
b_u±od©e
)) {

125 
	`u∆ock_buf„r
(
bh
);

128 
ª≥©
:

133 i‡(
rw
 =
READ
)

134 
ªq
 = 
ªque°
+
NR_REQUEST
;

136 
ªq
 = 
ªque°
+((
NR_REQUEST
*2)/3);

138 --
ªq
 >
ªque°
)

139 i‡(
ªq
->
dev
<0)

142 i‡(
ªq
 < 
ªque°
) {

143 i‡(
rw_ahód
) {

144 
	`u∆ock_buf„r
(
bh
);

147 
	`¶ìp_⁄
(&
waô_f‹_ªque°
);

148 
ª≥©
;

151 
ªq
->
dev
 = 
bh
->
b_dev
;

152 
ªq
->
cmd
 = 
rw
;

153 
ªq
->
îr‹s
=0;

154 
ªq
->
£˘‹
 = 
bh
->
b_blockƒ
<<1;

155 
ªq
->
ƒ_£˘‹s
 = 2;

156 
ªq
->
buf„r
 = 
bh
->
b_d©a
;

157 
ªq
->
waôög
 = 
NULL
;

158 
ªq
->
bh
 = bh;

159 
ªq
->
√xt
 = 
NULL
;

160 
	`add_ªque°
(
maj‹
+
blk_dev
,
ªq
);

161 
	}
}

163 
	$Œ_rw_∑ge
(
rw
, 
dev
, 
∑ge
, * 
buf„r
)

165 
ªque°
 * 
ªq
;

166 
maj‹
 = 
	`MAJOR
(
dev
);

168 i‡(
maj‹
 >
NR_BLK_DEV
 || !(
blk_dev
[maj‹].
ªque°_‚
)) {

169 
	`¥ötk
("TryingÅoÑeadÇonexistent block-device\n\r");

172 i‡(
rw
!=
READ
 &&Ñw!=
WRITE
)

173 
	`∑nic
("Bad block dev command, must be R/W");

174 
ª≥©
:

175 
ªq
 = 
ªque°
+
NR_REQUEST
;

176 --
ªq
 >
ªque°
)

177 i‡(
ªq
->
dev
<0)

179 i‡(
ªq
 < 
ªque°
) {

180 
	`¶ìp_⁄
(&
waô_f‹_ªque°
);

181 
ª≥©
;

184 
ªq
->
dev
 = dev;

185 
ªq
->
cmd
 = 
rw
;

186 
ªq
->
îr‹s
 = 0;

187 
ªq
->
£˘‹
 = 
∑ge
<<3;

188 
ªq
->
ƒ_£˘‹s
 = 8;

189 
ªq
->
buf„r
 = buffer;

190 
ªq
->
waôög
 = 
cuºít
;

191 
ªq
->
bh
 = 
NULL
;

192 
ªq
->
√xt
 = 
NULL
;

193 
cuºít
->
°©e
 = 
TASK_UNINTERRUPTIBLE
;

194 
	`add_ªque°
(
maj‹
+
blk_dev
,
ªq
);

195 
	`scheduÀ
();

196 
	}
}

198 
	$Œ_rw_block
(
rw
, 
buf„r_hód
 * 
bh
)

200 
maj‹
;

202 i‡((
maj‹
=
	`MAJOR
(
bh
->
b_dev
)Ë>
NR_BLK_DEV
 ||

203 !(
blk_dev
[
maj‹
].
ªque°_‚
)) {

204 
	`¥ötk
("TryingÅoÑeadÇonexistent block-device\n\r");

207 
	`make_ªque°
(
maj‹
,
rw
,
bh
);

208 
	}
}

210 
	$blk_dev_öô
()

212 
i
;

214 
i
=0 ; i<
NR_REQUEST
 ; i++) {

215 
ªque°
[
i
].
dev
 = -1;

216 
ªque°
[
i
].
√xt
 = 
NULL
;

218 
	}
}

	@kernel/blk_drv/ramdisk.c

7 
	~<°rög.h
>

9 
	~<löux/c⁄fig.h
>

10 
	~<löux/sched.h
>

11 
	~<löux/fs.h
>

12 
	~<löux/kî√l.h
>

13 
	~<asm/sy°em.h
>

14 
	~<asm/£gmít.h
>

15 
	~<asm/mem‹y.h
>

17 
	#MAJOR_NR
 1

	)

18 
	~"blk.h
"

20 *
	grd_°¨t
;

21 
	grd_Àngth
 = 0;

23 
	$do_rd_ªque°
()

25 
Àn
;

26 *
addr
;

28 
INIT_REQUEST
;

29 
addr
 = 
rd_°¨t
 + (
CURRENT
->
£˘‹
 << 9);

30 
Àn
 = 
CURRENT
->
ƒ_£˘‹s
 << 9;

31 i‡((
	`MINOR
(
CURRENT
->
dev
Ë!1Ë|| (
addr
+
Àn
 > 
rd_°¨t
+
rd_Àngth
)) {

32 
	`íd_ªque°
(0);

33 
ª≥©
;

35 i‡(
CURRENT
-> 
cmd
 =
WRITE
) {

36 (Ë
	`mem˝y
(
addr
,

37 
CURRENT
->
buf„r
,

38 
Àn
);

39 } i‡(
CURRENT
->
cmd
 =
READ
) {

40 (Ë
	`mem˝y
(
CURRENT
->
buf„r
,

41 
addr
,

42 
Àn
);

44 
	`∑nic
("unknownÑamdisk-command");

45 
	`íd_ªque°
(1);

46 
ª≥©
;

47 
	}
}

52 
	$rd_öô
(
mem_°¨t
, 
Àngth
)

54 
i
;

55 *
˝
;

57 
blk_dev
[
MAJOR_NR
].
ªque°_‚
 = 
DEVICE_REQUEST
;

58 
rd_°¨t
 = (*Ë
mem_°¨t
;

59 
rd_Àngth
 = 
Àngth
;

60 
˝
 = 
rd_°¨t
;

61 
i
=0; i < 
Àngth
; i++)

62 *
˝
++ = '\0';

63 (
Àngth
);

64 
	}
}

71 
	$rd_lﬂd
()

73 
buf„r_hód
 *
bh
;

74 
su≥r_block
 
s
;

75 
block
 = 256;

76 
i
 = 1;

77 
nblocks
;

78 *
˝
;

80 i‡(!
rd_Àngth
)

82 
	`¥ötk
("Ram disk: %d byãs, sèπögáà0x%x\n", 
rd_Àngth
,

83 (Ë
rd_°¨t
);

84 i‡(
	`MAJOR
(
ROOT_DEV
) != 2)

86 
bh
 = 
	`bªada
(
ROOT_DEV
,
block
+1,block,block+2,-1);

87 i‡(!
bh
) {

88 
	`¥ötk
("DiskÉrror whileÜooking forÑamdisk!\n");

91 *((
d_su≥r_block
 *Ë&
s
Ë*((d_su≥r_block *Ë
bh
->
b_d©a
);

92 
	`bªl£
(
bh
);

93 i‡(
s
.
s_magic
 !
SUPER_MAGIC
)

96 
nblocks
 = 
s
.
s_nz⁄es
 << s.
s_log_z⁄e_size
;

97 i‡(
nblocks
 > (
rd_Àngth
 >> 
BLOCK_SIZE_BITS
)) {

98 
	`¥ötk
("Ram disk imageÅoo big! (%d blocks, %dávail)\n",

99 
nblocks
, 
rd_Àngth
 >> 
BLOCK_SIZE_BITS
);

102 
	`¥ötk
("Loading %d bytes intoÑam disk... 0000k",

103 
nblocks
 << 
BLOCK_SIZE_BITS
);

104 
˝
 = 
rd_°¨t
;

105 
nblocks
) {

106 i‡(
nblocks
 > 2)

107 
bh
 = 
	`bªada
(
ROOT_DEV
, 
block
, block+1, block+2, -1);

109 
bh
 = 
	`bªad
(
ROOT_DEV
, 
block
);

110 i‡(!
bh
) {

111 
	`¥ötk
("I/OÉrror on block %d,ábortingÜoad\n",

112 
block
);

115 (Ë
	`mem˝y
(
˝
, 
bh
->
b_d©a
, 
BLOCK_SIZE
);

116 
	`bªl£
(
bh
);

117 
	`¥ötk
("\010\010\010\010\010%4dk",
i
);

118 
˝
 +
BLOCK_SIZE
;

119 
block
++;

120 
nblocks
--;

121 
i
++;

123 
	`¥ötk
("\010\010\010\010\010done \n");

124 
ROOT_DEV
=0x0101;

125 
	}
}

	@kernel/chr_drv/console.c

33 
	~<löux/sched.h
>

34 
	~<löux/ây.h
>

35 
	~<löux/c⁄fig.h
>

36 
	~<löux/kî√l.h
>

38 
	~<asm/io.h
>

39 
	~<asm/sy°em.h
>

40 
	~<asm/£gmít.h
>

42 
	~<°rög.h
>

43 
	~<î∫o.h
>

45 
	#DEF_TERMIOS
 \

46 (
ãrmios
) { \

47 
ICRNL
, \

48 
OPOST
 | 
ONLCR
, \

50 
IXON
 | 
ISIG
 | 
ICANON
 | 
ECHO
 | 
ECHOCTL
 | 
ECHOKE
, \

52 
INIT_C_CC
 \

53 }

	)

60 
	#ORIG_X
 (*(*)0x90000)

	)

61 
	#ORIG_Y
 (*(*)0x90001)

	)

62 
	#ORIG_VIDEO_PAGE
 (*(*)0x90004)

	)

63 
	#ORIG_VIDEO_MODE
 ((*(*)0x90006Ë& 0xff)

	)

64 
	#ORIG_VIDEO_COLS
 (((*(*)0x90006Ë& 0xff00Ë>> 8)

	)

65 
	#ORIG_VIDEO_LINES
 ((*(*)0x9000eË& 0xff)

	)

66 
	#ORIG_VIDEO_EGA_AX
 (*(*)0x90008)

	)

67 
	#ORIG_VIDEO_EGA_BX
 (*(*)0x9000a)

	)

68 
	#ORIG_VIDEO_EGA_CX
 (*(*)0x9000c)

	)

70 
	#VIDEO_TYPE_MDA
 0x10

	)

71 
	#VIDEO_TYPE_CGA
 0x11

	)

72 
	#VIDEO_TYPE_EGAM
 0x20

	)

73 
	#VIDEO_TYPE_EGAC
 0x21

	)

75 
	#NPAR
 16

	)

77 
	gNR_CONSOLES
 = 0;

79 
keybﬂrd_öãºu±
();

81 
	gvideo_ty≥
;

82 
	gvideo_num_cﬁumns
;

83 
	gvideo_mem_ba£
;

84 
	gvideo_mem_ãrm
;

85 
	gvideo_size_row
;

86 
	gvideo_num_löes
;

87 
	gvideo_∑ge
;

88 
	gvideo_p‹t_ªg
;

89 
	gvideo_p‹t_vÆ
;

90 
	gˇn_do_cﬁour
 = 0;

93 
	mvc_video_îa£_ch¨
;

94 
	mvc_©å
;

95 
	mvc_def_©å
;

96 
	mvc_bﬁd_©å
;

97 
	mvc_ques
;

98 
	mvc_°©e
;

99 
	mvc_ª°©e
;

100 
	mvc_checkö
;

101 
	mvc_‹igö
;

102 
	mvc_s¸_íd
;

103 
	mvc_pos
;

104 
	mvc_x
,
	mvc_y
;

105 
	mvc_t›
,
	mvc_bŸtom
;

106 
	mvc_≈¨
,
	mvc_∑r
[
NPAR
];

107 
	mvc_video_mem_°¨t
;

108 
	mvc_video_mem_íd
;

109 
	mvc_ßved_x
;

110 
	mvc_ßved_y
;

111 
	mvc_iscﬁ‹
;

112 * 
	mvc_å™¶©e
;

113 } 
	gvc_c⁄s
 [
MAX_CONSOLES
];

115 
	#‹igö
 (
vc_c⁄s
[
cuºc⁄s
].
vc_‹igö
)

	)

116 
	#s¸_íd
 (
vc_c⁄s
[
cuºc⁄s
].
vc_s¸_íd
)

	)

117 
	#pos
 (
vc_c⁄s
[
cuºc⁄s
].
vc_pos
)

	)

118 
	#t›
 (
vc_c⁄s
[
cuºc⁄s
].
vc_t›
)

	)

119 
	#bŸtom
 (
vc_c⁄s
[
cuºc⁄s
].
vc_bŸtom
)

	)

120 
	#x
 (
vc_c⁄s
[
cuºc⁄s
].
vc_x
)

	)

121 
	#y
 (
vc_c⁄s
[
cuºc⁄s
].
vc_y
)

	)

122 
	#°©e
 (
vc_c⁄s
[
cuºc⁄s
].
vc_°©e
)

	)

123 
	#ª°©e
 (
vc_c⁄s
[
cuºc⁄s
].
vc_ª°©e
)

	)

124 
	#checkö
 (
vc_c⁄s
[
cuºc⁄s
].
vc_checkö
)

	)

125 
	#≈¨
 (
vc_c⁄s
[
cuºc⁄s
].
vc_≈¨
)

	)

126 
	#∑r
 (
vc_c⁄s
[
cuºc⁄s
].
vc_∑r
)

	)

127 
	#ques
 (
vc_c⁄s
[
cuºc⁄s
].
vc_ques
)

	)

128 
	#©å
 (
vc_c⁄s
[
cuºc⁄s
].
vc_©å
)

	)

129 
	#ßved_x
 (
vc_c⁄s
[
cuºc⁄s
].
vc_ßved_x
)

	)

130 
	#ßved_y
 (
vc_c⁄s
[
cuºc⁄s
].
vc_ßved_y
)

	)

131 
	#å™¶©e
 (
vc_c⁄s
[
cuºc⁄s
].
vc_å™¶©e
)

	)

132 
	#video_mem_°¨t
 (
vc_c⁄s
[
cuºc⁄s
].
vc_video_mem_°¨t
)

	)

133 
	#video_mem_íd
 (
vc_c⁄s
[
cuºc⁄s
].
vc_video_mem_íd
)

	)

134 
	#def_©å
 (
vc_c⁄s
[
cuºc⁄s
].
vc_def_©å
)

	)

135 
	#video_îa£_ch¨
 (
vc_c⁄s
[
cuºc⁄s
].
vc_video_îa£_ch¨
)

	)

136 
	#iscﬁ‹
 (
vc_c⁄s
[
cuºc⁄s
].
vc_iscﬁ‹
)

	)

138 
	gbœnköãrvÆ
 = 0;

139 
	gbœnkcou¡
 = 0;

141 
sysbìp
();

147 
	#RESPONSE
 "\033[?1;2c"

	)

149 * 
	gå™¶©i⁄s
[] = {

161 
	#NORM_TRANS
 (
å™¶©i⁄s
[0])

	)

162 
	#GRAF_TRANS
 (
å™¶©i⁄s
[1])

	)

165 
ölöe
 
	$gŸoxy
(
cuºc⁄s
, 
√w_x
,
√w_y
)

167 i‡(
√w_x
 > 
video_num_cﬁumns
 || 
√w_y
 >
video_num_löes
)

169 
x
 = 
√w_x
;

170 
y
 = 
√w_y
;

171 
pos
 = 
‹igö
 + 
y
*
video_size_row
 + (
x
<<1);

172 
	}
}

174 
ölöe
 
	$£t_‹igö
(
cuºc⁄s
)

176 i‡(
video_ty≥
 !
VIDEO_TYPE_EGAC
 && video_ty≥ !
VIDEO_TYPE_EGAM
)

178 i‡(
cuºc⁄s
 !
fg_c⁄sﬁe
)

180 
	`˛i
();

181 
	`outb_p
(12, 
video_p‹t_ªg
);

182 
	`outb_p
(0xff&((
‹igö
-
video_mem_ba£
)>>9), 
video_p‹t_vÆ
);

183 
	`outb_p
(13, 
video_p‹t_ªg
);

184 
	`outb_p
(0xff&((
‹igö
-
video_mem_ba£
)>>1), 
video_p‹t_vÆ
);

185 
	`°i
();

186 
	}
}

188 
	$s¸up
(
cuºc⁄s
)

190 i‡(
bŸtom
<=
t›
)

192 i‡(
video_ty≥
 =
VIDEO_TYPE_EGAC
 || video_ty≥ =
VIDEO_TYPE_EGAM
)

194 i‡(!
t›
 && 
bŸtom
 =
video_num_löes
) {

195 
‹igö
 +
video_size_row
;

196 
pos
 +
video_size_row
;

197 
s¸_íd
 +
video_size_row
;

198 i‡(
s¸_íd
 > 
video_mem_íd
) {

199 
	`__asm__
("cld\n\t"

205 ::"a" (
video_îa£_ch¨
),

206 "c" ((
video_num_löes
-1)*
video_num_cﬁumns
>>1),

207 "D" (
video_mem_°¨t
),

208 "S" (
‹igö
)

210 
s¸_íd
 -
‹igö
-
video_mem_°¨t
;

211 
pos
 -
‹igö
-
video_mem_°¨t
;

212 
‹igö
 = 
video_mem_°¨t
;

214 
	`__asm__
("cld\n\t"

217 ::"a" (
video_îa£_ch¨
),

218 "c" (
video_num_cﬁumns
),

219 "D" (
s¸_íd
-
video_size_row
)

222 
	`£t_‹igö
(
cuºc⁄s
);

224 
	`__asm__
("cld\n\t"

230 ::"a" (
video_îa£_ch¨
),

231 "c" ((
bŸtom
-
t›
-1)*
video_num_cﬁumns
>>1),

232 "D" (
‹igö
+
video_size_row
*
t›
),

233 "S" (
‹igö
+
video_size_row
*(
t›
+1))

239 
	`__asm__
("cld\n\t"

245 ::"a" (
video_îa£_ch¨
),

246 "c" ((
bŸtom
-
t›
-1)*
video_num_cﬁumns
>>1),

247 "D" (
‹igö
+
video_size_row
*
t›
),

248 "S" (
‹igö
+
video_size_row
*(
t›
+1))

251 
	}
}

253 
	$s¸down
(
cuºc⁄s
)

255 i‡(
bŸtom
 <
t›
)

257 i‡(
video_ty≥
 =
VIDEO_TYPE_EGAC
 || video_ty≥ =
VIDEO_TYPE_EGAM
)

259 
	`__asm__
("std\n\t"

266 ::"a" (
video_îa£_ch¨
),

267 "c" ((
bŸtom
-
t›
-1)*
video_num_cﬁumns
>>1),

268 "D" (
‹igö
+
video_size_row
*
bŸtom
-4),

269 "S" (
‹igö
+
video_size_row
*(
bŸtom
-1)-4)

274 
	`__asm__
("std\n\t"

281 ::"a" (
video_îa£_ch¨
),

282 "c" ((
bŸtom
-
t›
-1)*
video_num_cﬁumns
>>1),

283 "D" (
‹igö
+
video_size_row
*
bŸtom
-4),

284 "S" (
‹igö
+
video_size_row
*(
bŸtom
-1)-4)

287 
	}
}

289 
	$lf
(
cuºc⁄s
)

291 i‡(
y
+1<
bŸtom
) {

292 
y
++;

293 
pos
 +
video_size_row
;

296 
	`s¸up
(
cuºc⁄s
);

297 
	}
}

299 
	$ri
(
cuºc⁄s
)

301 i‡(
y
>
t›
) {

302 
y
--;

303 
pos
 -
video_size_row
;

306 
	`s¸down
(
cuºc⁄s
);

307 
	}
}

309 
	$¸
(
cuºc⁄s
)

311 
pos
 -
x
<<1;

312 
x
=0;

313 
	}
}

315 
	$dñ
(
cuºc⁄s
)

317 i‡(
x
) {

318 
pos
 -= 2;

319 
x
--;

320 *(*)
pos
 = 
video_îa£_ch¨
;

322 
	}
}

324 
	$csi_J
(
cuºc⁄s
, 
v∑r
)

326 
cou¡
 
	`__asm__
("cx");

327 
°¨t
 
	`__asm__
("di");

329 
v∑r
) {

331 
cou¡
 = (
s¸_íd
-
pos
)>>1;

332 
°¨t
 = 
pos
;

335 
cou¡
 = (
pos
-
‹igö
)>>1;

336 
°¨t
 = 
‹igö
;

339 
cou¡
 = 
video_num_cﬁumns
 * 
video_num_löes
;

340 
°¨t
 = 
‹igö
;

345 
	`__asm__
("cld\n\t"

348 ::"c" (
cou¡
),

349 "D" (
°¨t
),"a" (
video_îa£_ch¨
)

351 
	}
}

353 
	$csi_K
(
cuºc⁄s
, 
v∑r
)

355 
cou¡
 
	`__asm__
("cx");

356 
°¨t
 
	`__asm__
("di");

358 
v∑r
) {

360 i‡(
x
>=
video_num_cﬁumns
)

362 
cou¡
 = 
video_num_cﬁumns
-
x
;

363 
°¨t
 = 
pos
;

366 
°¨t
 = 
pos
 - (
x
<<1);

367 
cou¡
 = (
x
<
video_num_cﬁumns
)?x:video_num_columns;

370 
°¨t
 = 
pos
 - (
x
<<1);

371 
cou¡
 = 
video_num_cﬁumns
;

376 
	`__asm__
("cld\n\t"

379 ::"c" (
cou¡
),

380 "D" (
°¨t
),"a" (
video_îa£_ch¨
)

382 
	}
}

384 
	$csi_m
(
cuºc⁄s
 )

386 
i
;

388 
i
=0;i<=
≈¨
;i++)

389 
∑r
[
i
]) {

390 0: 
©å
=
def_©å
;;

391 1: 
©å
=(
iscﬁ‹
?attr|0x08:attr|0x0f);;

394 i‡(!
iscﬁ‹
)

395 
©å
 |= 0x01;

398 i‡(
vc_c⁄s
[
cuºc⁄s
].
vc_bﬁd_©å
 != -1)

399 
©å
 = (
vc_c⁄s
[
cuºc⁄s
].
vc_bﬁd_©å
&0x0f)|(0xf0&(attr));

401 { 
√w©å
 = (
©å
&0xf0)|(0xf&(~attr));

402 
©å
 = ((
√w©å
&0xf)==((attr>>4)&0xf)?

403 (
©å
&0xf0)|(((attr&0xf)+1)%0xf):

404 
√w©å
);

408 5: 
©å
=attr|0x80;;

409 7: 
©å
=(attr<<4)|(attr>>4);;

410 22: 
©å
=attr&0xf7;;

411 24: 
©å
=attr&0xfe;;

412 25: 
©å
=attr&0x7f;;

413 27: 
©å
=
def_©å
;;

414 39: 
©å
=◊â∏& 0xf0)|(
def_©å
 & 0x0f); ;

415 49: 
©å
=◊â∏& 0x0f)|(
def_©å
 & 0xf0); ;

417 i‡(!
ˇn_do_cﬁour
)

419 
iscﬁ‹
 = 1;

420 i‡((
∑r
[
i
]>=30) && (par[i]<=38))

421 
©å
 = (©å & 0xf0Ë| (
∑r
[
i
]-30);

423 i‡((
∑r
[
i
]>=40) && (par[i]<=48))

424 
©å
 = (©å & 0x0fË| ((
∑r
[
i
]-40)<<4);

428 
	}
}

430 
ölöe
 
	$£t_curs‹
(
cuºc⁄s
)

432 
bœnkcou¡
 = 
bœnköãrvÆ
;

433 i‡(
cuºc⁄s
 !
fg_c⁄sﬁe
)

435 
	`˛i
();

436 
	`outb_p
(14, 
video_p‹t_ªg
);

437 
	`outb_p
(0xff&((
pos
-
video_mem_ba£
)>>9), 
video_p‹t_vÆ
);

438 
	`outb_p
(15, 
video_p‹t_ªg
);

439 
	`outb_p
(0xff&((
pos
-
video_mem_ba£
)>>1), 
video_p‹t_vÆ
);

440 
	`°i
();

441 
	}
}

443 
ölöe
 
	$hide_curs‹
(
cuºc⁄s
)

445 
	`outb_p
(14, 
video_p‹t_ªg
);

446 
	`outb_p
(0xff&((
s¸_íd
-
video_mem_ba£
)>>9), 
video_p‹t_vÆ
);

447 
	`outb_p
(15, 
video_p‹t_ªg
);

448 
	`outb_p
(0xff&((
s¸_íd
-
video_mem_ba£
)>>1), 
video_p‹t_vÆ
);

449 
	}
}

451 
	$ª•⁄d
(
cuºc⁄s
, 
ây_°ru˘
 * 
ây
)

453 * 
p
 = 
RESPONSE
;

455 
	`˛i
();

456 *
p
) {

457 
	`PUTCH
(*
p
,
ây
->
ªad_q
);

458 
p
++;

460 
	`°i
();

461 
	`c›y_to_cooked
(
ây
);

462 
	}
}

464 
	$ö£π_ch¨
(
cuºc⁄s
)

466 
i
=
x
;

467 
tmp
, 
ﬁd
 = 
video_îa£_ch¨
;

468 * 
p
 = (*Ë
pos
;

470 
i
++<
video_num_cﬁumns
) {

471 
tmp
=*
p
;

472 *
p
=
ﬁd
;

473 
ﬁd
=
tmp
;

474 
p
++;

476 
	}
}

478 
	$ö£π_löe
(
cuºc⁄s
)

480 
ﬁdt›
,
ﬁdbŸtom
;

482 
ﬁdt›
=
t›
;

483 
ﬁdbŸtom
=
bŸtom
;

484 
t›
=
y
;

485 
bŸtom
 = 
video_num_löes
;

486 
	`s¸down
(
cuºc⁄s
);

487 
t›
=
ﬁdt›
;

488 
bŸtom
=
ﬁdbŸtom
;

489 
	}
}

491 
	$dñëe_ch¨
(
cuºc⁄s
)

493 
i
;

494 * 
p
 = (*Ë
pos
;

496 i‡(
x
>=
video_num_cﬁumns
)

498 
i
 = 
x
;

499 ++
i
 < 
video_num_cﬁumns
) {

500 *
p
 = *(p+1);

501 
p
++;

503 *
p
 = 
video_îa£_ch¨
;

504 
	}
}

506 
	$dñëe_löe
(
cuºc⁄s
)

508 
ﬁdt›
,
ﬁdbŸtom
;

510 
ﬁdt›
=
t›
;

511 
ﬁdbŸtom
=
bŸtom
;

512 
t›
=
y
;

513 
bŸtom
 = 
video_num_löes
;

514 
	`s¸up
(
cuºc⁄s
);

515 
t›
=
ﬁdt›
;

516 
bŸtom
=
ﬁdbŸtom
;

517 
	}
}

519 
	$csi_©
(
cuºc⁄s
, 
ƒ
)

521 i‡(
ƒ
 > 
video_num_cﬁumns
)

522 
ƒ
 = 
video_num_cﬁumns
;

523 i‡(!
ƒ
)

524 
ƒ
 = 1;

525 
ƒ
--)

526 
	`ö£π_ch¨
(
cuºc⁄s
);

527 
	}
}

529 
	$csi_L
(
cuºc⁄s
, 
ƒ
)

531 i‡(
ƒ
 > 
video_num_löes
)

532 
ƒ
 = 
video_num_löes
;

533 i‡(!
ƒ
)

534 
ƒ
 = 1;

535 
ƒ
--)

536 
	`ö£π_löe
(
cuºc⁄s
);

537 
	}
}

539 
	$csi_P
(
cuºc⁄s
, 
ƒ
)

541 i‡(
ƒ
 > 
video_num_cﬁumns
)

542 
ƒ
 = 
video_num_cﬁumns
;

543 i‡(!
ƒ
)

544 
ƒ
 = 1;

545 
ƒ
--)

546 
	`dñëe_ch¨
(
cuºc⁄s
);

547 
	}
}

549 
	$csi_M
(
cuºc⁄s
, 
ƒ
)

551 i‡(
ƒ
 > 
video_num_löes
)

552 
ƒ
 = 
video_num_löes
;

553 i‡(!
ƒ
)

554 
ƒ
=1;

555 
ƒ
--)

556 
	`dñëe_löe
(
cuºc⁄s
);

557 
	}
}

559 
	$ßve_cur
(
cuºc⁄s
)

561 
ßved_x
=
x
;

562 
ßved_y
=
y
;

563 
	}
}

565 
	$ª°‹e_cur
(
cuºc⁄s
)

567 
	`gŸoxy
(
cuºc⁄s
,
ßved_x
, 
ßved_y
);

568 
	}
}

571 íum { 
	mESn‹mÆ
, 
	mESesc
, 
	mESsqu¨e
, 
	mESgë∑rs
, 
	mESgŸ∑rs
, 
	mESfunckey
,

572 
	mES£âîm
, 
	mES£tgøph
 };

574 
	$c⁄_wrôe
(
ây_°ru˘
 * 
ây
)

576 
ƒ
;

577 
c
;

578 
cuºc⁄s
;

580 
cuºc⁄s
 = 
ây
 - 
ây_èbÀ
;

581 i‡((
cuºc⁄s
>=
MAX_CONSOLES
) || (currcons<0))

582 
	`∑nic
("con_write: illegalÅty");

584 
ƒ
 = 
	`CHARS
(
ây
->
wrôe_q
);

585 
ƒ
--) {

586 i‡(
ây
->
°›≥d
)

588 
	`GETCH
(
ây
->
wrôe_q
,
c
);

589 i‡(
c
 == 24 || c == 26)

590 
°©e
 = 
ESn‹mÆ
;

591 
°©e
) {

592 
ESn‹mÆ
:

593 i‡(
c
>31 && c<127) {

594 i‡(
x
>=
video_num_cﬁumns
) {

595 
x
 -
video_num_cﬁumns
;

596 
pos
 -
video_size_row
;

597 
	`lf
(
cuºc⁄s
);

599 
	`__asm__
("movb %2,%%ah\n\t"

601 ::"a" (
å™¶©e
[
c
-32]),

602 "m" (*(*)
pos
),

603 "m" (
©å
)

605 
pos
 += 2;

606 
x
++;

607 } i‡(
c
==27)

608 
°©e
=
ESesc
;

609 i‡(
c
==10 || c==11 || c==12)

610 
	`lf
(
cuºc⁄s
);

611 i‡(
c
==13)

612 
	`¸
(
cuºc⁄s
);

613 i‡(
c
==
	`ERASE_CHAR
(
ây
))

614 
	`dñ
(
cuºc⁄s
);

615 i‡(
c
==8) {

616 i‡(
x
) {

617 
x
--;

618 
pos
 -= 2;

620 } i‡(
c
==9) {

621 
c
=8-(
x
&7);

622 
x
 +
c
;

623 
pos
 +
c
<<1;

624 i‡(
x
>
video_num_cﬁumns
) {

625 
x
 -
video_num_cﬁumns
;

626 
pos
 -
video_size_row
;

627 
	`lf
(
cuºc⁄s
);

629 
c
=9;

630 } i‡(
c
==7)

631 
	`sysbìp
();

632 i‡(
c
 == 14)

633 
å™¶©e
 = 
GRAF_TRANS
;

634 i‡(
c
 == 15)

635 
å™¶©e
 = 
NORM_TRANS
;

637 
ESesc
:

638 
°©e
 = 
ESn‹mÆ
;

639 
c
)

642 
°©e
=
ESsqu¨e
;

645 
	`gŸoxy
(
cuºc⁄s
,0,
y
+1);

648 
	`ri
(
cuºc⁄s
);

651 
	`lf
(
cuºc⁄s
);

654 
	`ª•⁄d
(
cuºc⁄s
,
ây
);

657 
	`ßve_cur
(
cuºc⁄s
);

660 
	`ª°‹e_cur
(
cuºc⁄s
);

663 
°©e
 = 
ES£tgøph
;

666 
°©e
 = 
ES£âîm
;

669 
°©e
 = -1;

672 
ây
->
ãrmios
 = 
DEF_TERMIOS
;

673 
°©e
 = 
ª°©e
 = 
ESn‹mÆ
;

674 
checkö
 = 0;

675 
t›
 = 0;

676 
bŸtom
 = 
video_num_löes
;

682 
ESsqu¨e
:

683 
≈¨
=0;≈¨<
NPAR
;npar++)

684 
∑r
[
≈¨
]=0;

685 
≈¨
=0;

686 
°©e
=
ESgë∑rs
;

687 i‡(
c
 =='[')

688 { 
°©e
=
ESfunckey
;

691 i‡(
ques
=(
c
=='?'))

693 
ESgë∑rs
:

694 i‡(
c
==';' && 
≈¨
<
NPAR
-1) {

695 
≈¨
++;

697 } i‡(
c
>='0' && c<='9') {

698 
∑r
[
≈¨
]=10*∑r[≈¨]+
c
-'0';

700 } 
°©e
=
ESgŸ∑rs
;

701 
ESgŸ∑rs
:

702 
°©e
 = 
ESn‹mÆ
;

703 i‡(
ques
)

704 { 
ques
 =0;

707 
c
) {

709 i‡(
∑r
[0])Öar[0]--;

710 
	`gŸoxy
(
cuºc⁄s
,
∑r
[0],
y
);

713 i‡(!
∑r
[0])Öar[0]++;

714 
	`gŸoxy
(
cuºc⁄s
,
x
,
y
-
∑r
[0]);

717 i‡(!
∑r
[0])Öar[0]++;

718 
	`gŸoxy
(
cuºc⁄s
,
x
,
y
+
∑r
[0]);

721 i‡(!
∑r
[0])Öar[0]++;

722 
	`gŸoxy
(
cuºc⁄s
,
x
+
∑r
[0],
y
);

725 i‡(!
∑r
[0])Öar[0]++;

726 
	`gŸoxy
(
cuºc⁄s
,
x
-
∑r
[0],
y
);

729 i‡(!
∑r
[0])Öar[0]++;

730 
	`gŸoxy
(
cuºc⁄s
,0,
y
+
∑r
[0]);

733 i‡(!
∑r
[0])Öar[0]++;

734 
	`gŸoxy
(
cuºc⁄s
,0,
y
-
∑r
[0]);

737 i‡(
∑r
[0])Öar[0]--;

738 
	`gŸoxy
(
cuºc⁄s
,
x
,
∑r
[0]);

741 i‡(
∑r
[0])Öar[0]--;

742 i‡(
∑r
[1])Öar[1]--;

743 
	`gŸoxy
(
cuºc⁄s
,
∑r
[1],par[0]);

746 
	`csi_J
(
cuºc⁄s
,
∑r
[0]);

749 
	`csi_K
(
cuºc⁄s
,
∑r
[0]);

752 
	`csi_L
(
cuºc⁄s
,
∑r
[0]);

755 
	`csi_M
(
cuºc⁄s
,
∑r
[0]);

758 
	`csi_P
(
cuºc⁄s
,
∑r
[0]);

761 
	`csi_©
(
cuºc⁄s
,
∑r
[0]);

764 
	`csi_m
(
cuºc⁄s
);

767 i‡(
∑r
[0])Öar[0]--;

768 i‡(!
∑r
[1]Ë∑r[1] = 
video_num_löes
;

769 i‡(
∑r
[0] <Öar[1] &&

770 
∑r
[1] <
video_num_löes
) {

771 
t›
=
∑r
[0];

772 
bŸtom
=
∑r
[1];

776 
	`ßve_cur
(
cuºc⁄s
);

779 
	`ª°‹e_cur
(
cuºc⁄s
);

783 i‡(!((
≈¨
 >= 2) &&

784 ((
∑r
[1]-13) ==Öar[0]) &&

785 ((
∑r
[2]-17) ==Öar[0])))

787 i‡((
c
=='l')&&(
∑r
[0]>=0)&&(par[0]<=60))

789 
bœnköãrvÆ
 = 
HZ
*60*
∑r
[0];

790 
bœnkcou¡
 = 
bœnköãrvÆ
;

792 i‡(
c
=='b')

793 
vc_c⁄s
[
cuºc⁄s
].
vc_bﬁd_©å


794 
∑r
[0];

797 
ESfunckey
:

798 
°©e
 = 
ESn‹mÆ
;

800 
ES£âîm
:

801 
°©e
 = 
ESn‹mÆ
;

802 i‡(
c
 == 'S') {

803 
def_©å
 = 
©å
;

804 
video_îa£_ch¨
 = (video_îa£_ch¨&0x0ffË| (
def_©å
<<8);

805 } i‡(
c
 == 'L')

807 i‡(
c
 == 'l')

810 
ES£tgøph
:

811 
°©e
 = 
ESn‹mÆ
;

812 i‡(
c
 == '0')

813 
å™¶©e
 = 
GRAF_TRANS
;

814 i‡(
c
 == 'B')

815 
å™¶©e
 = 
NORM_TRANS
;

818 
°©e
 = 
ESn‹mÆ
;

821 
	`£t_curs‹
(
cuºc⁄s
);

822 
	}
}

834 
	$c⁄_öô
()

836 
a
;

837 *
di•œy_desc
 = "????";

838 *
di•œy_±r
;

839 
cuºc⁄s
 = 0;

840 
ba£
, 
ãrm
;

841 
video_mem‹y
;

843 
video_num_cﬁumns
 = 
ORIG_VIDEO_COLS
;

844 
video_size_row
 = 
video_num_cﬁumns
 * 2;

845 
video_num_löes
 = 
ORIG_VIDEO_LINES
;

846 
video_∑ge
 = 
ORIG_VIDEO_PAGE
;

847 
video_îa£_ch¨
 = 0x0720;

848 
bœnkcou¡
 = 
bœnköãrvÆ
;

850 i‡(
ORIG_VIDEO_MODE
 == 7)

852 
video_mem_ba£
 = 0xb0000;

853 
video_p‹t_ªg
 = 0x3b4;

854 
video_p‹t_vÆ
 = 0x3b5;

855 i‡((
ORIG_VIDEO_EGA_BX
 & 0xff) != 0x10)

857 
video_ty≥
 = 
VIDEO_TYPE_EGAM
;

858 
video_mem_ãrm
 = 0xb8000;

859 
di•œy_desc
 = "EGAm";

863 
video_ty≥
 = 
VIDEO_TYPE_MDA
;

864 
video_mem_ãrm
 = 0xb2000;

865 
di•œy_desc
 = "*MDA";

870 
ˇn_do_cﬁour
 = 1;

871 
video_mem_ba£
 = 0xb8000;

872 
video_p‹t_ªg
 = 0x3d4;

873 
video_p‹t_vÆ
 = 0x3d5;

874 i‡((
ORIG_VIDEO_EGA_BX
 & 0xff) != 0x10)

876 
video_ty≥
 = 
VIDEO_TYPE_EGAC
;

877 
video_mem_ãrm
 = 0xc0000;

878 
di•œy_desc
 = "EGAc";

882 
video_ty≥
 = 
VIDEO_TYPE_CGA
;

883 
video_mem_ãrm
 = 0xba000;

884 
di•œy_desc
 = "*CGA";

887 
video_mem‹y
 = 
video_mem_ãrm
 - 
video_mem_ba£
;

888 
NR_CONSOLES
 = 
video_mem‹y
 / (
video_num_löes
 * 
video_size_row
);

889 i‡(
NR_CONSOLES
 > 
MAX_CONSOLES
)

890 
NR_CONSOLES
 = 
MAX_CONSOLES
;

891 i‡(!
NR_CONSOLES
)

892 
NR_CONSOLES
 = 1;

893 
video_mem‹y
 /
NR_CONSOLES
;

897 
di•œy_±r
 = ((*)
video_mem_ba£
Ë+ 
video_size_row
 - 8;

898 *
di•œy_desc
)

900 *
di•œy_±r
++ = *
di•œy_desc
++;

901 
di•œy_±r
++;

906 
ba£
 = 
‹igö
 = 
video_mem_°¨t
 = 
video_mem_ba£
;

907 
ãrm
 = 
video_mem_íd
 = 
ba£
 + 
video_mem‹y
;

908 
s¸_íd
 = 
video_mem_°¨t
 + 
video_num_löes
 * 
video_size_row
;

909 
t›
 = 0;

910 
bŸtom
 = 
video_num_löes
;

911 
©å
 = 0x07;

912 
def_©å
 = 0x07;

913 
ª°©e
 = 
°©e
 = 
ESn‹mÆ
;

914 
checkö
 = 0;

915 
ques
 = 0;

916 
iscﬁ‹
 = 0;

917 
å™¶©e
 = 
NORM_TRANS
;

918 
vc_c⁄s
[0].
vc_bﬁd_©å
 = -1;

920 
	`gŸoxy
(
cuºc⁄s
,
ORIG_X
,
ORIG_Y
);

921 
cuºc⁄s
 = 1; cuºc⁄s<
NR_CONSOLES
; currcons++) {

922 
vc_c⁄s
[
cuºc⁄s
] = vc_cons[0];

923 
‹igö
 = 
video_mem_°¨t
 = (
ba£
 +
video_mem‹y
);

924 
s¸_íd
 = 
‹igö
 + 
video_num_löes
 * 
video_size_row
;

925 
video_mem_íd
 = (
ãrm
 +
video_mem‹y
);

926 
	`gŸoxy
(
cuºc⁄s
,0,0);

928 
	`upd©e_s¸ìn
();

929 
	`£t_å≠_g©e
(0x21,&
keybﬂrd_öãºu±
);

930 
	`outb_p
(
	`öb_p
(0x21)&0xfd,0x21);

931 
a
=
	`öb_p
(0x61);

932 
	`outb_p
(
a
|0x80,0x61);

933 
	`outb_p
(
a
,0x61);

934 
	}
}

936 
	$upd©e_s¸ìn
()

938 
	`£t_‹igö
(
fg_c⁄sﬁe
);

939 
	`£t_curs‹
(
fg_c⁄sﬁe
);

940 
	}
}

944 
	$sysbìp°›
()

947 
	`outb
(
	`öb_p
(0x61)&0xFC, 0x61);

948 
	}
}

950 
	gbìpcou¡
 = 0;

952 
	$sysbìp
()

955 
	`outb_p
(
	`öb_p
(0x61)|3, 0x61);

957 
	`outb_p
(0xB6, 0x43);

959 
	`outb_p
(0x37, 0x42);

960 
	`outb
(0x06, 0x42);

962 
bìpcou¡
 = 
HZ
/8;

963 
	}
}

965 
	$do_s¸ìndump
(
¨g
)

967 *
•å
, *
buf
 = (*)
¨g
;

968 
cuºc⁄s
, 
l
;

970 
	`vîify_¨ó
(
buf
,
video_num_cﬁumns
*
video_num_löes
);

971 
cuºc⁄s
 = 
	`gë_fs_byã
(
buf
);

972 i‡((
cuºc⁄s
<1Ë|| (cuºc⁄s>
NR_CONSOLES
))

973  -
EIO
;

974 
cuºc⁄s
--;

975 
•å
 = (*Ë
‹igö
;

976 
l
=
video_num_löes
*
video_num_cﬁumns
;Ü>0 ;Ü--)

977 
	`put_fs_byã
(*
•å
++,
buf
++);

979 
	}
}

981 
	$bœnk_s¸ìn
()

983 i‡(
video_ty≥
 !
VIDEO_TYPE_EGAC
 && video_ty≥ !
VIDEO_TYPE_EGAM
)

986 
	}
}

988 
	$unbœnk_s¸ìn
()

990 i‡(
video_ty≥
 !
VIDEO_TYPE_EGAC
 && video_ty≥ !
VIDEO_TYPE_EGAM
)

993 
	}
}

995 
	$c⁄sﬁe_¥öt
(c⁄° * 
b
)

997 
cuºc⁄s
 = 
fg_c⁄sﬁe
;

998 
c
;

1000 
c
 = *(
b
++)) {

1001 i‡(
c
 == 10) {

1002 
	`¸
(
cuºc⁄s
);

1003 
	`lf
(
cuºc⁄s
);

1006 i‡(
c
 == 13) {

1007 
	`¸
(
cuºc⁄s
);

1010 i‡(
x
>=
video_num_cﬁumns
) {

1011 
x
 -
video_num_cﬁumns
;

1012 
pos
 -
video_size_row
;

1013 
	`lf
(
cuºc⁄s
);

1015 
	`__asm__
("movb %2,%%ah\n\t"

1017 ::"a" (
c
),

1018 "m" (*(*)
pos
),

1019 "m" (
©å
)

1021 
pos
 += 2;

1022 
x
++;

1024 
	`£t_curs‹
(
cuºc⁄s
);

1025 
	}
}

	@kernel/chr_drv/pty.c

15 
	~<löux/ây.h
>

16 
	~<löux/sched.h
>

17 
	~<asm/sy°em.h
>

18 
	~<asm/io.h
>

20 
ölöe
 
	$±y_c›y
(
ây_°ru˘
 * 
‰om
, ây_°ru˘ * 
to
)

22 
c
;

24 !
‰om
->
°›≥d
 && !
	`EMPTY
(‰om->
wrôe_q
)) {

25 i‡(
	`FULL
(
to
->
ªad_q
)) {

26 i‡(
	`FULL
(
to
->
£c⁄d¨y
))

28 
	`c›y_to_cooked
(
to
);

31 
	`GETCH
(
‰om
->
wrôe_q
,
c
);

32 
	`PUTCH
(
c
,
to
->
ªad_q
);

33 i‡(
cuºít
->
sig«l
 & ~cuºít->
blocked
)

36 
	`c›y_to_cooked
(
to
);

37 
	`wake_up
(&
‰om
->
wrôe_q
->
¥oc_li°
);

38 
	}
}

45 
	$m±y_wrôe
(
ây_°ru˘
 * 
ây
)

47 
ƒ
 = 
ây
 - 
ây_èbÀ
;

49 i‡((
ƒ
 >> 6) != 2)

50 
	`¥ötk
("bad mpty\n\r");

52 
	`±y_c›y
(
ây
,tty+64);

53 
	}
}

55 
	$•ty_wrôe
(
ây_°ru˘
 * 
ây
)

57 
ƒ
 = 
ây
 - 
ây_èbÀ
;

59 i‡((
ƒ
 >> 6) != 3)

60 
	`¥ötk
("bad spty\n\r");

62 
	`±y_c›y
(
ây
,tty-64);

63 
	}
}

	@kernel/chr_drv/serial.c

16 
	~<löux/ây.h
>

17 
	~<löux/sched.h
>

18 
	~<asm/sy°em.h
>

19 
	~<asm/io.h
>

21 
	#WAKEUP_CHARS
 (
TTY_BUF_SIZE
/4)

	)

23 
rs1_öãºu±
();

24 
rs2_öãºu±
();

26 
	$öô
(
p‹t
)

28 
	`outb_p
(0x80,
p‹t
+3);

29 
	`outb_p
(0x30,
p‹t
);

30 
	`outb_p
(0x00,
p‹t
+1);

31 
	`outb_p
(0x03,
p‹t
+3);

32 
	`outb_p
(0x0b,
p‹t
+4);

33 
	`outb_p
(0x0d,
p‹t
+1);

34 ()
	`öb
(
p‹t
);

35 
	}
}

37 
	$rs_öô
()

39 
	`£t_öå_g©e
(0x24,
rs1_öãºu±
);

40 
	`£t_öå_g©e
(0x23,
rs2_öãºu±
);

41 
	`öô
(
ây_èbÀ
[64].
ªad_q
->
d©a
);

42 
	`öô
(
ây_èbÀ
[65].
ªad_q
->
d©a
);

43 
	`outb
(
	`öb_p
(0x21)&0xE7,0x21);

44 
	}
}

53 
	$rs_wrôe
(
ây_°ru˘
 * 
ây
)

55 
	`˛i
();

56 i‡(!
	`EMPTY
(
ây
->
wrôe_q
))

57 
	`outb
(
	`öb_p
(
ây
->
wrôe_q
->
d©a
+1)|0x02,tty->write_q->data+1);

58 
	`°i
();

59 
	}
}

	@kernel/chr_drv/tty_io.c

14 
	~<˘y≥.h
>

15 
	~<î∫o.h
>

16 
	~<sig«l.h
>

17 
	~<uni°d.h
>

19 
	#ALRMMASK
 (1<<(
SIGALRM
-1))

	)

21 
	~<löux/sched.h
>

22 
	~<löux/ây.h
>

23 
	~<asm/£gmít.h
>

24 
	~<asm/sy°em.h
>

26 
kûl_pg
(
pgΩ
, 
sig
, 
¥iv
);

27 
is_‹ph™ed_pgΩ
(
pgΩ
);

29 
	#_L_FLAG
(
ây
,
f
Ë(—ty)->
ãrmios
.
c_lÊag
 & f)

	)

30 
	#_I_FLAG
(
ây
,
f
Ë(—ty)->
ãrmios
.
c_iÊag
 & f)

	)

31 
	#_O_FLAG
(
ây
,
f
Ë(—ty)->
ãrmios
.
c_oÊag
 & f)

	)

33 
	#L_CANON
(
ây
Ë
	`_L_FLAG
(—ty),
ICANON
)

	)

34 
	#L_ISIG
(
ây
Ë
	`_L_FLAG
(—ty),
ISIG
)

	)

35 
	#L_ECHO
(
ây
Ë
	`_L_FLAG
(—ty),
ECHO
)

	)

36 
	#L_ECHOE
(
ây
Ë
	`_L_FLAG
(—ty),
ECHOE
)

	)

37 
	#L_ECHOK
(
ây
Ë
	`_L_FLAG
(—ty),
ECHOK
)

	)

38 
	#L_ECHOCTL
(
ây
Ë
	`_L_FLAG
(—ty),
ECHOCTL
)

	)

39 
	#L_ECHOKE
(
ây
Ë
	`_L_FLAG
(—ty),
ECHOKE
)

	)

40 
	#L_TOSTOP
(
ây
Ë
	`_L_FLAG
(—ty),
TOSTOP
)

	)

42 
	#I_UCLC
(
ây
Ë
	`_I_FLAG
(—ty),
IUCLC
)

	)

43 
	#I_NLCR
(
ây
Ë
	`_I_FLAG
(—ty),
INLCR
)

	)

44 
	#I_CRNL
(
ây
Ë
	`_I_FLAG
(—ty),
ICRNL
)

	)

45 
	#I_NOCR
(
ây
Ë
	`_I_FLAG
(—ty),
IGNCR
)

	)

46 
	#I_IXON
(
ây
Ë
	`_I_FLAG
(—ty),
IXON
)

	)

48 
	#O_POST
(
ây
Ë
	`_O_FLAG
(—ty),
OPOST
)

	)

49 
	#O_NLCR
(
ây
Ë
	`_O_FLAG
(—ty),
ONLCR
)

	)

50 
	#O_CRNL
(
ây
Ë
	`_O_FLAG
(—ty),
OCRNL
)

	)

51 
	#O_NLRET
(
ây
Ë
	`_O_FLAG
(—ty),
ONLRET
)

	)

52 
	#O_LCUC
(
ây
Ë
	`_O_FLAG
(—ty),
OLCUC
)

	)

54 
	#C_SPEED
(
ây
Ë(—ty)->
ãrmios
.
c_cÊag
 & 
CBAUD
)

	)

55 
	#C_HUP
(
ây
Ë(
	`C_SPEED
(—ty)Ë=
B0
)

	)

57 #i‚de‡
MIN


58 
	#MIN
(
a
,
b
Ë(◊Ë< (bË? (aË: (b))

	)

61 
	#QUEUES
 (3*(
MAX_CONSOLES
+
NR_SERIALS
+2*
NR_PTYS
))

	)

62 
ây_queue
 
	gây_queues
[
QUEUES
];

63 
ây_°ru˘
 
	gây_èbÀ
[256];

65 
	#c⁄_queues
 
ây_queues


	)

66 
	#rs_queues
 ((3*
MAX_CONSOLES
Ë+ 
ây_queues
)

	)

67 
	#m±y_queues
 ((3*(
MAX_CONSOLES
+
NR_SERIALS
)Ë+ 
ây_queues
)

	)

68 
	#•ty_queues
 ((3*(
MAX_CONSOLES
+
NR_SERIALS
+
NR_PTYS
)Ë+ 
ây_queues
)

	)

70 
	#c⁄_èbÀ
 
ây_èbÀ


	)

71 
	#rs_èbÀ
 (64+
ây_èbÀ
)

	)

72 
	#m±y_èbÀ
 (128+
ây_èbÀ
)

	)

73 
	#•ty_èbÀ
 (192+
ây_èbÀ
)

	)

75 
	gfg_c⁄sﬁe
 = 0;

81 
ây_queue
 * 
	gèbÀ_li°
[]={

82 
c⁄_queues
 + 0, con_queues + 1,

83 
rs_queues
 + 0,Ñs_queues + 1,

84 
rs_queues
 + 3,Ñs_queues + 4

87 
	$ch™ge_c⁄sﬁe
(
√w_c⁄sﬁe
)

89 i‡(
√w_c⁄sﬁe
 =
fg_c⁄sﬁe
 ||Çew_c⁄sﬁê>
NR_CONSOLES
)

91 
fg_c⁄sﬁe
 = 
√w_c⁄sﬁe
;

92 
èbÀ_li°
[0] = 
c⁄_queues
 + 0 + 
fg_c⁄sﬁe
*3;

93 
èbÀ_li°
[1] = 
c⁄_queues
 + 1 + 
fg_c⁄sﬁe
*3;

94 
	`upd©e_s¸ìn
();

95 
	}
}

97 
	$¶ìp_if_em±y
(
ây_queue
 * 
queue
)

99 
	`˛i
();

100 !(
cuºít
->
sig«l
 & ~cuºít->
blocked
Ë&& 
	`EMPTY
(
queue
))

101 
	`öãºu±ibÀ_¶ìp_⁄
(&
queue
->
¥oc_li°
);

102 
	`°i
();

103 
	}
}

105 
	$¶ìp_if_fuŒ
(
ây_queue
 * 
queue
)

107 i‡(!
	`FULL
(
queue
))

109 
	`˛i
();

110 !(
cuºít
->
sig«l
 & ~cuºít->
blocked
Ë&& 
	`LEFT
(
queue
)<128)

111 
	`öãºu±ibÀ_¶ìp_⁄
(&
queue
->
¥oc_li°
);

112 
	`°i
();

113 
	}
}

115 
	$waô_f‹_key¥ess
()

117 
	`¶ìp_if_em±y
(
ây_èbÀ
[
fg_c⁄sﬁe
].
£c⁄d¨y
);

118 
	}
}

120 
	$c›y_to_cooked
(
ây_°ru˘
 * 
ây
)

122 sig√d 
c
;

124 i‡(!(
ây
->
ªad_q
 ||Åty->
wrôe_q
 ||Åty->
£c⁄d¨y
)) {

125 
	`¥ötk
("copy_to_cooked: missing queues\n\r");

129 i‡(
	`EMPTY
(
ây
->
ªad_q
))

131 i‡(
	`FULL
(
ây
->
£c⁄d¨y
))

133 
	`GETCH
(
ây
->
ªad_q
,
c
);

134 i‡(
c
==13) {

135 i‡(
	`I_CRNL
(
ây
))

136 
c
=10;

137 i‡(
	`I_NOCR
(
ây
))

139 } i‡(
c
==10 && 
	`I_NLCR
(
ây
))

140 
c
=13;

141 i‡(
	`I_UCLC
(
ây
))

142 
c
=
	`tﬁowî
(c);

143 i‡(
	`L_CANON
(
ây
)) {

144 i‡((
	`KILL_CHAR
(
ây
Ë!
_POSIX_VDISABLE
) &&

145 (
c
==
	`KILL_CHAR
(
ây
))) {

147 !(
	`EMPTY
(
ây
->
£c⁄d¨y
) ||

148 (
c
=
	`LAST
(
ây
->
£c⁄d¨y
))==10 ||

149 ((
	`EOF_CHAR
(
ây
Ë!
_POSIX_VDISABLE
) &&

150 (
c
==
	`EOF_CHAR
(
ây
))))) {

151 i‡(
	`L_ECHO
(
ây
)) {

152 i‡(
c
<32)

153 
	`PUTCH
(127,
ây
->
wrôe_q
);

154 
	`PUTCH
(127,
ây
->
wrôe_q
);

155 
ây
->
	`wrôe
(tty);

157 
	`DEC
(
ây
->
£c⁄d¨y
->
hód
);

161 i‡((
	`ERASE_CHAR
(
ây
Ë!
_POSIX_VDISABLE
) &&

162 (
c
==
	`ERASE_CHAR
(
ây
))) {

163 i‡(
	`EMPTY
(
ây
->
£c⁄d¨y
) ||

164 (
c
=
	`LAST
(
ây
->
£c⁄d¨y
))==10 ||

165 ((
	`EOF_CHAR
(
ây
Ë!
_POSIX_VDISABLE
) &&

166 (
c
==
	`EOF_CHAR
(
ây
))))

168 i‡(
	`L_ECHO
(
ây
)) {

169 i‡(
c
<32)

170 
	`PUTCH
(127,
ây
->
wrôe_q
);

171 
	`PUTCH
(127,
ây
->
wrôe_q
);

172 
ây
->
	`wrôe
(tty);

174 
	`DEC
(
ây
->
£c⁄d¨y
->
hód
);

178 i‡(
	`I_IXON
(
ây
)) {

179 i‡((
	`STOP_CHAR
(
ây
Ë!
_POSIX_VDISABLE
) &&

180 (
c
==
	`STOP_CHAR
(
ây
))) {

181 
ây
->
°›≥d
=1;

182 
ây
->
	`wrôe
(tty);

185 i‡((
	`START_CHAR
(
ây
Ë!
_POSIX_VDISABLE
) &&

186 (
c
==
	`START_CHAR
(
ây
))) {

187 
ây
->
°›≥d
=0;

188 
ây
->
	`wrôe
(tty);

192 i‡(
	`L_ISIG
(
ây
)) {

193 i‡((
	`INTR_CHAR
(
ây
Ë!
_POSIX_VDISABLE
) &&

194 (
c
==
	`INTR_CHAR
(
ây
))) {

195 
	`kûl_pg
(
ây
->
pgΩ
, 
SIGINT
, 1);

198 i‡((
	`QUIT_CHAR
(
ây
Ë!
_POSIX_VDISABLE
) &&

199 (
c
==
	`QUIT_CHAR
(
ây
))) {

200 
	`kûl_pg
(
ây
->
pgΩ
, 
SIGQUIT
, 1);

203 i‡((
	`SUSPEND_CHAR
(
ây
Ë!
_POSIX_VDISABLE
) &&

204 (
c
==
	`SUSPEND_CHAR
(
ây
))) {

205 i‡(!
	`is_‹ph™ed_pgΩ
(
ây
->
pgΩ
))

206 
	`kûl_pg
(
ây
->
pgΩ
, 
SIGTSTP
, 1);

210 i‡(
c
==10 || (
	`EOF_CHAR
(
ây
Ë!
_POSIX_VDISABLE
 &&

211 
c
==
	`EOF_CHAR
(
ây
)))

212 
ây
->
£c⁄d¨y
->
d©a
++;

213 i‡(
	`L_ECHO
(
ây
)) {

214 i‡(
c
==10) {

215 
	`PUTCH
(10,
ây
->
wrôe_q
);

216 
	`PUTCH
(13,
ây
->
wrôe_q
);

217 } i‡(
c
<32) {

218 i‡(
	`L_ECHOCTL
(
ây
)) {

219 
	`PUTCH
('^',
ây
->
wrôe_q
);

220 
	`PUTCH
(
c
+64,
ây
->
wrôe_q
);

223 
	`PUTCH
(
c
,
ây
->
wrôe_q
);

224 
ây
->
	`wrôe
(tty);

226 
	`PUTCH
(
c
,
ây
->
£c⁄d¨y
);

228 
	`wake_up
(&
ây
->
£c⁄d¨y
->
¥oc_li°
);

229 
	}
}

246 
	$ây_sig«l
(
sig
, 
ây_°ru˘
 *
ây
)

248 i‡(
	`is_‹ph™ed_pgΩ
(
cuºít
->
pgΩ
))

249  -
EIO
;

250 (Ë
	`kûl_pg
(
cuºít
->
pgΩ
,
sig
,1);

251 i‡((
cuºít
->
blocked
 & (1<<(
sig
-1))) ||

252 ((Ë
cuºít
->
siga˘i⁄
[
sig
-1].
ß_h™dÀr
 == 1))

253  -
EIO
;

254 i‡(
cuºít
->
siga˘i⁄
[
sig
-1].
ß_h™dÀr
)

255  -
EINTR
;

257  -
ERESTARTSYS
;

259 
	}
}

261 
	$ây_ªad
(
ch™√l
, * 
buf
, 
ƒ
)

263 
ây_°ru˘
 * 
ây
;

264 
ây_°ru˘
 * 
Ÿhî_ây
 = 
NULL
;

265 
c
, * 
b
=
buf
;

266 
möimum
,
time
;

268 i‡(
ch™√l
 > 255)

269  -
EIO
;

270 
ây
 = 
	`TTY_TABLE
(
ch™√l
);

271 i‡(!(
ây
->
wrôe_q
 ||Åty->
ªad_q
 ||Åty->
£c⁄d¨y
))

272  -
EIO
;

273 i‡((
cuºít
->
ây
 =
ch™√l
Ë&& (ây->
pgΩ
 != current->pgrp))

274 (
	`ây_sig«l
(
SIGTTIN
, 
ây
));

275 i‡(
ch™√l
 & 0x80)

276 
Ÿhî_ây
 = 
ây_èbÀ
 + (
ch™√l
 ^ 0x40);

277 
time
 = 10L*
ây
->
ãrmios
.
c_cc
[
VTIME
];

278 
möimum
 = 
ây
->
ãrmios
.
c_cc
[
VMIN
];

279 i‡(
	`L_CANON
(
ây
)) {

280 
möimum
 = 
ƒ
;

281 
cuºít
->
timeout
 = 0xffffffff;

282 
time
 = 0;

283 } i‡(
möimum
)

284 
cuºít
->
timeout
 = 0xffffffff;

286 
möimum
 = 
ƒ
;

287 i‡(
time
)

288 
cuºít
->
timeout
 = 
time
 + 
jiffõs
;

289 
time
 = 0;

291 i‡(
möimum
>
ƒ
)

292 
möimum
 = 
ƒ
;

293 
ƒ
>0) {

294 i‡(
Ÿhî_ây
)

295 
Ÿhî_ây
->
	`wrôe
(other_tty);

296 
	`˛i
();

297 i‡(
	`EMPTY
(
ây
->
£c⁄d¨y
Ë|| (
	`L_CANON
(tty) &&

298 !
	`FULL
(
ây
->
ªad_q
Ë&& !ây->
£c⁄d¨y
->
d©a
)) {

299 i‡(!
cuºít
->
timeout
 ||

300 (
cuºít
->
sig«l
 & ~cuºít->
blocked
)) {

301 
	`°i
();

304 i‡(
	`IS_A_PTY_SLAVE
(
ch™√l
Ë&& 
	`C_HUP
(
Ÿhî_ây
))

306 
	`öãºu±ibÀ_¶ìp_⁄
(&
ây
->
£c⁄d¨y
->
¥oc_li°
);

307 
	`°i
();

310 
	`°i
();

312 
	`GETCH
(
ây
->
£c⁄d¨y
,
c
);

313 i‡((
	`EOF_CHAR
(
ây
Ë!
_POSIX_VDISABLE
 &&

314 
c
==
	`EOF_CHAR
(
ây
)) || c==10)

315 
ây
->
£c⁄d¨y
->
d©a
--;

316 i‡((
	`EOF_CHAR
(
ây
Ë!
_POSIX_VDISABLE
 &&

317 
c
==
	`EOF_CHAR
(
ây
)Ë&& 
	`L_CANON
(tty))

320 
	`put_fs_byã
(
c
,
b
++);

321 i‡(!--
ƒ
)

324 i‡(
c
==10 && 
	`L_CANON
(
ây
))

326 } 
ƒ
>0 && !
	`EMPTY
(
ây
->
£c⁄d¨y
));

327 
	`wake_up
(&
ây
->
ªad_q
->
¥oc_li°
);

328 i‡(
time
)

329 
cuºít
->
timeout
 = 
time
+
jiffõs
;

330 i‡(
	`L_CANON
(
ây
Ë|| 
b
-
buf
 >
möimum
)

333 
cuºít
->
timeout
 = 0;

334 i‡((
cuºít
->
sig«l
 & ~cuºít->
blocked
Ë&& !(
b
-
buf
))

335  -
ERESTARTSYS
;

336  (
b
-
buf
);

337 
	}
}

339 
	$ây_wrôe
(
ch™√l
, * 
buf
, 
ƒ
)

341 
¸_Êag
=0;

342 
ây_°ru˘
 * 
ây
;

343 
c
, *
b
=
buf
;

345 i‡(
ch™√l
 > 255)

346  -
EIO
;

347 
ây
 = 
	`TTY_TABLE
(
ch™√l
);

348 i‡(!(
ây
->
wrôe_q
 ||Åty->
ªad_q
 ||Åty->
£c⁄d¨y
))

349  -
EIO
;

350 i‡(
	`L_TOSTOP
(
ây
) &&

351 (
cuºít
->
ây
 =
ch™√l
Ë&& (ây->
pgΩ
 != current->pgrp))

352 (
	`ây_sig«l
(
SIGTTOU
, 
ây
));

353 
ƒ
>0) {

354 
	`¶ìp_if_fuŒ
(
ây
->
wrôe_q
);

355 i‡(
cuºít
->
sig«l
 & ~cuºít->
blocked
)

357 
ƒ
>0 && !
	`FULL
(
ây
->
wrôe_q
)) {

358 
c
=
	`gë_fs_byã
(
b
);

359 i‡(
	`O_POST
(
ây
)) {

360 i‡(
c
=='\r' && 
	`O_CRNL
(
ây
))

361 
c
='\n';

362 i‡(
c
=='\n' && 
	`O_NLRET
(
ây
))

363 
c
='\r';

364 i‡(
c
=='\n' && !
¸_Êag
 && 
	`O_NLCR
(
ây
)) {

365 
¸_Êag
 = 1;

366 
	`PUTCH
(13,
ây
->
wrôe_q
);

369 i‡(
	`O_LCUC
(
ây
))

370 
c
=
	`touµî
(c);

372 
b
++; 
ƒ
--;

373 
¸_Êag
 = 0;

374 
	`PUTCH
(
c
,
ây
->
wrôe_q
);

376 
ây
->
	`wrôe
(tty);

377 i‡(
ƒ
>0)

378 
	`scheduÀ
();

380  (
b
-
buf
);

381 
	}
}

397 
	$do_ây_öãºu±
(
ây
)

399 
	`c›y_to_cooked
(
	`TTY_TABLE
(
ây
));

400 
	}
}

402 
	$chr_dev_öô
()

404 
	}
}

406 
	$ây_öô
()

408 
i
;

410 
i
=0 ; i < 
QUEUES
 ; i++)

411 
ây_queues
[
i
] = (
ây_queue
) {0,0,0,0,""};

412 
rs_queues
[0] = (
ây_queue
) {0x3f8,0,0,0,""};

413 
rs_queues
[1] = (
ây_queue
) {0x3f8,0,0,0,""};

414 
rs_queues
[3] = (
ây_queue
) {0x2f8,0,0,0,""};

415 
rs_queues
[4] = (
ây_queue
) {0x2f8,0,0,0,""};

416 
i
=0 ; i<256 ; i++) {

417 
ây_èbÀ
[
i
] = (
ây_°ru˘
) {

418 {0, 0, 0, 0, 0, 
INIT_C_CC
},

419 0, 0, 0, 
NULL
, NULL, NULL, NULL

422 
	`c⁄_öô
();

423 
i
 = 0 ; i<
NR_CONSOLES
 ; i++) {

424 
c⁄_èbÀ
[
i
] = (
ây_°ru˘
) {

425 {
ICRNL
,

426 
OPOST
|
ONLCR
,

428 
IXON
 | 
ISIG
 | 
ICANON
 | 
ECHO
 | 
ECHOCTL
 | 
ECHOKE
,

430 
INIT_C_CC
},

434 
c⁄_wrôe
,

435 
c⁄_queues
+0+
i
*3,con_queues+1+i*3,con_queues+2+i*3

438 
i
 = 0 ; i<
NR_SERIALS
 ; i++) {

439 
rs_èbÀ
[
i
] = (
ây_°ru˘
) {

442 
B2400
 | 
CS8
,

445 
INIT_C_CC
},

449 
rs_wrôe
,

450 
rs_queues
+0+
i
*3,rs_queues+1+i*3,rs_queues+2+i*3

453 
i
 = 0 ; i<
NR_PTYS
 ; i++) {

454 
m±y_èbÀ
[
i
] = (
ây_°ru˘
) {

457 
B9600
 | 
CS8
,

460 
INIT_C_CC
},

464 
m±y_wrôe
,

465 
m±y_queues
+0+
i
*3,mpty_queues+1+i*3,mpty_queues+2+i*3

467 
•ty_èbÀ
[
i
] = (
ây_°ru˘
) {

470 
B9600
 | 
CS8
,

471 
IXON
 | 
ISIG
 | 
ICANON
,

473 
INIT_C_CC
},

477 
•ty_wrôe
,

478 
•ty_queues
+0+
i
*3,spty_queues+1+i*3,spty_queues+2+i*3

481 
	`rs_öô
();

482 
	`¥ötk
("%d vútuÆ c⁄sﬁes\n\r",
NR_CONSOLES
);

483 
	`¥ötk
("%dÖty's\n\r",
NR_PTYS
);

484 
	}
}

	@kernel/chr_drv/tty_ioctl.c

7 
	~<î∫o.h
>

8 
	~<ãrmios.h
>

10 
	~<löux/sched.h
>

11 
	~<löux/kî√l.h
>

12 
	~<löux/ây.h
>

14 
	~<asm/io.h
>

15 
	~<asm/£gmít.h
>

16 
	~<asm/sy°em.h
>

18 
£ssi⁄_of_pgΩ
(
pgΩ
);

19 
ây_sig«l
(
sig
, 
ây_°ru˘
 *
ây
);

21 
	gquŸõ¡
[] = {

27 
	$ch™ge_•ìd
(
ây_°ru˘
 * 
ây
)

29 
p‹t
,
quŸ
;

31 i‡(!(
p‹t
 = 
ây
->
ªad_q
->
d©a
))

33 
quŸ
 = 
quŸõ¡
[
ây
->
ãrmios
.
c_cÊag
 & 
CBAUD
];

34 
	`˛i
();

35 
	`outb_p
(0x80,
p‹t
+3);

36 
	`outb_p
(
quŸ
 & 0xff,
p‹t
);

37 
	`outb_p
(
quŸ
 >> 8,
p‹t
+1);

38 
	`outb
(0x03,
p‹t
+3);

39 
	`°i
();

40 
	}
}

42 
	$Êush
(
ây_queue
 * 
queue
)

44 
	`˛i
();

45 
queue
->
hód
 = queue->
èû
;

46 
	`°i
();

47 
	}
}

49 
	$waô_u¡û_£¡
(
ây_°ru˘
 * 
ây
)

52 
	}
}

54 
	$£nd_bªak
(
ây_°ru˘
 * 
ây
)

57 
	}
}

59 
	$gë_ãrmios
(
ây_°ru˘
 * 
ây
, 
ãrmios
 *Åermios)

61 
i
;

63 
	`vîify_¨ó
(
ãrmios
,  (*termios));

64 
i
=0 ; i< ( (*
ãrmios
)) ; i++)

65 
	`put_fs_byã
–((*)&
ây
->
ãrmios
)[
i
] , i+(*)termios );

67 
	}
}

69 
	$£t_ãrmios
(
ây_°ru˘
 * 
ây
, 
ãrmios
 *Åermios,

70 
ch™√l
)

72 
i
, 
ªtsig
;

77 i‡((
cuºít
->
ây
 =
ch™√l
Ë&& (ây->
pgΩ
 != current->pgrp)) {

78 
ªtsig
 = 
	`ây_sig«l
(
SIGTTOU
, 
ây
);

79 i‡(
ªtsig
 =-
ERESTARTSYS
 ||Ñësig =-
EINTR
)

80  
ªtsig
;

82 
i
=0 ; i< ( (*
ãrmios
)) ; i++)

83 ((*)&
ây
->
ãrmios
)[
i
]=
	`gë_fs_byã
(i+(*)termios);

84 
	`ch™ge_•ìd
(
ây
);

86 
	}
}

88 
	$gë_ãrmio
(
ây_°ru˘
 * 
ây
, 
ãrmio
 *Åermio)

90 
i
;

91 
ãrmio
 
tmp_ãrmio
;

93 
	`vîify_¨ó
(
ãrmio
,  (*termio));

94 
tmp_ãrmio
.
c_iÊag
 = 
ây
->
ãrmios
.c_iflag;

95 
tmp_ãrmio
.
c_oÊag
 = 
ây
->
ãrmios
.c_oflag;

96 
tmp_ãrmio
.
c_cÊag
 = 
ây
->
ãrmios
.c_cflag;

97 
tmp_ãrmio
.
c_lÊag
 = 
ây
->
ãrmios
.c_lflag;

98 
tmp_ãrmio
.
c_löe
 = 
ây
->
ãrmios
.c_line;

99 
i
=0 ; i < 
NCC
 ; i++)

100 
tmp_ãrmio
.
c_cc
[
i
] = 
ây
->
ãrmios
.c_cc[i];

101 
i
=0 ; i< ( (*
ãrmio
)) ; i++)

102 
	`put_fs_byã
–((*)&
tmp_ãrmio
)[
i
] , i+(*)
ãrmio
 );

104 
	}
}

109 
	$£t_ãrmio
(
ây_°ru˘
 * 
ây
, 
ãrmio
 *Åermio,

110 
ch™√l
)

112 
i
, 
ªtsig
;

113 
ãrmio
 
tmp_ãrmio
;

115 i‡((
cuºít
->
ây
 =
ch™√l
Ë&& (ây->
pgΩ
 != current->pgrp)) {

116 
ªtsig
 = 
	`ây_sig«l
(
SIGTTOU
, 
ây
);

117 i‡(
ªtsig
 =-
ERESTARTSYS
 ||Ñësig =-
EINTR
)

118  
ªtsig
;

120 
i
=0 ; i< ( (*
ãrmio
)) ; i++)

121 ((*)&
tmp_ãrmio
)[
i
]=
	`gë_fs_byã
(i+(*)
ãrmio
);

122 *(*)&
ây
->
ãrmios
.
c_iÊag
 = 
tmp_ãrmio
.c_iflag;

123 *(*)&
ây
->
ãrmios
.
c_oÊag
 = 
tmp_ãrmio
.c_oflag;

124 *(*)&
ây
->
ãrmios
.
c_cÊag
 = 
tmp_ãrmio
.c_cflag;

125 *(*)&
ây
->
ãrmios
.
c_lÊag
 = 
tmp_ãrmio
.c_lflag;

126 
ây
->
ãrmios
.
c_löe
 = 
tmp_ãrmio
.c_line;

127 
i
=0 ; i < 
NCC
 ; i++)

128 
ây
->
ãrmios
.
c_cc
[
i
] = 
tmp_ãrmio
.c_cc[i];

129 
	`ch™ge_•ìd
(
ây
);

131 
	}
}

133 
	$ây_io˘l
(
dev
, 
cmd
, 
¨g
)

135 
ây_°ru˘
 * 
ây
;

136 
pgΩ
;

138 i‡(
	`MAJOR
(
dev
) == 5) {

139 
dev
=
cuºít
->
ây
;

140 i‡(
dev
<0)

141 
	`∑nic
("tty_ioctl: dev<0");

143 
dev
=
	`MINOR
(dev);

144 
ây
 = 
ây_èbÀ
 + (
dev
 ? ((dev < 64)? dev-1:devË: 
fg_c⁄sﬁe
);

145 
cmd
) {

146 
TCGETS
:

147  
	`gë_ãrmios
(
ây
,(
ãrmios
 *Ë
¨g
);

148 
TCSETSF
:

149 
	`Êush
(
ây
->
ªad_q
);

150 
TCSETSW
:

151 
	`waô_u¡û_£¡
(
ây
);

152 
TCSETS
:

153  
	`£t_ãrmios
(
ây
,(
ãrmios
 *Ë
¨g
, 
dev
);

154 
TCGETA
:

155  
	`gë_ãrmio
(
ây
,(
ãrmio
 *Ë
¨g
);

156 
TCSETAF
:

157 
	`Êush
(
ây
->
ªad_q
);

158 
TCSETAW
:

159 
	`waô_u¡û_£¡
(
ây
);

160 
TCSETA
:

161  
	`£t_ãrmio
(
ây
,(
ãrmio
 *Ë
¨g
, 
dev
);

162 
TCSBRK
:

163 i‡(!
¨g
) {

164 
	`waô_u¡û_£¡
(
ây
);

165 
	`£nd_bªak
(
ây
);

168 
TCXONC
:

169 
¨g
) {

170 
TCOOFF
:

171 
ây
->
°›≥d
 = 1;

172 
ây
->
	`wrôe
(tty);

174 
TCOON
:

175 
ây
->
°›≥d
 = 0;

176 
ây
->
	`wrôe
(tty);

178 
TCIOFF
:

179 i‡(
	`STOP_CHAR
(
ây
))

180 
	`PUTCH
(
	`STOP_CHAR
(
ây
),ây->
wrôe_q
);

182 
TCION
:

183 i‡(
	`START_CHAR
(
ây
))

184 
	`PUTCH
(
	`START_CHAR
(
ây
),ây->
wrôe_q
);

187  -
EINVAL
;

188 
TCFLSH
:

189 i‡(
¨g
==0)

190 
	`Êush
(
ây
->
ªad_q
);

191 i‡(
¨g
==1)

192 
	`Êush
(
ây
->
wrôe_q
);

193 i‡(
¨g
==2) {

194 
	`Êush
(
ây
->
ªad_q
);

195 
	`Êush
(
ây
->
wrôe_q
);

197  -
EINVAL
;

199 
TIOCEXCL
:

200  -
EINVAL
;

201 
TIOCNXCL
:

202  -
EINVAL
;

203 
TIOCSCTTY
:

204  -
EINVAL
;

205 
TIOCGPGRP
:

206 
	`vîify_¨ó
((*Ë
¨g
,4);

207 
	`put_fs_l⁄g
(
ây
->
pgΩ
,(*Ë
¨g
);

209 
TIOCSPGRP
:

210 i‡((
cuºít
->
ây
 < 0) ||

211 (
cuºít
->
ây
 !
dev
) ||

212 (
ây
->
£ssi⁄
 !
cuºít
->session))

213  -
ENOTTY
;

214 
pgΩ
=
	`gë_fs_l⁄g
((*Ë
¨g
);

215 i‡(
pgΩ
 < 0)

216  -
EINVAL
;

217 i‡(
	`£ssi⁄_of_pgΩ
(
pgΩ
Ë!
cuºít
->
£ssi⁄
)

218  -
EPERM
;

219 
ây
->
pgΩ
 =Ögrp;

221 
TIOCOUTQ
:

222 
	`vîify_¨ó
((*Ë
¨g
,4);

223 
	`put_fs_l⁄g
(
	`CHARS
(
ây
->
wrôe_q
),(*Ë
¨g
);

225 
TIOCINQ
:

226 
	`vîify_¨ó
((*Ë
¨g
,4);

227 
	`put_fs_l⁄g
(
	`CHARS
(
ây
->
£c⁄d¨y
),

228 (*Ë
¨g
);

230 
TIOCSTI
:

231  -
EINVAL
;

232 
TIOCGWINSZ
:

233  -
EINVAL
;

234 
TIOCSWINSZ
:

235  -
EINVAL
;

236 
TIOCMGET
:

237  -
EINVAL
;

238 
TIOCMBIS
:

239  -
EINVAL
;

240 
TIOCMBIC
:

241  -
EINVAL
;

242 
TIOCMSET
:

243  -
EINVAL
;

244 
TIOCGSOFTCAR
:

245  -
EINVAL
;

246 
TIOCSSOFTCAR
:

247  -
EINVAL
;

249  -
EINVAL
;

251 
	}
}

	@kernel/exit.c

7 
	#DEBUG_PROC_TREE


	)

9 
	~<î∫o.h
>

10 
	~<sig«l.h
>

11 
	~<sys/waô.h
>

13 
	~<löux/sched.h
>

14 
	~<löux/kî√l.h
>

15 
	~<löux/ây.h
>

16 
	~<asm/£gmít.h
>

18 
sys_∑u£
();

19 
sys_˛o£
(
fd
);

21 
	$ªÀa£
(
èsk_°ru˘
 * 
p
)

23 
i
;

25 i‡(!
p
)

27 i‡(
p
 =
cuºít
) {

28 
	`¥ötk
("taskÑeleasing itself\n\r");

31 
i
=1 ; i<
NR_TASKS
 ; i++)

32 i‡(
èsk
[
i
]==
p
) {

33 
èsk
[
i
]=
NULL
;

35 i‡(
p
->
p_o•å
)

36 
p
->
p_o•å
->
p_y•å
 =Ö->p_ysptr;

37 i‡(
p
->
p_y•å
)

38 
p
->
p_y•å
->
p_o•å
 =Ö->p_osptr;

40 
p
->
p_µå
->
p_˝å
 =Ö->
p_o•å
;

41 
	`‰ì_∑ge
(()
p
);

42 
	`scheduÀ
();

45 
	`∑nic
("tryingÅoÑeleaseÇon-existentÅask");

46 
	}
}

48 #ifde‡
DEBUG_PROC_TREE


53 
	$bad_èsk_±r
(
èsk_°ru˘
 *
p
)

55 
i
;

57 i‡(!
p
)

59 
i
=0 ; i<
NR_TASKS
 ; i++)

60 i‡(
èsk
[
i
] =
p
)

63 
	}
}

74 
	$audô_±ªe
()

76 
i
;

78 
i
=1 ; i<
NR_TASKS
 ; i++) {

79 i‡(!
èsk
[
i
])

81 i‡(
	`bad_èsk_±r
(
èsk
[
i
]->
p_µå
))

82 
	`¥ötk
("Warning,Öid %d'sÖarentÜink is bad\n",

83 
èsk
[
i
]->
pid
);

84 i‡(
	`bad_èsk_±r
(
èsk
[
i
]->
p_˝å
))

85 
	`¥ötk
("Warning,Öid %d's childÜink is bad\n",

86 
èsk
[
i
]->
pid
);

87 i‡(
	`bad_èsk_±r
(
èsk
[
i
]->
p_y•å
))

88 
	`¥ötk
("Warning,Öid %d's ysÜink is bad\n",

89 
èsk
[
i
]->
pid
);

90 i‡(
	`bad_èsk_±r
(
èsk
[
i
]->
p_o•å
))

91 
	`¥ötk
("Warning,Öid %d's osÜink is bad\n",

92 
èsk
[
i
]->
pid
);

93 i‡(
èsk
[
i
]->
p_µå
 ==Åask[i])

94 
	`¥ötk
("Warning,Öid %dÖarentÜinkÖointsÅo self\n");

95 i‡(
èsk
[
i
]->
p_˝å
 ==Åask[i])

96 
	`¥ötk
("Warning,Öid %d childÜinkÖointsÅo self\n");

97 i‡(
èsk
[
i
]->
p_y•å
 ==Åask[i])

98 
	`¥ötk
("Warning,Öid %d ysÜinkÖointsÅo self\n");

99 i‡(
èsk
[
i
]->
p_o•å
 ==Åask[i])

100 
	`¥ötk
("Warning,Öid %d osÜinkÖointsÅo self\n");

101 i‡(
èsk
[
i
]->
p_o•å
) {

102 i‡(
èsk
[
i
]->
p_µå
 !èsk[i]->
p_o•å
->p_pptr)

103 
	`¥ötk
(

105 
èsk
[
i
]->
pid
,Åask[i]->
p_o•å
->pid,

106 
èsk
[
i
]->
p_o•å
->
p_µå
->
pid
);

107 i‡(
èsk
[
i
]->
p_o•å
->
p_y•å
 !=Åask[i])

108 
	`¥ötk
(

110 
èsk
[
i
]->
pid
,Åask[i]->
p_o•å
->pid);

112 i‡(
èsk
[
i
]->
p_y•å
) {

113 i‡(
èsk
[
i
]->
p_µå
 !èsk[i]->
p_y•å
->p_pptr)

114 
	`¥ötk
(

116 
èsk
[
i
]->
pid
,Åask[i]->
p_o•å
->pid,

117 
èsk
[
i
]->
p_o•å
->
p_µå
->
pid
);

118 i‡(
èsk
[
i
]->
p_y•å
->
p_o•å
 !=Åask[i])

119 
	`¥ötk
(

121 
èsk
[
i
]->
pid
,Åask[i]->
p_y•å
->pid);

123 i‡(
èsk
[
i
]->
p_˝å
) {

124 i‡(
èsk
[
i
]->
p_˝å
->
p_µå
 !=Åask[i])

125 
	`¥ötk
(

127 
èsk
[
i
]->
pid
,Åask[i]->
p_˝å
->pid);

128 i‡(
èsk
[
i
]->
p_˝å
->
p_y•å
)

129 
	`¥ötk
(

131 
èsk
[
i
]->
pid
,Åask[i]->
p_˝å
->pid);

134 
	}
}

137 
ölöe
 
	$£nd_sig
(
sig
,
èsk_°ru˘
 * 
p
,
¥iv
)

139 i‡(!
p
)

140  -
EINVAL
;

141 i‡(!
¥iv
 && (
cuºít
->
euid
!=
p
->euidË&& !
	`su£r
())

142  -
EPERM
;

143 i‡((
sig
 =
SIGKILL
Ë|| (sig =
SIGCONT
)) {

144 i‡(
p
->
°©e
 =
TASK_STOPPED
)

145 
p
->
°©e
 = 
TASK_RUNNING
;

146 
p
->
exô_code
 = 0;

147 
p
->
sig«l
 &~–(1<<(
SIGSTOP
-1)Ë| (1<<(
SIGTSTP
-1)) |

148 (1<<(
SIGTTIN
-1)Ë| (1<<(
SIGTTOU
-1)) );

151 i‡((Ë
p
->
siga˘i⁄
[
sig
-1].
ß_h™dÀr
 == 1)

154 i‡((
sig
 >
SIGSTOP
Ë&& (sig <
SIGTTOU
))

155 
p
->
sig«l
 &~(1<<(
SIGCONT
-1));

157 
p
->
sig«l
 |(1<<(
sig
-1));

159 
	}
}

161 
	$£ssi⁄_of_pgΩ
(
pgΩ
)

163 
èsk_°ru˘
 **
p
;

165 
p
 = &
LAST_TASK
 ;Ö > &
FIRST_TASK
 ; --p)

166 i‡((*
p
)->
pgΩ
 ==Ögrp)

167 ((*
p
)->
£ssi⁄
);

169 
	}
}

171 
	$kûl_pg
(
pgΩ
, 
sig
, 
¥iv
)

173 
èsk_°ru˘
 **
p
;

174 
îr
,
ªtvÆ
 = -
ESRCH
;

175 
found
 = 0;

177 i‡(
sig
<1 || sig>32 || 
pgΩ
<=0)

178  -
EINVAL
;

179 
p
 = &
LAST_TASK
 ;Ö > &
FIRST_TASK
 ; --p)

180 i‡((*
p
)->
pgΩ
 ==Ögrp) {

181 i‡(
sig
 && (
îr
 = 
	`£nd_sig
(sig,*
p
,
¥iv
)))

182 
ªtvÆ
 = 
îr
;

184 
found
++;

186 (
found
 ? 0 : 
ªtvÆ
);

187 
	}
}

189 
	$kûl_¥oc
(
pid
, 
sig
, 
¥iv
)

191 
èsk_°ru˘
 **
p
;

193 i‡(
sig
<1 || sig>32)

194  -
EINVAL
;

195 
p
 = &
LAST_TASK
 ;Ö > &
FIRST_TASK
 ; --p)

196 i‡((*
p
)->
pid
 ==Öid)

197 (
sig
 ? 
	`£nd_sig
(sig,*
p
,
¥iv
) : 0);

198 (-
ESRCH
);

199 
	}
}

205 
	$sys_kûl
(
pid
,
sig
)

207 
èsk_°ru˘
 **
p
 = 
NR_TASKS
 + 
èsk
;

208 
îr
, 
ªtvÆ
 = 0;

210 i‡(!
pid
)

211 (
	`kûl_pg
(
cuºít
->
pid
,
sig
,0));

212 i‡(
pid
 == -1) {

213 --
p
 > &
FIRST_TASK
)

214 i‡(
îr
 = 
	`£nd_sig
(
sig
,*
p
,0))

215 
ªtvÆ
 = 
îr
;

216 (
ªtvÆ
);

218 i‡(
pid
 < 0)

219 (
	`kûl_pg
(-
pid
,
sig
,0));

221 (
	`kûl_¥oc
(
pid
,
sig
,0));

222 
	}
}

232 
	$is_‹ph™ed_pgΩ
(
pgΩ
)

234 
èsk_°ru˘
 **
p
;

236 
p
 = &
LAST_TASK
 ;Ö > &
FIRST_TASK
 ; --p) {

237 i‡(!(*
p
) ||

238 ((*
p
)->
pgΩ
 !=Ögrp) ||

239 ((*
p
)->
°©e
 =
TASK_ZOMBIE
) ||

240 ((*
p
)->
p_µå
->
pid
 == 1))

242 i‡(((*
p
)->
p_µå
->
pgΩ
 !=Ögrp) &&

243 ((*
p
)->
p_µå
->
£ssi⁄
 == (*p)->session))

247 
	}
}

249 
	$has_°›≥d_jobs
(
pgΩ
)

251 
èsk_°ru˘
 ** 
p
;

253 
p
 = &
LAST_TASK
 ;Ö > &
FIRST_TASK
 ; --p) {

254 i‡((*
p
)->
pgΩ
 !=Ögrp)

256 i‡((*
p
)->
°©e
 =
TASK_STOPPED
)

260 
	}
}

262 vﬁ©ûê
	$do_exô
(
code
)

264 
èsk_°ru˘
 *
p
;

265 
i
;

267 
	`‰ì_∑ge_èbÀs
(
	`gë_ba£
(
cuºít
->
ldt
[1]),
	`gë_limô
(0x0f));

268 
	`‰ì_∑ge_èbÀs
(
	`gë_ba£
(
cuºít
->
ldt
[2]),
	`gë_limô
(0x17));

269 
i
=0 ; i<
NR_OPEN
 ; i++)

270 i‡(
cuºít
->
fûp
[
i
])

271 
	`sys_˛o£
(
i
);

272 
	`ùut
(
cuºít
->
pwd
);

273 
cuºít
->
pwd
 = 
NULL
;

274 
	`ùut
(
cuºít
->
roŸ
);

275 
cuºít
->
roŸ
 = 
NULL
;

276 
	`ùut
(
cuºít
->
execuèbÀ
);

277 
cuºít
->
execuèbÀ
 = 
NULL
;

278 
	`ùut
(
cuºít
->
libøry
);

279 
cuºít
->
libøry
 = 
NULL
;

280 
cuºít
->
°©e
 = 
TASK_ZOMBIE
;

281 
cuºít
->
exô_code
 = 
code
;

291 i‡((
cuºít
->
p_µå
->
pgΩ
 != current->pgrp) &&

292 (
cuºít
->
p_µå
->
£ssi⁄
 == current->session) &&

293 
	`is_‹ph™ed_pgΩ
(
cuºít
->
pgΩ
) &&

294 
	`has_°›≥d_jobs
(
cuºít
->
pgΩ
)) {

295 
	`kûl_pg
(
cuºít
->
pgΩ
,
SIGHUP
,1);

296 
	`kûl_pg
(
cuºít
->
pgΩ
,
SIGCONT
,1);

299 
cuºít
->
p_µå
->
sig«l
 |(1<<(
SIGCHLD
-1));

309 i‡(
p
 = 
cuºít
->
p_˝å
) {

311 
p
->
p_µå
 = 
èsk
[1];

312 i‡(
p
->
°©e
 =
TASK_ZOMBIE
)

313 
èsk
[1]->
sig«l
 |(1<<(
SIGCHLD
-1));

320 i‡((
p
->
pgΩ
 !
cuºít
->pgrp) &&

321 (
p
->
£ssi⁄
 =
cuºít
->session) &&

322 
	`is_‹ph™ed_pgΩ
(
p
->
pgΩ
) &&

323 
	`has_°›≥d_jobs
(
p
->
pgΩ
)) {

324 
	`kûl_pg
(
p
->
pgΩ
,
SIGHUP
,1);

325 
	`kûl_pg
(
p
->
pgΩ
,
SIGCONT
,1);

327 i‡(
p
->
p_o•å
) {

328 
p
 =Ö->
p_o•å
;

335 
p
->
p_o•å
 = 
èsk
[1]->
p_˝å
;

336 
èsk
[1]->
p_˝å
->
p_y•å
 = 
p
;

337 
èsk
[1]->
p_˝å
 = 
cuºít
->p_cptr;

338 
cuºít
->
p_˝å
 = 0;

342 i‡(
cuºít
->
Àadî
) {

343 
èsk_°ru˘
 **
p
;

344 
ây_°ru˘
 *
ây
;

346 i‡(
cuºít
->
ây
 >= 0) {

347 
ây
 = 
	`TTY_TABLE
(
cuºít
->tty);

348 i‡(
ây
->
pgΩ
>0)

349 
	`kûl_pg
(
ây
->
pgΩ
, 
SIGHUP
, 1);

350 
ây
->
pgΩ
 = 0;

351 
ây
->
£ssi⁄
 = 0;

353 
p
 = &
LAST_TASK
 ;Ö > &
FIRST_TASK
 ; --p)

354 i‡((*
p
)->
£ssi⁄
 =
cuºít
->session)

355 (*
p
)->
ây
 = -1;

357 i‡(
œ°_èsk_u£d_m©h
 =
cuºít
)

358 
œ°_èsk_u£d_m©h
 = 
NULL
;

359 #ifde‡
DEBUG_PROC_TREE


360 
	`audô_±ªe
();

362 
	`scheduÀ
();

363 
	}
}

365 
	$sys_exô
(
îr‹_code
)

367 
	`do_exô
((
îr‹_code
&0xff)<<8);

368 
	}
}

370 
	$sys_waôpid
(
pid_t
 
pid
,* 
°©_addr
, 
›ti⁄s
)

372 
Êag
;

373 
èsk_°ru˘
 *
p
;

374 
ﬁdblocked
;

376 
	`vîify_¨ó
(
°©_addr
,4);

377 
ª≥©
:

378 
Êag
=0;

379 
p
 = 
cuºít
->
p_˝å
 ;Ö ;Ö =Ö->
p_o•å
) {

380 i‡(
pid
>0) {

381 i‡(
p
->
pid
 !=Öid)

383 } i‡(!
pid
) {

384 i‡(
p
->
pgΩ
 !
cuºít
->pgrp)

386 } i‡(
pid
 != -1) {

387 i‡(
p
->
pgΩ
 !-
pid
)

390 
p
->
°©e
) {

391 
TASK_STOPPED
:

392 i‡(!(
›ti⁄s
 & 
WUNTRACED
) ||

393 !
p
->
exô_code
)

395 
	`put_fs_l⁄g
((
p
->
exô_code
 << 8) | 0x7f,

396 
°©_addr
);

397 
p
->
exô_code
 = 0;

398  
p
->
pid
;

399 
TASK_ZOMBIE
:

400 
cuºít
->
cutime
 +
p
->
utime
;

401 
cuºít
->
c°ime
 +
p
->
°ime
;

402 
Êag
 = 
p
->
pid
;

403 
	`put_fs_l⁄g
(
p
->
exô_code
, 
°©_addr
);

404 
	`ªÀa£
(
p
);

405 #ifde‡
DEBUG_PROC_TREE


406 
	`audô_±ªe
();

408  
Êag
;

410 
Êag
=1;

414 i‡(
Êag
) {

415 i‡(
›ti⁄s
 & 
WNOHANG
)

417 
cuºít
->
°©e
=
TASK_INTERRUPTIBLE
;

418 
ﬁdblocked
 = 
cuºít
->
blocked
;

419 
cuºít
->
blocked
 &~(1<<(
SIGCHLD
-1));

420 
	`scheduÀ
();

421 
cuºít
->
blocked
 = 
ﬁdblocked
;

422 i‡(
cuºít
->
sig«l
 & ~(cuºít->
blocked
 | (1<<(
SIGCHLD
-1))))

423  -
ERESTARTSYS
;

425 
ª≥©
;

427  -
ECHILD
;

428 
	}
}

	@kernel/fork.c

13 
	~<î∫o.h
>

15 
	~<löux/sched.h
>

16 
	~<löux/kî√l.h
>

17 
	~<asm/£gmít.h
>

18 
	~<asm/sy°em.h
>

20 
wrôe_vîify
(
addªss
);

22 
	gœ°_pid
=0;

24 
	$vîify_¨ó
(* 
addr
,
size
)

26 
°¨t
;

28 
°¨t
 = (Ë
addr
;

29 
size
 +
°¨t
 & 0xfff;

30 
°¨t
 &= 0xfffff000;

31 
°¨t
 +
	`gë_ba£
(
cuºít
->
ldt
[2]);

32 
size
>0) {

33 
size
 -= 4096;

34 
	`wrôe_vîify
(
°¨t
);

35 
°¨t
 += 4096;

37 
	}
}

39 
	$c›y_mem
(
ƒ
,
èsk_°ru˘
 * 
p
)

41 
ﬁd_d©a_ba£
,
√w_d©a_ba£
,
d©a_limô
;

42 
ﬁd_code_ba£
,
√w_code_ba£
,
code_limô
;

44 
code_limô
=
	`gë_limô
(0x0f);

45 
d©a_limô
=
	`gë_limô
(0x17);

46 
ﬁd_code_ba£
 = 
	`gë_ba£
(
cuºít
->
ldt
[1]);

47 
ﬁd_d©a_ba£
 = 
	`gë_ba£
(
cuºít
->
ldt
[2]);

48 i‡(
ﬁd_d©a_ba£
 !
ﬁd_code_ba£
)

49 
	`∑nic
("We don't support separate I&D");

50 i‡(
d©a_limô
 < 
code_limô
)

51 
	`∑nic
("Bad data_limit");

52 
√w_d©a_ba£
 = 
√w_code_ba£
 = 
ƒ
 * 
TASK_SIZE
;

53 
p
->
°¨t_code
 = 
√w_code_ba£
;

54 
	`£t_ba£
(
p
->
ldt
[1],
√w_code_ba£
);

55 
	`£t_ba£
(
p
->
ldt
[2],
√w_d©a_ba£
);

56 i‡(
	`c›y_∑ge_èbÀs
(
ﬁd_d©a_ba£
,
√w_d©a_ba£
,
d©a_limô
)) {

57 
	`‰ì_∑ge_èbÀs
(
√w_d©a_ba£
,
d©a_limô
);

58  -
ENOMEM
;

61 
	}
}

68 
	$c›y_¥o˚ss
(
ƒ
,
ebp
,
edi
,
esi
,
gs
,
n⁄e
,

69 
ebx
,
ecx
,
edx
, 
‹ig_óx
,

70 
fs
,
es
,
ds
,

71 
eù
,
cs
,
eÊags
,
e•
,
ss
)

73 
èsk_°ru˘
 *
p
;

74 
i
;

75 
fûe
 *
f
;

77 
p
 = (
èsk_°ru˘
 *Ë
	`gë_‰ì_∑ge
();

78 i‡(!
p
)

79  -
EAGAIN
;

80 
èsk
[
ƒ
] = 
p
;

81 *
p
 = *
cuºít
;

82 
p
->
°©e
 = 
TASK_UNINTERRUPTIBLE
;

83 
p
->
pid
 = 
œ°_pid
;

84 
p
->
cou¡î
 =Ö->
¥i‹ôy
;

85 
p
->
sig«l
 = 0;

86 
p
->
Æ¨m
 = 0;

87 
p
->
Àadî
 = 0;

88 
p
->
utime
 =Ö->
°ime
 = 0;

89 
p
->
cutime
 =Ö->
c°ime
 = 0;

90 
p
->
°¨t_time
 = 
jiffõs
;

91 
p
->
tss
.
back_lök
 = 0;

92 
p
->
tss
.
e•0
 = 
PAGE_SIZE
 + ()Ö;

93 
p
->
tss
.
ss0
 = 0x10;

94 
p
->
tss
.
eù
 =Éip;

95 
p
->
tss
.
eÊags
 =Éflags;

96 
p
->
tss
.
óx
 = 0;

97 
p
->
tss
.
ecx
 =Écx;

98 
p
->
tss
.
edx
 =Édx;

99 
p
->
tss
.
ebx
 =Ébx;

100 
p
->
tss
.
e•
 =Ésp;

101 
p
->
tss
.
ebp
 =Ébp;

102 
p
->
tss
.
esi
 =Ési;

103 
p
->
tss
.
edi
 =Édi;

104 
p
->
tss
.
es
 =És & 0xffff;

105 
p
->
tss
.
cs
 = cs & 0xffff;

106 
p
->
tss
.
ss
 = ss & 0xffff;

107 
p
->
tss
.
ds
 = ds & 0xffff;

108 
p
->
tss
.
fs
 = fs & 0xffff;

109 
p
->
tss
.
gs
 = gs & 0xffff;

110 
p
->
tss
.
ldt
 = 
	`_LDT
(
ƒ
);

111 
p
->
tss
.
åa˚_bôm≠
 = 0x80000000;

112 i‡(
œ°_èsk_u£d_m©h
 =
cuºít
)

113 
	`__asm__
("˛t†; fnßvê%0 ; fr°‹ %0"::"m" (
p
->
tss
.
i387
));

114 i‡(
	`c›y_mem
(
ƒ
,
p
)) {

115 
èsk
[
ƒ
] = 
NULL
;

116 
	`‰ì_∑ge
((Ë
p
);

117  -
EAGAIN
;

119 
i
=0; i<
NR_OPEN
;i++)

120 i‡(
f
=
p
->
fûp
[
i
])

121 
f
->
f_cou¡
++;

122 i‡(
cuºít
->
pwd
)

123 
cuºít
->
pwd
->
i_cou¡
++;

124 i‡(
cuºít
->
roŸ
)

125 
cuºít
->
roŸ
->
i_cou¡
++;

126 i‡(
cuºít
->
execuèbÀ
)

127 
cuºít
->
execuèbÀ
->
i_cou¡
++;

128 i‡(
cuºít
->
libøry
)

129 
cuºít
->
libøry
->
i_cou¡
++;

130 
	`£t_tss_desc
(
gdt
+(
ƒ
<<1)+
FIRST_TSS_ENTRY
,&(
p
->
tss
));

131 
	`£t_ldt_desc
(
gdt
+(
ƒ
<<1)+
FIRST_LDT_ENTRY
,&(
p
->
ldt
));

132 
p
->
p_µå
 = 
cuºít
;

133 
p
->
p_˝å
 = 0;

134 
p
->
p_y•å
 = 0;

135 
p
->
p_o•å
 = 
cuºít
->
p_˝å
;

136 i‡(
p
->
p_o•å
)

137 
p
->
p_o•å
->
p_y•å
 =Ö;

138 
cuºít
->
p_˝å
 = 
p
;

139 
p
->
°©e
 = 
TASK_RUNNING
;

140  
œ°_pid
;

141 
	}
}

143 
	$föd_em±y_¥o˚ss
()

145 
i
;

147 
ª≥©
:

148 i‡((++
œ°_pid
)<0)Üast_pid=1;

149 
i
=0 ; i<
NR_TASKS
 ; i++)

150 i‡(
èsk
[
i
] && (—ask[i]->
pid
 =
œ°_pid
) ||

151 (
èsk
[
i
]->
pgΩ
 =
œ°_pid
)))

152 
ª≥©
;

153 
i
=1 ; i<
NR_TASKS
 ; i++)

154 i‡(!
èsk
[
i
])

155  
i
;

156  -
EAGAIN
;

157 
	}
}

	@kernel/math/add.c

20 
	~<löux/m©h_emu.h
>

22 
	#NEGINT
(
a
) \

23 
	`__asm__
("notl %0 ;Çotl %1 ;áddl $1,%0 ;ádcl $0,%1" \

24 :"Ù" (
a
->a),"Ù" (a->
b
) \

25 :"0" (
a
->a),"1" (a->
b
))

	)

27 
	$signify
(
ãmp_ªÆ
 * 
a
)

29 
a
->
exp⁄ít
 += 2;

30 
	`__asm__
("shrdl $2,%1,%0 ; shrl $2,%1"

31 :"Ù" (
a
->a),"Ù" (a->
b
)

32 :"0" (
a
->a),"1" (a->
b
));

33 i‡(
a
->
exp⁄ít
 < 0)

34 
	`NEGINT
(
a
);

35 
a
->
exp⁄ít
 &= 0x7fff;

36 
	}
}

38 
	$unsignify
(
ãmp_ªÆ
 * 
a
)

40 i‡(!(
a
->®||á->
b
)) {

41 
a
->
exp⁄ít
 = 0;

44 
a
->
exp⁄ít
 &= 0x7fff;

45 i‡(
a
->
b
 < 0) {

46 
	`NEGINT
(
a
);

47 
a
->
exp⁄ít
 |= 0x8000;

49 
a
->
b
 >= 0) {

50 
a
->
exp⁄ít
--;

51 
	`__asm__
("addl %0,%0 ;ádcl %1,%1"

52 :"Ù" (
a
->a),"Ù" (a->
b
)

53 :"0" (
a
->a),"1" (a->
b
));

55 
	}
}

57 
	$Ádd
(c⁄° 
ãmp_ªÆ
 * 
§c1
, c⁄°Åemp_ªÆ * 
§c2
,Åemp_ªÆ * 
ªsu…
)

59 
ãmp_ªÆ
 
a
,
b
;

60 
x1
,
x2
,
shi·
;

62 
x1
 = 
§c1
->
exp⁄ít
 & 0x7fff;

63 
x2
 = 
§c2
->
exp⁄ít
 & 0x7fff;

64 i‡(
x1
 > 
x2
) {

65 
a
 = *
§c1
;

66 
b
 = *
§c2
;

67 
shi·
 = 
x1
-
x2
;

69 
a
 = *
§c2
;

70 
b
 = *
§c1
;

71 
shi·
 = 
x2
-
x1
;

73 i‡(
shi·
 >= 64) {

74 *
ªsu…
 = 
a
;

77 i‡(
shi·
 >= 32) {

78 
b
.
a
 = b.b;

79 
b
.b = 0;

80 
shi·
 -= 32;

82 
	`__asm__
("shrdl %4,%1,%0 ; shrl %4,%1"

83 :"Ù" (
b
.
a
),"=r" (b.b)

84 :"0" (
b
.
a
),"1" (b.b),"c" ((Ë
shi·
));

85 
	`signify
(&
a
);

86 
	`signify
(&
b
);

87 
	`__asm__
("addl %4,%0 ;ádcl %5,%1"

88 :"Ù" (
a
.a),"Ù" (a.
b
)

89 :"0" (
a
.a),"1" (a.
b
),"g" (b.a),"g" (b.b));

90 
	`unsignify
(&
a
);

91 *
ªsu…
 = 
a
;

92 
	}
}

	@kernel/math/compare.c

11 
	~<löux/m©h_emu.h
>

13 
	#˛ór_Cx
(Ë(
I387
.
swd
 &~0x4500)

	)

15 
	$n‹mÆize
(
ãmp_ªÆ
 * 
a
)

17 
i
 = 
a
->
exp⁄ít
 & 0x7fff;

18 
sign
 = 
a
->
exp⁄ít
 & 0x8000;

20 i‡(!(
a
->®||á->
b
)) {

21 
a
->
exp⁄ít
 = 0;

24 
i
 && 
a
->
b
 >= 0) {

25 
i
--;

26 
	`__asm__
("addl %0,%0 ;ádcl %1,%1"

27 :"Ù" (
a
->a),"Ù" (a->
b
)

28 :"0" (
a
->a),"1" (a->
b
));

30 
a
->
exp⁄ít
 = 
i
 | 
sign
;

31 
	}
}

33 
	$·°
(c⁄° 
ãmp_ªÆ
 * 
a
)

35 
ãmp_ªÆ
 
b
;

37 
	`˛ór_Cx
();

38 
b
 = *
a
;

39 
	`n‹mÆize
(&
b
);

40 i‡(
b
.
a
 || b.b || b.
exp⁄ít
) {

41 i‡(
b
.
exp⁄ít
 < 0)

42 
	`£t_C0
();

44 
	`£t_C3
();

45 
	}
}

47 
	$fcom
(c⁄° 
ãmp_ªÆ
 * 
§c1
, c⁄°Åemp_ªÆ * 
§c2
)

49 
ãmp_ªÆ
 
a
;

51 
a
 = *
§c1
;

52 
a
.
exp⁄ít
 ^= 0x8000;

53 
	`Ádd
(&
a
,
§c2
,&a);

54 
	`·°
(&
a
);

55 
	}
}

57 
	$fucom
(c⁄° 
ãmp_ªÆ
 * 
§c1
, c⁄°Åemp_ªÆ * 
§c2
)

59 
	`fcom
(
§c1
,
§c2
);

60 
	}
}

	@kernel/math/convert.c

7 
	~<löux/m©h_emu.h
>

21 
	$sh‹t_to_ãmp
(c⁄° 
sh‹t_ªÆ
 * 
a
, 
ãmp_ªÆ
 * 
b
)

23 i‡(!(*
a
 & 0x7fffffff)) {

24 
b
->
a
 = b->b = 0;

25 i‡(*
a
)

26 
b
->
exp⁄ít
 = 0x8000;

28 
b
->
exp⁄ít
 = 0;

31 
b
->
exp⁄ít
 = ((*
a
>>23) & 0xff)-127+16383;

32 i‡(*
a
<0)

33 
b
->
exp⁄ít
 |= 0x8000;

34 
b
->b = (*
a
<<8) | 0x80000000;

35 
b
->
a
 = 0;

36 
	}
}

38 
	$l⁄g_to_ãmp
(c⁄° 
l⁄g_ªÆ
 * 
a
, 
ãmp_ªÆ
 * 
b
)

40 i‡(!
a
->®&& !◊->
b
 & 0x7fffffff)) {

41 
b
->
a
 = b->b = 0;

42 i‡(
a
->
b
)

43 
b
->
exp⁄ít
 = 0x8000;

45 
b
->
exp⁄ít
 = 0;

48 
b
->
exp⁄ít
 = ((
a
->b >> 20) & 0x7ff)-1023+16383;

49 i‡(
a
->
b
<0)

50 
b
->
exp⁄ít
 |= 0x8000;

51 
b
->b = 0x80000000 | (
a
->b<<11) | ((()a->a)>>21);

52 
b
->
a
 =á->a<<11;

53 
	}
}

55 
	$ãmp_to_sh‹t
(c⁄° 
ãmp_ªÆ
 * 
a
, 
sh‹t_ªÆ
 * 
b
)

57 i‡(!(
a
->
exp⁄ít
 & 0x7fff)) {

58 *
b
 = (
a
->
exp⁄ít
)?0x80000000:0;

61 *
b
 = ((((Ë
a
->
exp⁄ít
)-16383+127) << 23) & 0x7f800000;

62 i‡(
a
->
exp⁄ít
 < 0)

63 *
b
 |= 0x80000000;

64 *
b
 |(
a
->b >> 8) & 0x007fffff;

65 
ROUNDING
) {

66 
ROUND_NEAREST
:

67 i‡((
a
->
b
 & 0xff) > 0x80)

68 ++*
b
;

70 
ROUND_DOWN
:

71 i‡((
a
->
exp⁄ít
 & 0x8000Ë&& (a->
b
 & 0xff))

72 ++*
b
;

74 
ROUND_UP
:

75 i‡(!(
a
->
exp⁄ít
 & 0x8000Ë&& (a->
b
 & 0xff))

76 ++*
b
;

79 
	}
}

81 
	$ãmp_to_l⁄g
(c⁄° 
ãmp_ªÆ
 * 
a
, 
l⁄g_ªÆ
 * 
b
)

83 i‡(!(
a
->
exp⁄ít
 & 0x7fff)) {

84 
b
->
a
 = 0;

85 
b
->b = (
a
->
exp⁄ít
)?0x80000000:0;

88 
b
->b = (((0x7ff‡& (Ë
a
->
exp⁄ít
)-16383+1023) << 20) & 0x7ff00000;

89 i‡(
a
->
exp⁄ít
 < 0)

90 
b
->b |= 0x80000000;

91 
b
->b |(
a
->b >> 11) & 0x000fffff;

92 
b
->
a
 =á->b << 21;

93 
b
->
a
 |= (a->a >> 11) & 0x001fffff;

94 
ROUNDING
) {

95 
ROUND_NEAREST
:

96 i‡((
a
->a & 0x7ff) > 0x400)

97 
	`__asm__
("addl $1,%0 ;ádcl $0,%1"

98 :"Ù" (
b
->
a
),"=r" (b->b)

99 :"0" (
b
->
a
),"1" (b->b));

101 
ROUND_DOWN
:

102 i‡((
a
->
exp⁄ít
 & 0x8000Ë&& (a->
b
 & 0xff))

103 
	`__asm__
("addl $1,%0 ;ádcl $0,%1"

104 :"Ù" (
b
->
a
),"=r" (b->b)

105 :"0" (
b
->
a
),"1" (b->b));

107 
ROUND_UP
:

108 i‡(!(
a
->
exp⁄ít
 & 0x8000Ë&& (a->
b
 & 0xff))

109 
	`__asm__
("addl $1,%0 ;ádcl $0,%1"

110 :"Ù" (
b
->
a
),"=r" (b->b)

111 :"0" (
b
->
a
),"1" (b->b));

114 
	}
}

116 
	$ªÆ_to_öt
(c⁄° 
ãmp_ªÆ
 * 
a
, 
ãmp_öt
 * 
b
)

118 
shi·
 = 16383 + 63 - (
a
->
exp⁄ít
 & 0x7fff);

119 
undîÊow
;

121 
b
->
a
 = b->b = 
undîÊow
 = 0;

122 
b
->
sign
 = (
a
->
exp⁄ít
 < 0);

123 i‡(
shi·
 < 0) {

124 
	`£t_OE
();

127 i‡(
shi·
 < 32) {

128 
b
->b = 
a
->b; b->a =á->a;

129 } i‡(
shi·
 < 64) {

130 
b
->
a
 =á->b; 
undîÊow
 =á->a;

131 
shi·
 -= 32;

132 } i‡(
shi·
 < 96) {

133 
undîÊow
 = 
a
->
b
;

134 
shi·
 -= 64;

137 
	`__asm__
("shrdl %2,%1,%0"

138 :"Ù" (
undîÊow
),"Ù" (
b
->
a
)

139 :"c" ((Ë
shi·
),"0" (
undîÊow
),"1" (
b
->
a
));

140 
	`__asm__
("shrdl %2,%1,%0"

141 :"Ù" (
b
->
a
),"=r" (b->b)

142 :"c" ((Ë
shi·
),"0" (
b
->
a
),"1" (b->b));

143 
	`__asm__
("shrl %1,%0"

144 :"Ù" (
b
->b)

145 :"c" ((Ë
shi·
),"0" (
b
->b));

146 
ROUNDING
) {

147 
ROUND_NEAREST
:

148 
	`__asm__
("addl %4,%5 ;ádcl $0,%0 ;ádcl $0,%1"

149 :"Ù" (
b
->
a
),"=r" (b->b)

150 :"0" (
b
->
a
),"1" (b->b)

151 ,"r" (0x7ffffff‡+ (
b
->
a
 & 1))

152 ,"m" (*&
undîÊow
));

154 
ROUND_UP
:

155 i‡(!
b
->
sign
 && 
undîÊow
)

156 
	`__asm__
("addl $1,%0 ;ádcl $0,%1"

157 :"Ù" (
b
->
a
),"=r" (b->b)

158 :"0" (
b
->
a
),"1" (b->b));

160 
ROUND_DOWN
:

161 i‡(
b
->
sign
 && 
undîÊow
)

162 
	`__asm__
("addl $1,%0 ;ádcl $0,%1"

163 :"Ù" (
b
->
a
),"=r" (b->b)

164 :"0" (
b
->
a
),"1" (b->b));

167 
	}
}

169 
	$öt_to_ªÆ
(c⁄° 
ãmp_öt
 * 
a
, 
ãmp_ªÆ
 * 
b
)

171 
b
->
a
 =á->a;

172 
b
->b = 
a
->b;

173 i‡(
b
->
a
 || b->b)

174 
b
->
exp⁄ít
 = 16383 + 63 + (
a
->
sign
? 0x8000:0);

176 
b
->
exp⁄ít
 = 0;

179 
b
->b >= 0) {

180 
b
->
exp⁄ít
--;

181 
	`__asm__
("addl %0,%0 ;ádcl %1,%1"

182 :"Ù" (
b
->
a
),"=r" (b->b)

183 :"0" (
b
->
a
),"1" (b->b));

185 
	}
}

	@kernel/math/div.c

11 
	~<löux/m©h_emu.h
>

13 
	$shi·_À·
(* 
c
)

15 
__asm__
 
	`__vﬁ©ûe__
("movl (%0),%%eax ;áddl %%eax,(%0)\n\t"

19 ::"r" ((Ë
c
):"ax");

20 
	}
}

22 
	$shi·_right
(* 
c
)

24 
	`__asm__
("shrl $1,12(%0) ;Ñcrl $1,8(%0) ;Ñcrl $1,4(%0) ;Ñcrl $1,(%0)"

25 ::"r" ((Ë
c
));

26 
	}
}

28 
	$åy_sub
(* 
a
, * 
b
)

30 
ok
;

32 
__asm__
 
	`__vﬁ©ûe__
("movl (%1),%%eax ; subl %%eax,(%2)\n\t"

36 "£èê%%Æ":"˜" (
ok
):"c" ((Ë
a
),"d" ((Ë
b
));

37  
ok
;

38 
	}
}

40 
	$div64
(* 
a
, * 
b
, * 
c
)

42 
tmp
[4];

43 
i
;

44 
mask
 = 0;

46 
c
 += 4;

47 
i
 = 0 ; i<64 ; i++) {

48 i‡(!(
mask
 >>= 1)) {

49 
c
--;

50 
mask
 = 0x80000000;

52 
tmp
[0] = 
a
[0];Åmp[1] =á[1];

53 
tmp
[2] = 
a
[2];Åmp[3] =á[3];

54 i‡(
	`åy_sub
(
b
,
tmp
)) {

55 *
c
 |
mask
;

56 
a
[0] = 
tmp
[0];á[1] =Åmp[1];

57 
a
[2] = 
tmp
[2];á[3] =Åmp[3];

59 
	`shi·_right
(
b
);

61 
	}
}

63 
	$fdiv
(c⁄° 
ãmp_ªÆ
 * 
§c1
, c⁄°Åemp_ªÆ * 
§c2
,Åemp_ªÆ * 
ªsu…
)

65 
i
,
sign
;

66 
a
[4],
b
[4],
tmp
[4] = {0,0,0,0};

68 
sign
 = (
§c1
->
exp⁄ít
 ^ 
§c2
->exponent) & 0x8000;

69 i‡(!(
§c2
->
a
 || src2->
b
)) {

70 
	`£t_ZE
();

73 
i
 = (
§c1
->
exp⁄ít
 & 0x7fffË- (
§c2
->exponent & 0x7fff) + 16383;

74 i‡(
i
<0) {

75 
	`£t_UE
();

76 
ªsu…
->
exp⁄ít
 = 
sign
;

77 
ªsu…
->
a
 =Ñesu…->
b
 = 0;

80 
a
[0] =á[1] = 0;

81 
a
[2] = 
§c1
->a;

82 
a
[3] = 
§c1
->
b
;

83 
b
[0] = b[1] = 0;

84 
b
[2] = 
§c2
->
a
;

85 
b
[3] = 
§c2
->b;

86 
b
[3] >= 0) {

87 
i
++;

88 
	`shi·_À·
(
b
);

90 
	`div64
(
a
,
b
,
tmp
);

91 i‡(
tmp
[0] ||Åmp[1] ||Åmp[2] ||Åmp[3]) {

92 
i
 && 
tmp
[3] >= 0) {

93 
i
--;

94 
	`shi·_À·
(
tmp
);

96 i‡(
tmp
[3] >= 0)

97 
	`£t_DE
();

99 
i
 = 0;

100 i‡(
i
>0x7fff) {

101 
	`£t_OE
();

104 i‡(
tmp
[0] ||Åmp[1])

105 
	`£t_PE
();

106 
ªsu…
->
exp⁄ít
 = 
i
 | 
sign
;

107 
ªsu…
->
a
 = 
tmp
[2];

108 
ªsu…
->
b
 = 
tmp
[3];

109 
	}
}

	@kernel/math/ea.c

11 
	~<°ddef.h
>

13 
	~<löux/m©h_emu.h
>

14 
	~<asm/£gmít.h
>

16 
	g__ªgoff£t
[] = {

17 
off£tof
(
öfo
,
___óx
),

18 
off£tof
(
öfo
,
___ecx
),

19 
off£tof
(
öfo
,
___edx
),

20 
off£tof
(
öfo
,
___ebx
),

21 
off£tof
(
öfo
,
___e•
),

22 
off£tof
(
öfo
,
___ebp
),

23 
off£tof
(
öfo
,
___esi
),

24 
off£tof
(
öfo
,
___edi
)

27 
	#REG
(
x
Ë(*(*)(
__ªgoff£t
[(x)]+(*Ë
öfo
))

	)

29 * 
	$sib
(
öfo
 * info, 
mod
)

31 
ss
,
ödex
,
ba£
;

32 
off£t
 = 0;

34 
ba£
 = 
	`gë_fs_byã
((*Ë
EIP
);

35 
EIP
++;

36 
ss
 = 
ba£
 >> 6;

37 
ödex
 = (
ba£
 >> 3) & 7;

38 
ba£
 &= 7;

39 i‡(
ödex
 == 4)

40 
off£t
 = 0;

42 
off£t
 = 
	`REG
(
ödex
);

43 
off£t
 <<
ss
;

44 i‡(
mod
 || 
ba£
 != 5)

45 
off£t
 +
	`REG
(
ba£
);

46 i‡(
mod
 == 1) {

47 
off£t
 +(sig√d Ë
	`gë_fs_byã
((*Ë
EIP
);

48 
EIP
++;

49 } i‡(
mod
 =2 || 
ba£
 == 5) {

50 
off£t
 +(sig√dË
	`gë_fs_l⁄g
((*Ë
EIP
);

51 
EIP
 += 4;

53 
I387
.
foo
 = 
off£t
;

54 
I387
.
fos
 = 0x17;

55  (*Ë
off£t
;

56 
	}
}

58 * 
	$ó
(
öfo
 * info, 
code
)

60 
mod
,
rm
;

61 * 
tmp
 = &
EAX
;

62 
off£t
 = 0;

64 
mod
 = (
code
 >> 6) & 3;

65 
rm
 = 
code
 & 7;

66 i‡(
rm
 =4 && 
mod
 != 3)

67  
	`sib
(
öfo
,
mod
);

68 i‡(
rm
 =5 && !
mod
) {

69 
off£t
 = 
	`gë_fs_l⁄g
((*Ë
EIP
);

70 
EIP
 += 4;

71 
I387
.
foo
 = 
off£t
;

72 
I387
.
fos
 = 0x17;

73  (*Ë
off£t
;

75 
tmp
 = & 
	`REG
(
rm
);

76 
mod
) {

77 0: 
off£t
 = 0; ;

79 
off£t
 = (sig√d Ë
	`gë_fs_byã
((*Ë
EIP
);

80 
EIP
++;

83 
off£t
 = (sig√dË
	`gë_fs_l⁄g
((*Ë
EIP
);

84 
EIP
 += 4;

87 
	`m©h_ab‹t
(
öfo
,1<<(
SIGILL
-1));

89 
I387
.
foo
 = 
off£t
;

90 
I387
.
fos
 = 0x17;

91  
off£t
 + (*Ë*
tmp
;

92 
	}
}

	@kernel/math/error.c

7 
	~<sig«l.h
>

9 
	~<löux/sched.h
>

11 
	$m©h_îr‹
()

13 
	`__asm__
("fnclex");

14 i‡(
œ°_èsk_u£d_m©h
)

15 
œ°_èsk_u£d_m©h
->
sig«l
 |1<<(
SIGFPE
-1);

16 
	}
}

	@kernel/math/get_put.c

12 
	~<sig«l.h
>

14 
	~<löux/m©h_emu.h
>

15 
	~<löux/kî√l.h
>

16 
	~<asm/£gmít.h
>

18 
	$gë_sh‹t_ªÆ
(
ãmp_ªÆ
 * 
tmp
,

19 
öfo
 * info, 
code
)

21 * 
addr
;

22 
sh‹t_ªÆ
 
§
;

24 
addr
 = 
	`ó
(
öfo
,
code
);

25 
§
 = 
	`gë_fs_l⁄g
((*Ë
addr
);

26 
	`sh‹t_to_ãmp
(&
§
,
tmp
);

27 
	}
}

29 
	$gë_l⁄g_ªÆ
(
ãmp_ªÆ
 * 
tmp
,

30 
öfo
 * info, 
code
)

32 * 
addr
;

33 
l⁄g_ªÆ
 
Ã
;

35 
addr
 = 
	`ó
(
öfo
,
code
);

36 
Ã
.
a
 = 
	`gë_fs_l⁄g
((*Ë
addr
);

37 
Ã
.
b
 = 
	`gë_fs_l⁄g
(1 + (*Ë
addr
);

38 
	`l⁄g_to_ãmp
(&
Ã
,
tmp
);

39 
	}
}

41 
	$gë_ãmp_ªÆ
(
ãmp_ªÆ
 * 
tmp
,

42 
öfo
 * info, 
code
)

44 * 
addr
;

46 
addr
 = 
	`ó
(
öfo
,
code
);

47 
tmp
->
a
 = 
	`gë_fs_l⁄g
((*Ë
addr
);

48 
tmp
->
b
 = 
	`gë_fs_l⁄g
(1 + (*Ë
addr
);

49 
tmp
->
exp⁄ít
 = 
	`gë_fs_w‹d
(4 + (*Ë
addr
);

50 
	}
}

52 
	$gë_sh‹t_öt
(
ãmp_ªÆ
 * 
tmp
,

53 
öfo
 * info, 
code
)

55 * 
addr
;

56 
ãmp_öt
 
ti
;

58 
addr
 = 
	`ó
(
öfo
,
code
);

59 
ti
.
a
 = (sig√d Ë
	`gë_fs_w‹d
((*Ë
addr
);

60 
ti
.
b
 = 0;

61 i‡(
ti
.
sign
 = (ti.
a
 < 0))

62 
ti
.
a
 = -Åi.a;

63 
	`öt_to_ªÆ
(&
ti
,
tmp
);

64 
	}
}

66 
	$gë_l⁄g_öt
(
ãmp_ªÆ
 * 
tmp
,

67 
öfo
 * info, 
code
)

69 * 
addr
;

70 
ãmp_öt
 
ti
;

72 
addr
 = 
	`ó
(
öfo
,
code
);

73 
ti
.
a
 = 
	`gë_fs_l⁄g
((*Ë
addr
);

74 
ti
.
b
 = 0;

75 i‡(
ti
.
sign
 = (ti.
a
 < 0))

76 
ti
.
a
 = -Åi.a;

77 
	`öt_to_ªÆ
(&
ti
,
tmp
);

78 
	}
}

80 
	$gë_l⁄gl⁄g_öt
(
ãmp_ªÆ
 * 
tmp
,

81 
öfo
 * info, 
code
)

83 * 
addr
;

84 
ãmp_öt
 
ti
;

86 
addr
 = 
	`ó
(
öfo
,
code
);

87 
ti
.
a
 = 
	`gë_fs_l⁄g
((*Ë
addr
);

88 
ti
.
b
 = 
	`gë_fs_l⁄g
(1 + (*Ë
addr
);

89 i‡(
ti
.
sign
 = (ti.
b
 < 0))

90 
	`__asm__
("notl %0 ;Çotl %1\n\t"

92 :"Ù" (
ti
.
a
),"Ù" (ti.
b
)

93 :"0" (
ti
.
a
),"1" (ti.
b
));

94 
	`öt_to_ªÆ
(&
ti
,
tmp
);

95 
	}
}

97 
	#MUL10
(
low
,
high
) \

98 
	`__asm__
("addl %0,%0 ;ádcl %1,%1\n\t" \

103 :"˜" (
low
),"=d" (
high
) \

104 :"0" (
low
),"1" (
high
):"cx","bx")

	)

106 
	#ADD64
(
vÆ
,
low
,
high
) \

107 
	`__asm__
("add»%4,%0 ;ád˛ $0,%1":"Ù" (
low
),"Ù" (
high
) \

108 :"0" (
low
),"1" (
high
),"r" ((Ë(
vÆ
)))

	)

110 
	$gë_BCD
(
ãmp_ªÆ
 * 
tmp
, 
öfo
 * info, 
code
)

112 
k
;

113 * 
addr
;

114 
ãmp_öt
 
i
;

115 
c
;

117 
addr
 = 
	`ó
(
öfo
,
code
);

118 
addr
 += 9;

119 
i
.
sign
 = 0x80 & 
	`gë_fs_byã
(
addr
--);

120 
i
.
a
 = i.
b
 = 0;

121 
k
 = 0; k < 9; k++) {

122 
c
 = 
	`gë_fs_byã
(
addr
--);

123 
	`MUL10
(
i
.
a
, i.
b
);

124 
	`ADD64
((
c
>>4), 
i
.
a
, i.
b
);

125 
	`MUL10
(
i
.
a
, i.
b
);

126 
	`ADD64
((
c
&0xf), 
i
.
a
, i.
b
);

128 
	`öt_to_ªÆ
(&
i
,
tmp
);

129 
	}
}

131 
	$put_sh‹t_ªÆ
(c⁄° 
ãmp_ªÆ
 * 
tmp
,

132 
öfo
 * info, 
code
)

134 * 
addr
;

135 
sh‹t_ªÆ
 
§
;

137 
addr
 = 
	`ó
(
öfo
,
code
);

138 
	`vîify_¨ó
(
addr
,4);

139 
	`ãmp_to_sh‹t
(
tmp
,&
§
);

140 
	`put_fs_l⁄g
(
§
,(*Ë
addr
);

141 
	}
}

143 
	$put_l⁄g_ªÆ
(c⁄° 
ãmp_ªÆ
 * 
tmp
,

144 
öfo
 * info, 
code
)

146 * 
addr
;

147 
l⁄g_ªÆ
 
Ã
;

149 
addr
 = 
	`ó
(
öfo
,
code
);

150 
	`vîify_¨ó
(
addr
,8);

151 
	`ãmp_to_l⁄g
(
tmp
,&
Ã
);

152 
	`put_fs_l⁄g
(
Ã
.
a
, (*Ë
addr
);

153 
	`put_fs_l⁄g
(
Ã
.
b
, 1 + (*Ë
addr
);

154 
	}
}

156 
	$put_ãmp_ªÆ
(c⁄° 
ãmp_ªÆ
 * 
tmp
,

157 
öfo
 * info, 
code
)

159 * 
addr
;

161 
addr
 = 
	`ó
(
öfo
,
code
);

162 
	`vîify_¨ó
(
addr
,10);

163 
	`put_fs_l⁄g
(
tmp
->
a
, (*Ë
addr
);

164 
	`put_fs_l⁄g
(
tmp
->
b
, 1 + (*Ë
addr
);

165 
	`put_fs_w‹d
(
tmp
->
exp⁄ít
, 4 + (*Ë
addr
);

166 
	}
}

168 
	$put_sh‹t_öt
(c⁄° 
ãmp_ªÆ
 * 
tmp
,

169 
öfo
 * info, 
code
)

171 * 
addr
;

172 
ãmp_öt
 
ti
;

174 
addr
 = 
	`ó
(
öfo
,
code
);

175 
	`ªÆ_to_öt
(
tmp
,&
ti
);

176 
	`vîify_¨ó
(
addr
,2);

177 i‡(
ti
.
sign
)

178 
ti
.
a
 = -ti.a;

179 
	`put_fs_w‹d
(
ti
.
a
,(*Ë
addr
);

180 
	}
}

182 
	$put_l⁄g_öt
(c⁄° 
ãmp_ªÆ
 * 
tmp
,

183 
öfo
 * info, 
code
)

185 * 
addr
;

186 
ãmp_öt
 
ti
;

188 
addr
 = 
	`ó
(
öfo
,
code
);

189 
	`ªÆ_to_öt
(
tmp
,&
ti
);

190 
	`vîify_¨ó
(
addr
,4);

191 i‡(
ti
.
sign
)

192 
ti
.
a
 = -ti.a;

193 
	`put_fs_l⁄g
(
ti
.
a
,(*Ë
addr
);

194 
	}
}

196 
	$put_l⁄gl⁄g_öt
(c⁄° 
ãmp_ªÆ
 * 
tmp
,

197 
öfo
 * info, 
code
)

199 * 
addr
;

200 
ãmp_öt
 
ti
;

202 
addr
 = 
	`ó
(
öfo
,
code
);

203 
	`ªÆ_to_öt
(
tmp
,&
ti
);

204 
	`vîify_¨ó
(
addr
,8);

205 i‡(
ti
.
sign
)

206 
	`__asm__
("notl %0 ;Çotl %1\n\t"

208 :"Ù" (
ti
.
a
),"Ù" (ti.
b
)

209 :"0" (
ti
.
a
),"1" (ti.
b
));

210 
	`put_fs_l⁄g
(
ti
.
a
,(*Ë
addr
);

211 
	`put_fs_l⁄g
(
ti
.
b
,1 + (*Ë
addr
);

212 
	}
}

214 
	#DIV10
(
low
,
high
,
ªm
) \

215 
	`__asm__
("divl %6 ; xchgl %1,%2 ; divl %6" \

216 :"=d" (
ªm
),"˜" (
low
),"=b" (
high
) \

217 :"0" (0),"1" (
high
),"2" (
low
),"c" (10))

	)

219 
	$put_BCD
(c⁄° 
ãmp_ªÆ
 * 
tmp
,
öfo
 * info, 
code
)

221 
k
,
ªm
;

222 * 
addr
;

223 
ãmp_öt
 
i
;

224 
c
;

226 
addr
 = 
	`ó
(
öfo
,
code
);

227 
	`vîify_¨ó
(
addr
,10);

228 
	`ªÆ_to_öt
(
tmp
,&
i
);

229 i‡(
i
.
sign
)

230 
	`put_fs_byã
(0x80, 
addr
+9);

232 
	`put_fs_byã
(0, 
addr
+9);

233 
k
 = 0; k < 9; k++) {

234 
	`DIV10
(
i
.
a
,i.
b
,
ªm
);

235 
c
 = 
ªm
;

236 
	`DIV10
(
i
.
a
,i.
b
,
ªm
);

237 
c
 +
ªm
<<4;

238 
	`put_fs_byã
(
c
,
addr
++);

240 
	}
}

	@kernel/math/math_emulate.c

33 
	~<sig«l.h
>

35 
	#__ALIGNED_TEMP_REAL
 1

	)

36 
	~<löux/m©h_emu.h
>

37 
	~<löux/kî√l.h
>

38 
	~<asm/£gmít.h
>

40 
	#bsw≠w
(
x
Ë
	`__asm__
("xchgb %%Æ,%%ah":"˜" (x):"0" (()x))

	)

41 
	#ST
(
x
Ë(*
	`__°
((x)))

	)

42 
	#PST
(
x
Ë((c⁄° 
ãmp_ªÆ
 *Ë
	`__°
((x)))

	)

47 
Â›
();

48 
Âush
();

49 
fxchg
(
ãmp_ªÆ_u«lig√d
 * 
a
,Åemp_ªÆ_u«lig√d * 
b
);

50 
ãmp_ªÆ_u«lig√d
 * 
__°
(
i
);

52 
	$do_emu
(
öfo
 * info)

54 
code
;

55 
ãmp_ªÆ
 
tmp
;

56 * 
addªss
;

58 i‡(
I387
.
cwd
 & I387.
swd
 & 0x3f)

59 
I387
.
swd
 |= 0x8000;

61 
I387
.
swd
 &= 0x7fff;

62 
ORIG_EIP
 = 
EIP
;

64 i‡(
CS
 != 0x000F) {

65 
	`¥ötk
("m©h_emuœã: %04x:%08x\n\r",
CS
,
EIP
);

66 
	`∑nic
("MathÉmulationÇeeded in kernel");

68 
code
 = 
	`gë_fs_w‹d
((*Ë
EIP
);

69 
	`bsw≠w
(
code
);

70 
code
 &= 0x7ff;

71 
I387
.
fù
 = 
EIP
;

72 *(*Ë&
I387
.
fcs
 = 
CS
;

73 *(1+(*Ë&
I387
.
fcs
Ë
code
;

74 
EIP
 += 2;

75 
code
) {

80 
	`m©h_ab‹t
(
öfo
,1<<(
SIGILL
-1));

82 
	`ST
(0).
exp⁄ít
 ^= 0x8000;

85 
	`ST
(0).
exp⁄ít
 &= 0x7fff;

88 
	`m©h_ab‹t
(
öfo
,1<<(
SIGILL
-1));

90 
	`·°
(
	`PST
(0));

93 
	`¥ötk
("fxamÇot implemented\n\r");

94 
	`m©h_ab‹t
(
öfo
,1<<(
SIGILL
-1));

96 
	`m©h_ab‹t
(
öfo
,1<<(
SIGILL
-1));

98 
	`Âush
();

99 
	`ST
(0Ë
CONST1
;

102 
	`Âush
();

103 
	`ST
(0Ë
CONSTL2T
;

106 
	`Âush
();

107 
	`ST
(0Ë
CONSTL2E
;

110 
	`Âush
();

111 
	`ST
(0Ë
CONSTPI
;

114 
	`Âush
();

115 
	`ST
(0Ë
CONSTLG2
;

118 
	`Âush
();

119 
	`ST
(0Ë
CONSTLN2
;

122 
	`Âush
();

123 
	`ST
(0Ë
CONSTZ
;

126 
	`m©h_ab‹t
(
öfo
,1<<(
SIGILL
-1));

131 
	`¥ötk
("%04x fxxxÇŸ im∂emíãd\n\r",
code
 + 0xc800);

132 
	`m©h_ab‹t
(
öfo
,1<<(
SIGILL
-1));

134 
	`fucom
(
	`PST
(1),PST(0));

135 
	`Â›
(); fpop();

140 
I387
.
swd
 &= 0x7f00;

143 
I387
.
cwd
 = 0x037f;

144 
I387
.
swd
 = 0x0000;

145 
I387
.
twd
 = 0x0000;

150 
	`fcom
(
	`PST
(1),PST(0));

151 
	`Â›
(); fpop();

154 *(*Ë&
EAX
 = 
I387
.
swd
;

157 
code
 >> 3) {

159 
	`Ádd
(
	`PST
(0),PST(
code
 & 7),&
tmp
);

160 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(0));

163 
	`fmul
(
	`PST
(0),PST(
code
 & 7),&
tmp
);

164 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(0));

167 
	`fcom
(
	`PST
(
code
 & 7),&
tmp
);

168 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(0));

171 
	`fcom
(
	`PST
(
code
 & 7),&
tmp
);

172 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(0));

173 
	`Â›
();

176 
	`ªÆ_to_ªÆ
(&
	`ST
(
code
 & 7),&
tmp
);

177 
tmp
.
exp⁄ít
 ^= 0x8000;

178 
	`Ádd
(
	`PST
(0),&
tmp
,&tmp);

179 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(0));

182 
	`ST
(0).
exp⁄ít
 ^= 0x8000;

183 
	`Ádd
(
	`PST
(0),PST(
code
 & 7),&
tmp
);

184 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(0));

187 
	`fdiv
(
	`PST
(0),PST(
code
 & 7),&
tmp
);

188 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(0));

191 
	`fdiv
(
	`PST
(
code
 & 7),PST(0),&
tmp
);

192 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(0));

195 
	`Âush
();

196 
	`ST
(0ËST((
code
 & 7)+1);

199 
	`fxchg
(&
	`ST
(0),&ST(
code
 & 7));

202 
	`ST
(
code
 & 7) = ST(0);

203 
	`Â›
();

206 
	`Ádd
(
	`PST
(0),PST(
code
 & 7),&
tmp
);

207 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(
code
 & 7));

210 
	`fmul
(
	`PST
(0),PST(
code
 & 7),&
tmp
);

211 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(
code
 & 7));

214 
	`fcom
(
	`PST
(
code
 & 7),PST(0));

217 
	`fcom
(
	`PST
(
code
 & 7),PST(0));

218 
	`Â›
();

221 
	`ST
(
code
 & 7).
exp⁄ít
 ^= 0x8000;

222 
	`Ádd
(
	`PST
(0),PST(
code
 & 7),&
tmp
);

223 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(
code
 & 7));

226 
	`ªÆ_to_ªÆ
(&
	`ST
(0),&
tmp
);

227 
tmp
.
exp⁄ít
 ^= 0x8000;

228 
	`Ádd
(
	`PST
(
code
 & 7),&
tmp
,&tmp);

229 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(
code
 & 7));

232 
	`fdiv
(
	`PST
(0),PST(
code
 & 7),&
tmp
);

233 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(
code
 & 7));

236 
	`fdiv
(
	`PST
(
code
 & 7),PST(0),&
tmp
);

237 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(
code
 & 7));

240 
	`¥ötk
("ffreeÇot implemented\n\r");

241 
	`m©h_ab‹t
(
öfo
,1<<(
SIGILL
-1));

243 
	`fxchg
(&
	`ST
(0),&ST(
code
 & 7));

246 
	`ST
(
code
 & 7) = ST(0);

249 
	`ST
(
code
 & 7) = ST(0);

250 
	`Â›
();

253 
	`fucom
(
	`PST
(
code
 & 7),PST(0));

256 
	`fucom
(
	`PST
(
code
 & 7),PST(0));

257 
	`Â›
();

260 
	`Ádd
(
	`PST
(
code
 & 7),PST(0),&
tmp
);

261 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(
code
 & 7));

262 
	`Â›
();

265 
	`fmul
(
	`PST
(
code
 & 7),PST(0),&
tmp
);

266 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(
code
 & 7));

267 
	`Â›
();

270 
	`fcom
(
	`PST
(
code
 & 7),PST(0));

271 
	`Â›
();

274 
	`ST
(
code
 & 7).
exp⁄ít
 ^= 0x8000;

275 
	`Ádd
(
	`PST
(0),PST(
code
 & 7),&
tmp
);

276 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(
code
 & 7));

277 
	`Â›
();

280 
	`ªÆ_to_ªÆ
(&
	`ST
(0),&
tmp
);

281 
tmp
.
exp⁄ít
 ^= 0x8000;

282 
	`Ádd
(
	`PST
(
code
 & 7),&
tmp
,&tmp);

283 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(
code
 & 7));

284 
	`Â›
();

287 
	`fdiv
(
	`PST
(0),PST(
code
 & 7),&
tmp
);

288 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(
code
 & 7));

289 
	`Â›
();

292 
	`fdiv
(
	`PST
(
code
 & 7),PST(0),&
tmp
);

293 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(
code
 & 7));

294 
	`Â›
();

297 
	`¥ötk
("ffreeÇot implemented\n\r");

298 
	`m©h_ab‹t
(
öfo
,1<<(
SIGILL
-1));

299 
	`Â›
();

302 
	`fxchg
(&
	`ST
(0),&ST(
code
 & 7));

306 
	`ST
(
code
 & 7) = ST(0);

307 
	`Â›
();

310 (
code
>>3) & 0xe7) {

312 
	`put_sh‹t_ªÆ
(
	`PST
(0),
öfo
,
code
);

315 
	`put_sh‹t_ªÆ
(
	`PST
(0),
öfo
,
code
);

316 
	`Â›
();

319 
addªss
 = 
	`ó
(
öfo
,
code
);

320 
code
 = 0 ; code < 7 ; code++) {

321 ((*Ë& 
I387
)[
code
] =

322 
	`gë_fs_l⁄g
((*Ë
addªss
);

323 
addªss
 += 4;

327 
addªss
 = 
	`ó
(
öfo
,
code
);

328 *(*Ë&
I387
.
cwd
 =

329 
	`gë_fs_w‹d
((*Ë
addªss
);

332 
addªss
 = 
	`ó
(
öfo
,
code
);

333 
	`vîify_¨ó
(
addªss
,28);

334 
code
 = 0 ; code < 7 ; code++) {

335 
	`put_fs_l⁄g
–((*Ë& 
I387
)[
code
],

336 (*Ë
addªss
);

337 
addªss
 += 4;

341 
addªss
 = 
	`ó
(
öfo
,
code
);

342 
	`vîify_¨ó
(
addªss
,2);

343 
	`put_fs_w‹d
(
I387
.
cwd
,(*Ë
addªss
);

346 
	`put_l⁄g_öt
(
	`PST
(0),
öfo
,
code
);

349 
	`put_l⁄g_öt
(
	`PST
(0),
öfo
,
code
);

350 
	`Â›
();

353 
	`Âush
();

354 
	`gë_ãmp_ªÆ
(&
tmp
,
öfo
,
code
);

355 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(0));

358 
	`put_ãmp_ªÆ
(
	`PST
(0),
öfo
,
code
);

359 
	`Â›
();

362 
	`put_l⁄g_ªÆ
(
	`PST
(0),
öfo
,
code
);

365 
	`put_l⁄g_ªÆ
(
	`PST
(0),
öfo
,
code
);

366 
	`Â›
();

369 
addªss
 = 
	`ó
(
öfo
,
code
);

370 
code
 = 0 ; code < 27 ; code++) {

371 ((*Ë& 
I387
)[
code
] =

372 
	`gë_fs_l⁄g
((*Ë
addªss
);

373 
addªss
 += 4;

377 
addªss
 = 
	`ó
(
öfo
,
code
);

378 
	`vîify_¨ó
(
addªss
,108);

379 
code
 = 0 ; code < 27 ; code++) {

380 
	`put_fs_l⁄g
–((*Ë& 
I387
)[
code
],

381 (*Ë
addªss
);

382 
addªss
 += 4;

384 
I387
.
cwd
 = 0x037f;

385 
I387
.
swd
 = 0x0000;

386 
I387
.
twd
 = 0x0000;

389 
addªss
 = 
	`ó
(
öfo
,
code
);

390 
	`vîify_¨ó
(
addªss
,2);

391 
	`put_fs_w‹d
(
I387
.
swd
,(*Ë
addªss
);

394 
	`put_sh‹t_öt
(
	`PST
(0),
öfo
,
code
);

397 
	`put_sh‹t_öt
(
	`PST
(0),
öfo
,
code
);

398 
	`Â›
();

401 
	`Âush
();

402 
	`gë_BCD
(&
tmp
,
öfo
,
code
);

403 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(0));

406 
	`Âush
();

407 
	`gë_l⁄gl⁄g_öt
(&
tmp
,
öfo
,
code
);

408 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(0));

411 
	`put_BCD
(
	`PST
(0),
öfo
,
code
);

412 
	`Â›
();

415 
	`put_l⁄gl⁄g_öt
(
	`PST
(0),
öfo
,
code
);

416 
	`Â›
();

419 
code
 >> 9) {

421 
	`gë_sh‹t_ªÆ
(&
tmp
,
öfo
,
code
);

424 
	`gë_l⁄g_öt
(&
tmp
,
öfo
,
code
);

427 
	`gë_l⁄g_ªÆ
(&
tmp
,
öfo
,
code
);

430 
	`gë_sh‹t_öt
(&
tmp
,
öfo
,
code
);

432 (
code
>>3) & 0x27) {

434 
	`Ádd
(&
tmp
,
	`PST
(0),&tmp);

435 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(0));

438 
	`fmul
(&
tmp
,
	`PST
(0),&tmp);

439 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(0));

442 
	`fcom
(&
tmp
,
	`PST
(0));

445 
	`fcom
(&
tmp
,
	`PST
(0));

446 
	`Â›
();

449 
tmp
.
exp⁄ít
 ^= 0x8000;

450 
	`Ádd
(&
tmp
,
	`PST
(0),&tmp);

451 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(0));

454 
	`ST
(0).
exp⁄ít
 ^= 0x8000;

455 
	`Ádd
(&
tmp
,
	`PST
(0),&tmp);

456 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(0));

459 
	`fdiv
(
	`PST
(0),&
tmp
,&tmp);

460 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(0));

463 
	`fdiv
(&
tmp
,
	`PST
(0),&tmp);

464 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(0));

467 i‡((
code
 & 0x138) == 0x100) {

468 
	`Âush
();

469 
	`ªÆ_to_ªÆ
(&
tmp
,&
	`ST
(0));

472 
	`¥ötk
("Unknow¿m©h-ö¢s: %04x:%08x %04x\n\r",
CS
,
EIP
,
code
);

473 
	`m©h_ab‹t
(
öfo
,1<<(
SIGFPE
-1));

474 
	}
}

476 
	$m©h_emuœã
(
___Ál£
)

478 i‡(!
cuºít
->
u£d_m©h
) {

479 
cuºít
->
u£d_m©h
 = 1;

480 
I387
.
cwd
 = 0x037f;

481 
I387
.
swd
 = 0x0000;

482 
I387
.
twd
 = 0x0000;

485 
	`do_emu
((
öfo
 *Ë((&
___Ál£
) - 1));

486 
	}
}

488 
	$__m©h_ab‹t
(
öfo
 * info, 
sig«l
)

490 
EIP
 = 
ORIG_EIP
;

491 
cuºít
->
sig«l
 |= signal;

492 
	`__asm__
("mov»%0,%%e• ;Ñë"::"g" ((Ë
öfo
));

493 
	}
}

495 
	$Â›
()

497 
tmp
;

499 
tmp
 = 
I387
.
swd
 & 0xffffc7ff;

500 
I387
.
swd
 += 0x00000800;

501 
I387
.
swd
 &= 0x00003800;

502 
I387
.
swd
 |
tmp
;

503 
	}
}

505 
	$Âush
()

507 
tmp
;

509 
tmp
 = 
I387
.
swd
 & 0xffffc7ff;

510 
I387
.
swd
 += 0x00003800;

511 
I387
.
swd
 &= 0x00003800;

512 
I387
.
swd
 |
tmp
;

513 
	}
}

515 
	$fxchg
(
ãmp_ªÆ_u«lig√d
 * 
a
,Åemp_ªÆ_u«lig√d * 
b
)

517 
ãmp_ªÆ_u«lig√d
 
c
;

519 
c
 = *
a
;

520 *
a
 = *
b
;

521 *
b
 = 
c
;

522 
	}
}

524 
ãmp_ªÆ_u«lig√d
 * 
	$__°
(
i
)

526 
i
 +
I387
.
swd
 >> 11;

527 
i
 &= 7;

528  (
ãmp_ªÆ_u«lig√d
 *Ë(
i
*10 + (*)(
I387
.
°_•a˚
));

529 
	}
}

	@kernel/math/mul.c

11 
	~<löux/m©h_emu.h
>

13 
	$shi·
(* 
c
)

15 
	`__asm__
("movl (%0),%%eax ;áddl %%eax,(%0)\n\t"

19 ::"r" ((Ë
c
):"ax");

20 
	}
}

22 
	$mul64
(c⁄° 
ãmp_ªÆ
 * 
a
, c⁄°Åemp_ªÆ * 
b
, * 
c
)

24 
	`__asm__
("movl (%0),%%eax\n\t"

42 ::"b" ((Ë
a
),"c" ((Ë
b
),"D" ((Ë
c
)

44 
	}
}

46 
	$fmul
(c⁄° 
ãmp_ªÆ
 * 
§c1
, c⁄°Åemp_ªÆ * 
§c2
,Åemp_ªÆ * 
ªsu…
)

48 
i
,
sign
;

49 
tmp
[4] = {0,0,0,0};

51 
sign
 = (
§c1
->
exp⁄ít
 ^ 
§c2
->exponent) & 0x8000;

52 
i
 = (
§c1
->
exp⁄ít
 & 0x7fffË+ (
§c2
->exponent & 0x7fff) - 16383 + 1;

53 i‡(
i
<0) {

54 
ªsu…
->
exp⁄ít
 = 
sign
;

55 
ªsu…
->
a
 =Ñesu…->
b
 = 0;

58 i‡(
i
>0x7fff) {

59 
	`£t_OE
();

62 
	`mul64
(
§c1
,
§c2
,
tmp
);

63 i‡(
tmp
[0] ||Åmp[1] ||Åmp[2] ||Åmp[3])

64 
i
 && 
tmp
[3] >= 0) {

65 
i
--;

66 
	`shi·
(
tmp
);

69 
i
 = 0;

70 
ªsu…
->
exp⁄ít
 = 
i
 | 
sign
;

71 
ªsu…
->
a
 = 
tmp
[2];

72 
ªsu…
->
b
 = 
tmp
[3];

73 
	}
}

	@kernel/mktime.c

7 
	~<time.h
>

20 
	#MINUTE
 60

	)

21 
	#HOUR
 (60*
MINUTE
)

	)

22 
	#DAY
 (24*
HOUR
)

	)

23 
	#YEAR
 (365*
DAY
)

	)

26 
	gm⁄th
[12] = {

28 
DAY
*(31),

29 
DAY
*(31+29),

30 
DAY
*(31+29+31),

31 
DAY
*(31+29+31+30),

32 
DAY
*(31+29+31+30+31),

33 
DAY
*(31+29+31+30+31+30),

34 
DAY
*(31+29+31+30+31+30+31),

35 
DAY
*(31+29+31+30+31+30+31+31),

36 
DAY
*(31+29+31+30+31+30+31+31+30),

37 
DAY
*(31+29+31+30+31+30+31+31+30+31),

38 
DAY
*(31+29+31+30+31+30+31+31+30+31+30)

41 
	$kî√l_mktime
(
tm
 *Åm)

43 
ªs
;

44 
yór
;

46 
yór
 = 
tm
->
tm_yór
 - 70;

48 
ªs
 = 
YEAR
*
yór
 + 
DAY
*((year+1)/4);

49 
ªs
 +
m⁄th
[
tm
->
tm_m⁄
];

51 i‡(
tm
->
tm_m⁄
>1 && ((
yór
+2)%4))

52 
ªs
 -
DAY
;

53 
ªs
 +
DAY
*(
tm
->
tm_mday
-1);

54 
ªs
 +
HOUR
*
tm
->
tm_hour
;

55 
ªs
 +
MINUTE
*
tm
->
tm_mö
;

56 
ªs
 +
tm
->
tm_£c
;

57  
ªs
;

58 
	}
}

	@kernel/panic.c

11 
	~<löux/kî√l.h
>

12 
	~<löux/sched.h
>

14 
sys_sync
();

16 vﬁ©ûê
	$∑nic
(c⁄° * 
s
)

18 
	`¥ötk
("Kî√»∑nic: %s\n\r",
s
);

19 i‡(
cuºít
 =
èsk
[0])

20 
	`¥ötk
("In swapperÅask -Çot syncing\n\r");

22 
	`sys_sync
();

24 
	}
}

	@kernel/printk.c

12 
	~<°d¨g.h
>

13 
	~<°ddef.h
>

15 
	~<löux/kî√l.h
>

17 
	gbuf
[1024];

19 
v•rötf
(* 
buf
, c⁄° * 
fmt
, 
va_li°
 
¨gs
);

21 
	$¥ötk
(c⁄° *
fmt
, ...)

23 
va_li°
 
¨gs
;

24 
i
;

26 
	`va_°¨t
(
¨gs
, 
fmt
);

27 
i
=
	`v•rötf
(
buf
,
fmt
,
¨gs
);

28 
	`va_íd
(
¨gs
);

29 
	`c⁄sﬁe_¥öt
(
buf
);

30  
i
;

31 
	}
}

	@kernel/sched.c

13 
	~<löux/sched.h
>

14 
	~<löux/kî√l.h
>

15 
	~<löux/sys.h
>

16 
	~<löux/fdªg.h
>

17 
	~<asm/sy°em.h
>

18 
	~<asm/io.h
>

19 
	~<asm/£gmít.h
>

21 
	~<sig«l.h
>

23 
	#_S
(
ƒ
Ë(1<<(“r)-1))

	)

24 
	#_BLOCKABLE
 (~(
	`_S
(
SIGKILL
Ë| _S(
SIGSTOP
)))

	)

26 
	$show_èsk
(
ƒ
,
èsk_°ru˘
 * 
p
)

28 
i
,
j
 = 4096-(
èsk_°ru˘
);

30 
	`¥ötk
("%d:Öid=%d, sèã=%d, f©hî=%d, chûd=%d, ",
ƒ
,
p
->
pid
,

31 
p
->
°©e
,Ö->
p_µå
->
pid
,Ö->
p_˝å
 ?Ö->p_cptr->pid : -1);

32 
i
=0;

33 
i
<
j
 && !((*)(
p
+1))[i])

34 
i
++;

35 
	`¥ötk
("%d/%d ch¨†‰ì i¿k°ack\n\r",
i
,
j
);

36 
	`¥ötk
(" PC=%08X.", *(1019 + (*Ë
p
));

37 i‡(
p
->
p_y•å
 ||Ö->
p_o•å
)

38 
	`¥ötk
(" Younger sib=%d, older sib=%d\n\r",

39 
p
->
p_y•å
 ?Ö->p_y•å->
pid
 : -1,

40 
p
->
p_o•å
 ?Ö->p_o•å->
pid
 : -1);

42 
	`¥ötk
("\n\r");

43 
	}
}

45 
	$show_°©e
()

47 
i
;

49 
	`¥ötk
("\rTask-info:\n\r");

50 
i
=0;i<
NR_TASKS
;i++)

51 i‡(
èsk
[
i
])

52 
	`show_èsk
(
i
,
èsk
[i]);

53 
	}
}

55 
	#LATCH
 (1193180/
HZ
)

	)

57 
mem_u£
();

59 
timî_öãºu±
();

60 
sy°em_ˇŒ
();

62 
	uèsk_uni⁄
 {

63 
èsk_°ru˘
 
	mèsk
;

64 
	m°ack
[
PAGE_SIZE
];

67 
èsk_uni⁄
 
	göô_èsk
 = {
INIT_TASK
,};

69 vﬁ©ûê
	gjiffõs
=0;

70 
	g°¨tup_time
=0;

71 
	gjiffõs_off£t
 = 0;

77 
èsk_°ru˘
 *
	gcuºít
 = &(
öô_èsk
.
èsk
);

78 
èsk_°ru˘
 *
	gœ°_èsk_u£d_m©h
 = 
NULL
;

80 
èsk_°ru˘
 * 
	gèsk
[
NR_TASKS
] = {&(
öô_èsk
.
èsk
), };

82 
	gu£r_°ack
 [ 
PAGE_SIZE
>>2 ] ;

85 * 
	ma
;

86 
	mb
;

87 } 
	g°ack_°¨t
 = { & 
u£r_°ack
 [
PAGE_SIZE
>>2] , 0x10 };

92 
	$m©h_°©e_ª°‹e
()

94 i‡(
œ°_èsk_u£d_m©h
 =
cuºít
)

96 
	`__asm__
("fwait");

97 i‡(
œ°_èsk_u£d_m©h
) {

98 
	`__asm__
("‚ßvê%0"::"m" (
œ°_èsk_u£d_m©h
->
tss
.
i387
));

100 
œ°_èsk_u£d_m©h
=
cuºít
;

101 i‡(
cuºít
->
u£d_m©h
) {

102 
	`__asm__
("‰°‹ %0"::"m" (
cuºít
->
tss
.
i387
));

104 
	`__asm__
("fninit"::);

105 
cuºít
->
u£d_m©h
=1;

107 
	}
}

119 
	$scheduÀ
()

121 
i
,
√xt
,
c
;

122 
èsk_°ru˘
 ** 
p
;

126 
p
 = &
LAST_TASK
 ;Ö > &
FIRST_TASK
 ; --p)

127 i‡(*
p
) {

128 i‡((*
p
)->
timeout
 && (*p)->timeouà< 
jiffõs
) {

129 (*
p
)->
timeout
 = 0;

130 i‡((*
p
)->
°©e
 =
TASK_INTERRUPTIBLE
)

131 (*
p
)->
°©e
 = 
TASK_RUNNING
;

133 i‡((*
p
)->
Æ¨m
 && (*p)->Æ¨m < 
jiffõs
) {

134 (*
p
)->
sig«l
 |(1<<(
SIGALRM
-1));

135 (*
p
)->
Æ¨m
 = 0;

137 i‡(((*
p
)->
sig«l
 & ~(
_BLOCKABLE
 & (*p)->
blocked
)) &&

138 (*
p
)->
°©e
==
TASK_INTERRUPTIBLE
)

139 (*
p
)->
°©e
=
TASK_RUNNING
;

145 
c
 = -1;

146 
√xt
 = 0;

147 
i
 = 
NR_TASKS
;

148 
p
 = &
èsk
[
NR_TASKS
];

149 --
i
) {

150 i‡(!*--
p
)

152 i‡((*
p
)->
°©e
 =
TASK_RUNNING
 && (*p)->
cou¡î
 > 
c
)

153 
c
 = (*
p
)->
cou¡î
, 
√xt
 = 
i
;

155 i‡(
c
) ;

156 
p
 = &
LAST_TASK
 ;Ö > &
FIRST_TASK
 ; --p)

157 i‡(*
p
)

158 (*
p
)->
cou¡î
 = ((*p)->counter >> 1) +

159 (*
p
)->
¥i‹ôy
;

161 
	`swôch_to
(
√xt
);

162 
	}
}

164 
	$sys_∑u£
()

166 
cuºít
->
°©e
 = 
TASK_INTERRUPTIBLE
;

167 
	`scheduÀ
();

169 
	}
}

171 
ölöe
 
	$__¶ìp_⁄
(
èsk_°ru˘
 **
p
, 
°©e
)

173 
èsk_°ru˘
 *
tmp
;

175 i‡(!
p
)

177 i‡(
cuºít
 =&(
öô_èsk
.
èsk
))

178 
	`∑nic
("task[0]ÅryingÅo sleep");

179 
tmp
 = *
p
;

180 *
p
 = 
cuºít
;

181 
cuºít
->
°©e
 = state;

182 
ª≥©
: 
	`scheduÀ
();

183 i‡(*
p
 && *∞!
cuºít
) {

184 (**
p
).
°©e
 = 0;

185 
cuºít
->
°©e
 = 
TASK_UNINTERRUPTIBLE
;

186 
ª≥©
;

188 i‡(!*
p
)

189 
	`¥ötk
("Warning: *P = NULL\n\r");

190 i‡(*
p
 = 
tmp
)

191 
tmp
->
°©e
=0;

192 
	}
}

194 
	$öãºu±ibÀ_¶ìp_⁄
(
èsk_°ru˘
 **
p
)

196 
	`__¶ìp_⁄
(
p
,
TASK_INTERRUPTIBLE
);

197 
	}
}

199 
	$¶ìp_⁄
(
èsk_°ru˘
 **
p
)

201 
	`__¶ìp_⁄
(
p
,
TASK_UNINTERRUPTIBLE
);

202 
	}
}

204 
	$wake_up
(
èsk_°ru˘
 **
p
)

206 i‡(
p
 && *p) {

207 i‡((**
p
).
°©e
 =
TASK_STOPPED
)

208 
	`¥ötk
("wake_up: TASK_STOPPED");

209 i‡((**
p
).
°©e
 =
TASK_ZOMBIE
)

210 
	`¥ötk
("wake_up: TASK_ZOMBIE");

211 (**
p
).
°©e
=0;

213 
	}
}

220 
èsk_°ru˘
 * 
	gwaô_mŸ‹
[4] = {
NULL
,NULL,NULL,NULL};

221 
	gm⁄_timî
[4]={0,0,0,0};

222 
	gmoff_timî
[4]={0,0,0,0};

223 
	gcuºít_DOR
 = 0x0C;

225 
	$ticks_to_Ê›py_⁄
(
ƒ
)

227 
£À˘ed
;

228 
mask
 = 0x10 << 
ƒ
;

230 i‡(
ƒ
>3)

231 
	`∑nic
("floppy_on:Çr>3");

232 
moff_timî
[
ƒ
]=10000;

233 
	`˛i
();

234 
mask
 |
cuºít_DOR
;

235 i‡(!
£À˘ed
) {

236 
mask
 &= 0xFC;

237 
mask
 |
ƒ
;

239 i‡(
mask
 !
cuºít_DOR
) {

240 
	`outb
(
mask
,
FD_DOR
);

241 i‡((
mask
 ^ 
cuºít_DOR
) & 0xf0)

242 
m⁄_timî
[
ƒ
] = 
HZ
/2;

243 i‡(
m⁄_timî
[
ƒ
] < 2)

244 
m⁄_timî
[
ƒ
] = 2;

245 
cuºít_DOR
 = 
mask
;

247 
	`°i
();

248  
m⁄_timî
[
ƒ
];

249 
	}
}

251 
	$Ê›py_⁄
(
ƒ
)

253 
	`˛i
();

254 
	`ticks_to_Ê›py_⁄
(
ƒ
))

255 
	`¶ìp_⁄
(
ƒ
+
waô_mŸ‹
);

256 
	`°i
();

257 
	}
}

259 
	$Ê›py_off
(
ƒ
)

261 
moff_timî
[
ƒ
]=3*
HZ
;

262 
	}
}

264 
	$do_Ê›py_timî
()

266 
i
;

267 
mask
 = 0x10;

269 
i
=0 ; i<4 ; i++,
mask
 <<= 1) {

270 i‡(!(
mask
 & 
cuºít_DOR
))

272 i‡(
m⁄_timî
[
i
]) {

273 i‡(!--
m⁄_timî
[
i
])

274 
	`wake_up
(
i
+
waô_mŸ‹
);

275 } i‡(!
moff_timî
[
i
]) {

276 
cuºít_DOR
 &~
mask
;

277 
	`outb
(
cuºít_DOR
,
FD_DOR
);

279 
moff_timî
[
i
]--;

281 
	}
}

283 
	#TIME_REQUESTS
 64

	)

285 
	stimî_li°
 {

286 
	mjiffõs
;

287 (*
	m‚
)();

288 
timî_li°
 * 
	m√xt
;

289 } 
	gtimî_li°
[
TIME_REQUESTS
], * 
	g√xt_timî
 = 
NULL
;

291 
add_timî
(
jiffõs
, (*
‚
)())

293 
timî_li°
 * 
p
;

295 i‡(!
‚
)

297 
	`˛i
();

298 i‡(
jiffõs
 <= 0)

299 (
‚
)();

301 
p
 = 
timî_li°
 ;Ö <Åimî_li° + 
TIME_REQUESTS
 ;Ö++)

302 i‡(!
p
->
‚
)

304 i‡(
p
 >
timî_li°
 + 
TIME_REQUESTS
)

305 
	`∑nic
("No moreÅimeÑequests free");

306 
p
->
‚
 = fn;

307 
p
->
jiffõs
 = jiffies;

308 
p
->
√xt
 = 
√xt_timî
;

309 
√xt_timî
 = 
p
;

310 
p
->
√xt
 &&Ö->√xt->
jiffõs
 <Ö->jiffies) {

311 
p
->
jiffõs
 -p->
√xt
->jiffies;

312 
‚
 = 
p
->fn;

313 
p
->
‚
 =Ö->
√xt
->fn;

314 
p
->
√xt
->
‚
 = fn;

315 
jiffõs
 = 
p
->jiffies;

316 
p
->
jiffõs
 =Ö->
√xt
->jiffies;

317 
p
->
√xt
->
jiffõs
 = jiffies;

318 
p
 =Ö->
√xt
;

321 
	`°i
();

322 
	}
}

324 
	$do_timî
(
˝l
)

326 
bœnked
 = 0;

328 i‡(
bœnkcou¡
 || !
bœnköãrvÆ
) {

329 i‡(
bœnked
)

330 
	`unbœnk_s¸ìn
();

331 i‡(
bœnkcou¡
)

332 
bœnkcou¡
--;

333 
bœnked
 = 0;

334 } i‡(!
bœnked
) {

335 
	`bœnk_s¸ìn
();

336 
bœnked
 = 1;

338 i‡(
hd_timeout
)

339 i‡(!--
hd_timeout
)

340 
	`hd_times_out
();

342 i‡(
bìpcou¡
)

343 i‡(!--
bìpcou¡
)

344 
	`sysbìp°›
();

346 i‡(
˝l
)

347 
cuºít
->
utime
++;

349 
cuºít
->
°ime
++;

351 i‡(
√xt_timî
) {

352 
√xt_timî
->
jiffõs
--;

353 
√xt_timî
 &&Çext_timî->
jiffõs
 <= 0) {

354 (*
‚
)();

356 
‚
 = 
√xt_timî
->fn;

357 
√xt_timî
->
‚
 = 
NULL
;

358 
√xt_timî
 =Çext_timî->
√xt
;

359 (
‚
)();

362 i‡(
cuºít_DOR
 & 0xf0)

363 
	`do_Ê›py_timî
();

364 i‡((--
cuºít
->
cou¡î
)>0) ;

365 
cuºít
->
cou¡î
=0;

366 i‡(!
˝l
) ;

367 
	`scheduÀ
();

368 
	}
}

370 
	$sys_Æ¨m
(
£c⁄ds
)

372 
ﬁd
 = 
cuºít
->
Æ¨m
;

374 i‡(
ﬁd
)

375 
ﬁd
 = (ﬁd - 
jiffõs
Ë/ 
HZ
;

376 
cuºít
->
Æ¨m
 = (
£c⁄ds
>0)?(
jiffõs
+
HZ
*seconds):0;

377  (
ﬁd
);

378 
	}
}

380 
	$sys_gëpid
()

382  
cuºít
->
pid
;

383 
	}
}

385 
	$sys_gëµid
()

387  
cuºít
->
p_µå
->
pid
;

388 
	}
}

390 
	$sys_gëuid
()

392  
cuºít
->
uid
;

393 
	}
}

395 
	$sys_gëeuid
()

397  
cuºít
->
euid
;

398 
	}
}

400 
	$sys_gëgid
()

402  
cuºít
->
gid
;

403 
	}
}

405 
	$sys_gëegid
()

407  
cuºít
->
egid
;

408 
	}
}

410 
	$sys_ni˚
(
ö¸emít
)

412 i‡(
cuºít
->
¥i‹ôy
-
ö¸emít
>0)

413 
cuºít
->
¥i‹ôy
 -
ö¸emít
;

415 
	}
}

417 
	$sched_öô
()

419 
i
;

420 
desc_°ru˘
 * 
p
;

422 i‡((
siga˘i⁄
) != 16)

423 
	`∑nic
("Struct sigaction MUST be 16 bytes");

424 
	`£t_tss_desc
(
gdt
+
FIRST_TSS_ENTRY
,&(
öô_èsk
.
èsk
.
tss
));

425 
	`£t_ldt_desc
(
gdt
+
FIRST_LDT_ENTRY
,&(
öô_èsk
.
èsk
.
ldt
));

426 
p
 = 
gdt
+2+
FIRST_TSS_ENTRY
;

427 
i
=1;i<
NR_TASKS
;i++) {

428 
èsk
[
i
] = 
NULL
;

429 
p
->
a
ı->
b
=0;

430 
p
++;

431 
p
->
a
ı->
b
=0;

432 
p
++;

435 
	`__asm__
("pushfl ;ándl $0xffffbfff,(%esp) ;Öopfl");

436 
	`…r
(0);

437 
	`Œdt
(0);

438 
	`outb_p
(0x36,0x43);

439 
	`outb_p
(
LATCH
 & 0xff , 0x40);

440 
	`outb
(
LATCH
 >> 8 , 0x40);

441 
	`£t_öå_g©e
(0x20,&
timî_öãºu±
);

442 
	`outb
(
	`öb_p
(0x21)&~0x01,0x21);

443 
	`£t_sy°em_g©e
(0x80,&
sy°em_ˇŒ
);

444 
	}
}

	@kernel/signal.c

7 
	~<löux/sched.h
>

8 
	~<löux/kî√l.h
>

9 
	~<asm/£gmít.h
>

11 
	~<sig«l.h
>

12 
	~<î∫o.h
>

14 
	$sys_sgëmask
()

16  
cuºít
->
blocked
;

17 
	}
}

19 
	$sys_s£tmask
(
√wmask
)

21 
ﬁd
=
cuºít
->
blocked
;

23 
cuºít
->
blocked
 = 
√wmask
 & ~(1<<(
SIGKILL
-1)Ë& ~(1<<(
SIGSTOP
-1));

24  
ﬁd
;

25 
	}
}

27 
	$sys_sig≥ndög
(
sig£t_t
 *
£t
)

30 
	`vîify_¨ó
(
£t
,4);

31 
	`put_fs_l⁄g
(
cuºít
->
blocked
 & cuºít->
sig«l
, (*)
£t
);

33 
	}
}

48 
	$sys_sigsu•íd
(
ª°¨t
, 
ﬁd_mask
, 
£t
)

50 
	`sys_∑u£
();

52 i‡(
ª°¨t
) {

54 
cuºít
->
blocked
 = 
ﬁd_mask
;

55  -
EINTR
;

58 *(&
ª°¨t
) = 1;

59 *(&
ﬁd_mask
Ë
cuºít
->
blocked
;

60 
cuºít
->
blocked
 = 
£t
;

61 (Ë
	`sys_∑u£
();

62  -
ERESTARTNOINTR
;

63 
	}
}

65 
ölöe
 
	$ßve_ﬁd
(* 
‰om
,* 
to
)

67 
i
;

69 
	`vîify_¨ó
(
to
, (
siga˘i⁄
));

70 
i
=0 ; i< (
siga˘i⁄
) ; i++) {

71 
	`put_fs_byã
(*
‰om
,
to
);

72 
‰om
++;

73 
to
++;

75 
	}
}

77 
ölöe
 
	$gë_√w
(* 
‰om
,* 
to
)

79 
i
;

81 
i
=0 ; i< (
siga˘i⁄
) ; i++)

82 *(
to
++Ë
	`gë_fs_byã
(
‰om
++);

83 
	}
}

85 
	$sys_sig«l
(
signum
, 
h™dÀr
, 
ª°‹î
)

87 
siga˘i⁄
 
tmp
;

89 i‡(
signum
<1 || signum>32 || signum==
SIGKILL
 || signum==
SIGSTOP
)

90  -
EINVAL
;

91 
tmp
.
ß_h™dÀr
 = ((*)()Ë
h™dÀr
;

92 
tmp
.
ß_mask
 = 0;

93 
tmp
.
ß_Êags
 = 
SA_ONESHOT
 | 
SA_NOMASK
;

94 
tmp
.
ß_ª°‹î
 = ((*)()Ë
ª°‹î
;

95 
h™dÀr
 = (Ë
cuºít
->
siga˘i⁄
[
signum
-1].
ß_h™dÀr
;

96 
cuºít
->
siga˘i⁄
[
signum
-1] = 
tmp
;

97  
h™dÀr
;

98 
	}
}

100 
	$sys_siga˘i⁄
(
signum
, c⁄° 
siga˘i⁄
 * 
a˘i⁄
,

101 
siga˘i⁄
 * 
ﬁda˘i⁄
)

103 
siga˘i⁄
 
tmp
;

105 i‡(
signum
<1 || signum>32 || signum==
SIGKILL
 || signum==
SIGSTOP
)

106  -
EINVAL
;

107 
tmp
 = 
cuºít
->
siga˘i⁄
[
signum
-1];

108 
	`gë_√w
((*Ë
a˘i⁄
,

109 (*Ë(
signum
-1+
cuºít
->
siga˘i⁄
));

110 i‡(
ﬁda˘i⁄
)

111 
	`ßve_ﬁd
((*Ë&
tmp
,(*Ë
ﬁda˘i⁄
);

112 i‡(
cuºít
->
siga˘i⁄
[
signum
-1].
ß_Êags
 & 
SA_NOMASK
)

113 
cuºít
->
siga˘i⁄
[
signum
-1].
ß_mask
 = 0;

115 
cuºít
->
siga˘i⁄
[
signum
-1].
ß_mask
 |= (1<<(signum-1));

117 
	}
}

123 
	$c‹e_dump
(
sigƒ
)

126 
	}
}

128 
	$do_sig«l
(
sigƒ
,
óx
,
ebx
, 
ecx
, 
edx
, 
‹ig_óx
,

129 
fs
, 
es
, 
ds
,

130 
eù
, 
cs
, 
eÊags
,

131 * 
e•
, 
ss
)

133 
ß_h™dÀr
;

134 
ﬁd_eù
=
eù
;

135 
siga˘i⁄
 * 
ß
 = 
cuºít
->siga˘i⁄ + 
sigƒ
 - 1;

136 
l⁄gs
;

138 * 
tmp_e•
;

140 #ifde‡
nŸdef


141 
	`¥ötk
("pid: %d, signr: %x,Éax=%d, oeax = %d, int=%d\n",

142 
cuºít
->
pid
, 
sigƒ
, 
óx
, 
‹ig_óx
,

143 
ß
->
ß_Êags
 & 
SA_INTERRUPT
);

145 i‡((
‹ig_óx
 != -1) &&

146 ((
óx
 =-
ERESTARTSYS
Ë|| (óx =-
ERESTARTNOINTR
))) {

147 i‡((
óx
 =-
ERESTARTSYS
Ë&& ((
ß
->
ß_Êags
 & 
SA_INTERRUPT
) ||

148 
sigƒ
 < 
SIGCONT
 || sigƒ > 
SIGTTOU
))

149 *(&
óx
Ë-
EINTR
;

151 *(&
óx
Ë
‹ig_óx
;

152 *(&
eù
Ë
ﬁd_eù
 -= 2;

155 
ß_h™dÀr
 = (Ë
ß
->sa_handler;

156 i‡(
ß_h™dÀr
==1)

158 i‡(!
ß_h™dÀr
) {

159 
sigƒ
) {

160 
SIGCONT
:

161 
SIGCHLD
:

164 
SIGSTOP
:

165 
SIGTSTP
:

166 
SIGTTIN
:

167 
SIGTTOU
:

168 
cuºít
->
°©e
 = 
TASK_STOPPED
;

169 
cuºít
->
exô_code
 = 
sigƒ
;

170 i‡(!(
cuºít
->
p_µå
->
siga˘i⁄
[
SIGCHLD
-1].
ß_Êags
 &

171 
SA_NOCLDSTOP
))

172 
cuºít
->
p_µå
->
sig«l
 |(1<<(
SIGCHLD
-1));

175 
SIGQUIT
:

176 
SIGILL
:

177 
SIGTRAP
:

178 
SIGIOT
:

179 
SIGFPE
:

180 
SIGSEGV
:

181 i‡(
	`c‹e_dump
(
sigƒ
))

182 
	`do_exô
(
sigƒ
|0x80);

185 
	`do_exô
(
sigƒ
);

191 i‡(
ß
->
ß_Êags
 & 
SA_ONESHOT
)

192 
ß
->
ß_h™dÀr
 = 
NULL
;

193 *(&
eù
Ë
ß_h™dÀr
;

194 
l⁄gs
 = (
ß
->
ß_Êags
 & 
SA_NOMASK
)?7:8;

195 *(&
e•
Ë-
l⁄gs
;

196 
	`vîify_¨ó
(
e•
,
l⁄gs
*4);

197 
tmp_e•
=
e•
;

198 
	`put_fs_l⁄g
((Ë
ß
->
ß_ª°‹î
,
tmp_e•
++);

199 
	`put_fs_l⁄g
(
sigƒ
,
tmp_e•
++);

200 i‡(!(
ß
->
ß_Êags
 & 
SA_NOMASK
))

201 
	`put_fs_l⁄g
(
cuºít
->
blocked
,
tmp_e•
++);

202 
	`put_fs_l⁄g
(
óx
,
tmp_e•
++);

203 
	`put_fs_l⁄g
(
ecx
,
tmp_e•
++);

204 
	`put_fs_l⁄g
(
edx
,
tmp_e•
++);

205 
	`put_fs_l⁄g
(
eÊags
,
tmp_e•
++);

206 
	`put_fs_l⁄g
(
ﬁd_eù
,
tmp_e•
++);

207 
cuºít
->
blocked
 |
ß
->
ß_mask
;

209 
	}
}

	@kernel/sys.c

7 
	~<î∫o.h
>

9 
	~<löux/sched.h
>

10 
	~<löux/ây.h
>

11 
	~<löux/kî√l.h
>

12 
	~<löux/c⁄fig.h
>

13 
	~<asm/£gmít.h
>

14 
	~<sys/times.h
>

15 
	~<sys/ut¢ame.h
>

16 
	~<sys/∑øm.h
>

17 
	~<sys/ªsour˚.h
>

18 
	~<°rög.h
>

24 
timez⁄e
 
	gsys_tz
 = { 0, 0};

26 
£ssi⁄_of_pgΩ
(
pgΩ
);

28 
	$sys_·ime
()

30  -
ENOSYS
;

31 
	}
}

33 
	$sys_bªak
()

35  -
ENOSYS
;

36 
	}
}

38 
	$sys_±ø˚
()

40  -
ENOSYS
;

41 
	}
}

43 
	$sys_°ty
()

45  -
ENOSYS
;

46 
	}
}

48 
	$sys_gây
()

50  -
ENOSYS
;

51 
	}
}

53 
	$sys_ª«me
()

55  -
ENOSYS
;

56 
	}
}

58 
	$sys_¥of
()

60  -
ENOSYS
;

61 
	}
}

74 
	$sys_£åegid
(
rgid
, 
egid
)

76 i‡(
rgid
>0) {

77 i‡((
cuºít
->
gid
 =
rgid
) ||

78 
	`su£r
())

79 
cuºít
->
gid
 = 
rgid
;

81 (-
EPERM
);

83 i‡(
egid
>0) {

84 i‡((
cuºít
->
gid
 =
egid
) ||

85 (
cuºít
->
egid
 ==Égid) ||

86 
	`su£r
()) {

87 
cuºít
->
egid
 =Égid;

88 
cuºít
->
sgid
 = 
egid
;

90 (-
EPERM
);

93 
	}
}

98 
	$sys_£tgid
(
gid
)

100 i‡(
	`su£r
())

101 
cuºít
->
gid
 = cuºít->
egid
 = cuºít->
sgid
 = gid;

102 i‡((
gid
 =
cuºít
->gidË|| (gid =cuºít->
sgid
))

103 
cuºít
->
egid
 = 
gid
;

105  -
EPERM
;

107 
	}
}

109 
	$sys_ac˘
()

111  -
ENOSYS
;

112 
	}
}

114 
	$sys_phys
()

116  -
ENOSYS
;

117 
	}
}

119 
	$sys_lock
()

121  -
ENOSYS
;

122 
	}
}

124 
	$sys_mpx
()

126  -
ENOSYS
;

127 
	}
}

129 
	$sys_ulimô
()

131  -
ENOSYS
;

132 
	}
}

134 
	$sys_time
(* 
éoc
)

136 
i
;

138 
i
 = 
CURRENT_TIME
;

139 i‡(
éoc
) {

140 
	`vîify_¨ó
(
éoc
,4);

141 
	`put_fs_l⁄g
(
i
,(*)
éoc
);

143  
i
;

144 
	}
}

159 
	$sys_£åeuid
(
ruid
, 
euid
)

161 
ﬁd_ruid
 = 
cuºít
->
uid
;

163 i‡(
ruid
>0) {

164 i‡((
cuºít
->
euid
==
ruid
) ||

165 (
ﬁd_ruid
 =
ruid
) ||

166 
	`su£r
())

167 
cuºít
->
uid
 = 
ruid
;

169 (-
EPERM
);

171 i‡(
euid
>0) {

172 i‡((
ﬁd_ruid
 =
euid
) ||

173 (
cuºít
->
euid
 ==Éuid) ||

174 
	`su£r
()) {

175 
cuºít
->
euid
 =Éuid;

176 
cuºít
->
suid
 = 
euid
;

178 
cuºít
->
uid
 = 
ﬁd_ruid
;

179 (-
EPERM
);

183 
	}
}

196 
	$sys_£tuid
(
uid
)

198 i‡(
	`su£r
())

199 
cuºít
->
uid
 = cuºít->
euid
 = cuºít->
suid
 = uid;

200 i‡((
uid
 =
cuºít
->uidË|| (uid =cuºít->
suid
))

201 
cuºít
->
euid
 = 
uid
;

203  -
EPERM
;

205 
	}
}

207 
	$sys_°ime
(* 
çå
)

209 i‡(!
	`su£r
())

210  -
EPERM
;

211 
°¨tup_time
 = 
	`gë_fs_l⁄g
((*)
çå
Ë- 
jiffõs
/
HZ
;

212 
jiffõs_off£t
 = 0;

214 
	}
}

216 
	$sys_times
(
tms
 * 
tbuf
)

218 i‡(
tbuf
) {

219 
	`vîify_¨ó
(
tbuf
, *tbuf);

220 
	`put_fs_l⁄g
(
cuºít
->
utime
,(*)&
tbuf
->
tms_utime
);

221 
	`put_fs_l⁄g
(
cuºít
->
°ime
,(*)&
tbuf
->
tms_°ime
);

222 
	`put_fs_l⁄g
(
cuºít
->
cutime
,(*)&
tbuf
->
tms_cutime
);

223 
	`put_fs_l⁄g
(
cuºít
->
c°ime
,(*)&
tbuf
->
tms_c°ime
);

225  
jiffõs
;

226 
	}
}

228 
	$sys_brk
(
íd_d©a_£g
)

230 i‡(
íd_d©a_£g
 >
cuºít
->
íd_code
 &&

231 
íd_d©a_£g
 < 
cuºít
->
°¨t_°ack
 - 16384)

232 
cuºít
->
brk
 = 
íd_d©a_£g
;

233  
cuºít
->
brk
;

234 
	}
}

245 
	$sys_£çgid
(
pid
, 
pgid
)

247 
i
;

249 i‡(!
pid
)

250 
pid
 = 
cuºít
->pid;

251 i‡(!
pgid
)

252 
pgid
 = 
cuºít
->
pid
;

253 i‡(
pgid
 < 0)

254  -
EINVAL
;

255 
i
=0 ; i<
NR_TASKS
 ; i++)

256 i‡(
èsk
[
i
] && (èsk[i]->
pid
 ==Öid) &&

257 ((
èsk
[
i
]->
p_µå
 =
cuºít
) ||

258 (
èsk
[
i
] =
cuºít
))) {

259 i‡(
èsk
[
i
]->
Àadî
)

260  -
EPERM
;

261 i‡((
èsk
[
i
]->
£ssi⁄
 !
cuºít
->session) ||

262 ((
pgid
 !
pid
) &&

263 (
	`£ssi⁄_of_pgΩ
(
pgid
Ë!
cuºít
->
£ssi⁄
)))

264  -
EPERM
;

265 
èsk
[
i
]->
pgΩ
 = 
pgid
;

268  -
ESRCH
;

269 
	}
}

271 
	$sys_gëpgΩ
()

273  
cuºít
->
pgΩ
;

274 
	}
}

276 
	$sys_£tsid
()

278 i‡(
cuºít
->
Àadî
 && !
	`su£r
())

279  -
EPERM
;

280 
cuºít
->
Àadî
 = 1;

281 
cuºít
->
£ssi⁄
 = cuºít->
pgΩ
 = cuºít->
pid
;

282 
cuºít
->
ây
 = -1;

283  
cuºít
->
pgΩ
;

284 
	}
}

289 
	$sys_gëgroups
(
gid£tsize
, 
gid_t
 *
grou∂i°
)

291 
i
;

293 i‡(
gid£tsize
)

294 
	`vîify_¨ó
(
grou∂i°
, (
gid_t
Ë* 
gid£tsize
);

296 
i
 = 0; (ò< 
NGROUPS
Ë&& (
cuºít
->
groups
[i] !
NOGROUP
);

297 
i
++, 
grou∂i°
++) {

298 i‡(
gid£tsize
) {

299 i‡(
i
 >
gid£tsize
)

300  -
EINVAL
;

301 
	`put_fs_w‹d
(
cuºít
->
groups
[
i
], (*Ë
grou∂i°
);

304 (
i
);

305 
	}
}

307 
	$sys_£tgroups
(
gid£tsize
, 
gid_t
 *
grou∂i°
)

309 
i
;

311 i‡(!
	`su£r
())

312  -
EPERM
;

313 i‡(
gid£tsize
 > 
NGROUPS
)

314  -
EINVAL
;

315 
i
 = 0; i < 
gid£tsize
; i++, 
grou∂i°
++) {

316 
cuºít
->
groups
[
i
] = 
	`gë_fs_w‹d
((*Ë
grou∂i°
);

318 i‡(
i
 < 
NGROUPS
)

319 
cuºít
->
groups
[
i
] = 
NOGROUP
;

321 
	}
}

323 
	$ö_group_p
(
gid_t
 
gΩ
)

325 
i
;

327 i‡(
gΩ
 =
cuºít
->
egid
)

330 
i
 = 0; i < 
NGROUPS
; i++) {

331 i‡(
cuºít
->
groups
[
i
] =
NOGROUP
)

333 i‡(
cuºít
->
groups
[
i
] =
gΩ
)

337 
	}
}

339 
ut¢ame
 
	gthi¢ame
 = {

340 
UTS_SYSNAME
, 
UTS_NODENAME
, 
UTS_RELEASE
, 
UTS_VERSION
, 
UTS_MACHINE


343 
	$sys_u«me
(
ut¢ame
 * 
«me
)

345 
i
;

347 i‡(!
«me
Ë -
ERROR
;

348 
	`vîify_¨ó
(
«me
, *name);

349 
i
=0;i< *
«me
;i++)

350 
	`put_fs_byã
(((*Ë&
thi¢ame
)[
i
],i+(*Ë
«me
);

352 
	}
}

357 
	$sys_£tho°«me
(*
«me
, 
Àn
)

359 
i
;

361 i‡(!
	`su£r
())

362  -
EPERM
;

363 i‡(
Àn
 > 
MAXHOSTNAMELEN
)

364  -
EINVAL
;

365 
i
=0; i < 
Àn
; i++) {

366 i‡((
thi¢ame
.
nodíame
[
i
] = 
	`gë_fs_byã
(
«me
+i)) == 0)

369 i‡(
thi¢ame
.
nodíame
[
i
]) {

370 
thi¢ame
.
nodíame
[
i
>
MAXHOSTNAMELEN
 ? MAXHOSTNAMELEN : i] = 0;

373 
	}
}

375 
	$sys_gëæimô
(
ªsour˚
, 
æimô
 *
æim
)

377 i‡(
ªsour˚
 >
RLIM_NLIMITS
)

378  -
EINVAL
;

379 
	`vîify_¨ó
(
æim
, *rlim);

380 
	`put_fs_l⁄g
(
cuºít
->
æim
[
ªsour˚
].
æim_cur
,

381 (*Ë
æim
);

382 
	`put_fs_l⁄g
(
cuºít
->
æim
[
ªsour˚
].
æim_max
,

383 ((*Ë
æim
)+1);

385 
	}
}

387 
	$sys_£ålimô
(
ªsour˚
, 
æimô
 *
æim
)

389 
æimô
 
√w
, *
ﬁd
;

391 i‡(
ªsour˚
 >
RLIM_NLIMITS
)

392  -
EINVAL
;

393 
ﬁd
 = 
cuºít
->
æim
 + 
ªsour˚
;

394 
√w
.
æim_cur
 = 
	`gë_fs_l⁄g
((*Ë
æim
);

395 
√w
.
æim_max
 = 
	`gë_fs_l⁄g
(((*Ë
æim
)+1);

396 i‡(((
√w
.
æim_cur
 > 
ﬁd
->
æim_max
) ||

397 (
√w
.
æim_max
 > 
ﬁd
->rlim_max)) &&

398 !
	`su£r
())

399  -
EPERM
;

400 *
ﬁd
 = 
√w
;

402 
	}
}

412 
	$sys_gërußge
(
who
, 
rußge
 *
ru
)

414 
rußge
 
r
;

415 *
Õ
, *
Õíd
, *
de°
;

417 i‡(
who
 !
RUSAGE_SELF
 && whÿ!
RUSAGE_CHILDREN
)

418  -
EINVAL
;

419 
	`vîify_¨ó
(
ru
,  *ru);

420 
	`mem£t
((*Ë&
r
, 0, (r));

421 i‡(
who
 =
RUSAGE_SELF
) {

422 
r
.
ru_utime
.
tv_£c
 = 
	`CT_TO_SECS
(
cuºít
->
utime
);

423 
r
.
ru_utime
.
tv_u£c
 = 
	`CT_TO_USECS
(
cuºít
->
utime
);

424 
r
.
ru_°ime
.
tv_£c
 = 
	`CT_TO_SECS
(
cuºít
->
°ime
);

425 
r
.
ru_°ime
.
tv_u£c
 = 
	`CT_TO_USECS
(
cuºít
->
°ime
);

427 
r
.
ru_utime
.
tv_£c
 = 
	`CT_TO_SECS
(
cuºít
->
cutime
);

428 
r
.
ru_utime
.
tv_u£c
 = 
	`CT_TO_USECS
(
cuºít
->
cutime
);

429 
r
.
ru_°ime
.
tv_£c
 = 
	`CT_TO_SECS
(
cuºít
->
c°ime
);

430 
r
.
ru_°ime
.
tv_u£c
 = 
	`CT_TO_USECS
(
cuºít
->
c°ime
);

432 
Õ
 = (*Ë&
r
;

433 
Õíd
 = (*Ë(&
r
+1);

434 
de°
 = (*Ë
ru
;

435 ; 
Õ
 < 
Õíd
;Üp++, 
de°
++)

436 
	`put_fs_l⁄g
(*
Õ
, 
de°
);

438 
	}
}

440 
	$sys_gëtimeofday
(
timevÆ
 *
tv
, 
timez⁄e
 *
tz
)

442 i‡(
tv
) {

443 
	`vîify_¨ó
(
tv
,  *tv);

444 
	`put_fs_l⁄g
(
°¨tup_time
 + 
	`CT_TO_SECS
(
jiffõs
+
jiffõs_off£t
),

445 (*Ë
tv
);

446 
	`put_fs_l⁄g
(
	`CT_TO_USECS
(
jiffõs
+
jiffõs_off£t
),

447 ((*Ë
tv
)+1);

449 i‡(
tz
) {

450 
	`vîify_¨ó
(
tz
,  *tz);

451 
	`put_fs_l⁄g
(
sys_tz
.
tz_möuãswe°
, (*Ë
tz
);

452 
	`put_fs_l⁄g
(
sys_tz
.
tz_d°time
, ((*Ë
tz
)+1);

455 
	}
}

466 
	$sys_£âimeofday
(
timevÆ
 *
tv
, 
timez⁄e
 *
tz
)

468 
fú°time
 = 1;

469 
	`adju°_˛ock
();

471 i‡(!
	`su£r
())

472  -
EPERM
;

473 i‡(
tz
) {

474 
sys_tz
.
tz_möuãswe°
 = 
	`gë_fs_l⁄g
((*Ë
tz
);

475 
sys_tz
.
tz_d°time
 = 
	`gë_fs_l⁄g
(((*Ë
tz
)+1);

476 i‡(
fú°time
) {

477 
fú°time
 = 0;

478 i‡(!
tv
)

479 
	`adju°_˛ock
();

482 i‡(
tv
) {

483 
£c
, 
u£c
;

485 
£c
 = 
	`gë_fs_l⁄g
((*)
tv
);

486 
u£c
 = 
	`gë_fs_l⁄g
(((*)
tv
)+1);

488 
°¨tup_time
 = 
£c
 - 
jiffõs
/
HZ
;

489 
jiffõs_off£t
 = 
u£c
 * 
HZ
 / 1000000 - 
jiffõs
%HZ;

492 
	}
}

510 
	$adju°_˛ock
()

512 
°¨tup_time
 +
sys_tz
.
tz_möuãswe°
*60;

513 
	}
}

515 
	$sys_umask
(
mask
)

517 
ﬁd
 = 
cuºít
->
umask
;

519 
cuºít
->
umask
 = 
mask
 & 0777;

520  (
ﬁd
);

521 
	}
}

	@kernel/traps.c

13 
	~<°rög.h
>

15 
	~<löux/hód.h
>

16 
	~<löux/sched.h
>

17 
	~<löux/kî√l.h
>

18 
	~<asm/sy°em.h
>

19 
	~<asm/£gmít.h
>

20 
	~<asm/io.h
>

22 
	#gë_£g_byã
(
£g
,
addr
) ({ \

23 
__ªs
; \

24 
	`__asm__
("push %%fs;mov %%ax,%%fs;movb %%fs:%2,%%al;pop %%fs" \

25 :"˜" (
__ªs
):"0" (
£g
),"m" (*(
addr
))); \

26 
__ªs
;})

	)

28 
	#gë_£g_l⁄g
(
£g
,
addr
) ({ \

29 
__ªs
; \

30 
	`__asm__
("push %%fs;mov %%ax,%%fs;movl %%fs:%2,%%eax;pop %%fs" \

31 :"˜" (
__ªs
):"0" (
£g
),"m" (*(
addr
))); \

32 
__ªs
;})

	)

34 
	#_fs
() ({ \

35 
__ªs
; \

36 
	`__asm__
("mov %%fs,%%ax":"˜" (
__ªs
):); \

37 
__ªs
;})

	)

39 
∑ge_ex˚±i⁄
();

41 
divide_îr‹
();

42 
debug
();

43 
nmi
();

44 
öt3
();

45 
ovîÊow
();

46 
bounds
();

47 
övÆid_›
();

48 
devi˚_nŸ_avaûabÀ
();

49 
doubÀ_Áu…
();

50 
c›ro˚ss‹_£gmít_ovîrun
();

51 
övÆid_TSS
();

52 
£gmít_nŸ_¥e£¡
();

53 
°ack_£gmít
();

54 
gíîÆ_¥Ÿe˘i⁄
();

55 
∑ge_Áu…
();

56 
c›ro˚ss‹_îr‹
();

57 
ª£rved
();

58 
∑øŒñ_öãºu±
();

59 
úq13
();

60 
Æignmít_check
();

62 
	$dõ
(* 
°r
,
e•_±r
,
ƒ
)

64 * 
e•
 = (*Ë
e•_±r
;

65 
i
;

67 
	`¥ötk
("%s: %04x\n\r",
°r
,
ƒ
&0xffff);

68 
	`¥ötk
("EIP:\t%04x:%p\nEFLAGS:\t%p\nESP:\t%04x:%p\n",

69 
e•
[1],esp[0],esp[2],esp[4],esp[3]);

70 
	`¥ötk
("fs: %04x\n",
	`_fs
());

71 
	`¥ötk
("ba£: %p,Üimô: %p\n",
	`gë_ba£
(
cuºít
->
ldt
[1]),
	`gë_limô
(0x17));

72 i‡(
e•
[4] == 0x17) {

73 
	`¥ötk
("Stack: ");

74 
i
=0;i<4;i++)

75 
	`¥ötk
("%∞",
	`gë_£g_l⁄g
(0x17,
i
+(*)
e•
[3]));

76 
	`¥ötk
("\n");

78 
	`°r
(
i
);

79 
	`¥ötk
("Pid: %d,Öro˚s†ƒ: %d\n\r",
cuºít
->
pid
,0xfff‡& 
i
);

80 
i
=0;i<10;i++)

81 
	`¥ötk
("%02x ",0xf‡& 
	`gë_£g_byã
(
e•
[1],(
i
+(*)esp[0])));

82 
	`¥ötk
("\n\r");

83 
	`do_exô
(11);

84 
	}
}

86 
	$do_doubÀ_Áu…
(
e•
, 
îr‹_code
)

88 
	`dõ
("doubÀ fau…",
e•
,
îr‹_code
);

89 
	}
}

91 
	$do_gíîÆ_¥Ÿe˘i⁄
(
e•
, 
îr‹_code
)

93 
	`dõ
("gíîÆÖrŸe˘i⁄",
e•
,
îr‹_code
);

94 
	}
}

96 
	$do_Æignmít_check
(
e•
, 
îr‹_code
)

98 
	`dõ
("Æignmíàcheck",
e•
,
îr‹_code
);

99 
	}
}

101 
	$do_divide_îr‹
(
e•
, 
îr‹_code
)

103 
	`dõ
("dividêîr‹",
e•
,
îr‹_code
);

104 
	}
}

106 
	$do_öt3
(* 
e•
, 
îr‹_code
,

107 
fs
,
es
,
ds
,

108 
ebp
,
esi
,
edi
,

109 
edx
,
ecx
,
ebx
,
óx
)

111 
å
;

113 
	`__asm__
("°∏%%ax":"˜" (
å
):"0" (0));

114 
	`¥ötk
("eax\t\tebx\t\tecx\t\tedx\n\r%8x\t%8x\t%8x\t%8x\n\r",

115 
óx
,
ebx
,
ecx
,
edx
);

116 
	`¥ötk
("esi\t\tedi\t\tebp\t\tesp\n\r%8x\t%8x\t%8x\t%8x\n\r",

117 
esi
,
edi
,
ebp
,(Ë
e•
);

118 
	`¥ötk
("\n\rds\tes\tfs\ttr\n\r%4x\t%4x\t%4x\t%4x\n\r",

119 
ds
,
es
,
fs
,
å
);

120 
	`¥ötk
("EIP: %8x CS: %4x EFLAGS: %8x\n\r",
e•
[0],esp[1],esp[2]);

121 
	}
}

123 
	$do_nmi
(
e•
, 
îr‹_code
)

125 
	`dõ
("nmi",
e•
,
îr‹_code
);

126 
	}
}

128 
	$do_debug
(
e•
, 
îr‹_code
)

130 
	`dõ
("debug",
e•
,
îr‹_code
);

131 
	}
}

133 
	$do_ovîÊow
(
e•
, 
îr‹_code
)

135 
	`dõ
("ovîÊow",
e•
,
îr‹_code
);

136 
	}
}

138 
	$do_bounds
(
e•
, 
îr‹_code
)

140 
	`dõ
("bounds",
e•
,
îr‹_code
);

141 
	}
}

143 
	$do_övÆid_›
(
e•
, 
îr‹_code
)

145 
	`dõ
("övÆid o≥ønd",
e•
,
îr‹_code
);

146 
	}
}

148 
	$do_devi˚_nŸ_avaûabÀ
(
e•
, 
îr‹_code
)

150 
	`dõ
("devi˚ÇŸávaûabÀ",
e•
,
îr‹_code
);

151 
	}
}

153 
	$do_c›ro˚ss‹_£gmít_ovîrun
(
e•
, 
îr‹_code
)

155 
	`dõ
("c›ro˚ss‹ segmíàovîrun",
e•
,
îr‹_code
);

156 
	}
}

158 
	$do_övÆid_TSS
(
e•
,
îr‹_code
)

160 
	`dõ
("övÆid TSS",
e•
,
îr‹_code
);

161 
	}
}

163 
	$do_£gmít_nŸ_¥e£¡
(
e•
,
îr‹_code
)

165 
	`dõ
("£gmíànŸÖª£¡",
e•
,
îr‹_code
);

166 
	}
}

168 
	$do_°ack_£gmít
(
e•
,
îr‹_code
)

170 
	`dõ
("°ack segmít",
e•
,
îr‹_code
);

171 
	}
}

173 
	$do_c›ro˚ss‹_îr‹
(
e•
, 
îr‹_code
)

175 i‡(
œ°_èsk_u£d_m©h
 !
cuºít
)

177 
	`dõ
("c›ro˚ss‹Éº‹",
e•
,
îr‹_code
);

178 
	}
}

180 
	$do_ª£rved
(
e•
, 
îr‹_code
)

182 
	`dõ
("ª£rved (15,17-47Ëîr‹",
e•
,
îr‹_code
);

183 
	}
}

185 
	$å≠_öô
()

187 
i
;

189 
	`£t_å≠_g©e
(0,&
divide_îr‹
);

190 
	`£t_å≠_g©e
(1,&
debug
);

191 
	`£t_å≠_g©e
(2,&
nmi
);

192 
	`£t_sy°em_g©e
(3,&
öt3
);

193 
	`£t_sy°em_g©e
(4,&
ovîÊow
);

194 
	`£t_sy°em_g©e
(5,&
bounds
);

195 
	`£t_å≠_g©e
(6,&
övÆid_›
);

196 
	`£t_å≠_g©e
(7,&
devi˚_nŸ_avaûabÀ
);

197 
	`£t_å≠_g©e
(8,&
doubÀ_Áu…
);

198 
	`£t_å≠_g©e
(9,&
c›ro˚ss‹_£gmít_ovîrun
);

199 
	`£t_å≠_g©e
(10,&
övÆid_TSS
);

200 
	`£t_å≠_g©e
(11,&
£gmít_nŸ_¥e£¡
);

201 
	`£t_å≠_g©e
(12,&
°ack_£gmít
);

202 
	`£t_å≠_g©e
(13,&
gíîÆ_¥Ÿe˘i⁄
);

203 
	`£t_å≠_g©e
(14,&
∑ge_Áu…
);

204 
	`£t_å≠_g©e
(15,&
ª£rved
);

205 
	`£t_å≠_g©e
(16,&
c›ro˚ss‹_îr‹
);

206 
	`£t_å≠_g©e
(17,&
Æignmít_check
);

207 
i
=18;i<48;i++)

208 
	`£t_å≠_g©e
(
i
,&
ª£rved
);

209 
	`£t_å≠_g©e
(45,&
úq13
);

210 
	`outb_p
(
	`öb_p
(0x21)&0xfb,0x21);

211 
	`outb
(
	`öb_p
(0xA1)&0xdf,0xA1);

212 
	`£t_å≠_g©e
(39,&
∑øŒñ_öãºu±
);

213 
	}
}

	@kernel/vsprintf.c

12 
	~<°d¨g.h
>

13 
	~<°rög.h
>

16 
	#is_digô
(
c
Ë((cË>'0' && (cË<'9')

	)

18 
	$skù_©oi
(c⁄° **
s
)

20 
i
=0;

22 
	`is_digô
(**
s
))

23 
i
 = i*10 + *((*
s
)++) - '0';

24  
i
;

25 
	}
}

27 
	#ZEROPAD
 1

	)

28 
	#SIGN
 2

	)

29 
	#PLUS
 4

	)

30 
	#SPACE
 8

	)

31 
	#LEFT
 16

	)

32 
	#SPECIAL
 32

	)

33 
	#SMALL
 64

	)

35 
	#do_div
(
n
,
ba£
) ({ \

36 
__ªs
; \

37 
	`__asm__
("div»%4":"˜" (
n
),"=d" (
__ªs
):"0" (n),"1" (0),"r" (
ba£
)); \

38 
__ªs
; })

	)

40 * 
	$numbî
(* 
°r
, 
num
, 
ba£
, 
size
, 
¥ecisi⁄


41 ,
ty≥
)

43 
c
,
sign
,
tmp
[36];

44 c⁄° *
digôs
="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";

45 
i
;

47 i‡(
ty≥
&
SMALL
Ë
digôs
="0123456789abcdefghijklmnopqrstuvwxyz";

48 i‡(
ty≥
&
LEFT
Ëty≥ &~
ZEROPAD
;

49 i‡(
ba£
<2 || base>36)

51 
c
 = (
ty≥
 & 
ZEROPAD
) ? '0' : ' ' ;

52 i‡(
ty≥
&
SIGN
 && 
num
<0) {

53 
sign
='-';

54 
num
 = -num;

56 
sign
=(
ty≥
&
PLUS
Ë? '+' : (—y≥&
SPACE
) ? ' ' : 0);

57 i‡(
sign
Ë
size
--;

58 i‡(
ty≥
&
SPECIAL
)

59 i‡(
ba£
==16Ë
size
 -= 2;

60 i‡(
ba£
==8Ë
size
--;

61 
i
=0;

62 i‡(
num
==0)

63 
tmp
[
i
++]='0';

64 
num
!=0)

65 
tmp
[
i
++]=
digôs
[
	`do_div
(
num
,
ba£
)];

66 i‡(
i
>
¥ecisi⁄
)Örecision=i;

67 
size
 -
¥ecisi⁄
;

68 i‡(!(
ty≥
&(
ZEROPAD
+
LEFT
)))

69 
size
-->0)

70 *
°r
++ = ' ';

71 i‡(
sign
)

72 *
°r
++ = 
sign
;

73 i‡(
ty≥
&
SPECIAL
)

74 i‡(
ba£
==8)

75 *
°r
++ = '0';

76 i‡(
ba£
==16) {

77 *
°r
++ = '0';

78 *
°r
++ = 
digôs
[33];

80 i‡(!(
ty≥
&
LEFT
))

81 
size
-->0)

82 *
°r
++ = 
c
;

83 
i
<
¥ecisi⁄
--)

84 *
°r
++ = '0';

85 
i
-->0)

86 *
°r
++ = 
tmp
[
i
];

87 
size
-->0)

88 *
°r
++ = ' ';

89  
°r
;

90 
	}
}

92 
	$v•rötf
(*
buf
, c⁄° *
fmt
, 
va_li°
 
¨gs
)

94 
Àn
;

95 
i
;

96 * 
°r
;

97 *
s
;

98 *
ù
;

100 
Êags
;

102 
fõld_width
;

103 
¥ecisi⁄
;

105 
quÆifõr
;

107 
°r
=
buf
 ; *
fmt
 ; ++fmt) {

108 i‡(*
fmt
 != '%') {

109 *
°r
++ = *
fmt
;

114 
Êags
 = 0;

115 
ª≥©
:

116 ++
fmt
;

117 *
fmt
) {

118 '-': 
Êags
 |
LEFT
; 
ª≥©
;

119 '+': 
Êags
 |
PLUS
; 
ª≥©
;

120 ' ': 
Êags
 |
SPACE
; 
ª≥©
;

121 '#': 
Êags
 |
SPECIAL
; 
ª≥©
;

122 '0': 
Êags
 |
ZEROPAD
; 
ª≥©
;

126 
fõld_width
 = -1;

127 i‡(
	`is_digô
(*
fmt
))

128 
fõld_width
 = 
	`skù_©oi
(&
fmt
);

129 i‡(*
fmt
 == '*') {

131 
fõld_width
 = 
	`va_¨g
(
¨gs
, );

132 i‡(
fõld_width
 < 0) {

133 
fõld_width
 = -field_width;

134 
Êags
 |
LEFT
;

139 
¥ecisi⁄
 = -1;

140 i‡(*
fmt
 == '.') {

141 ++
fmt
;

142 i‡(
	`is_digô
(*
fmt
))

143 
¥ecisi⁄
 = 
	`skù_©oi
(&
fmt
);

144 i‡(*
fmt
 == '*') {

146 
¥ecisi⁄
 = 
	`va_¨g
(
¨gs
, );

148 i‡(
¥ecisi⁄
 < 0)

149 
¥ecisi⁄
 = 0;

153 
quÆifõr
 = -1;

154 i‡(*
fmt
 == 'h' || *fmt == 'l' || *fmt == 'L') {

155 
quÆifõr
 = *
fmt
;

156 ++
fmt
;

159 *
fmt
) {

161 i‡(!(
Êags
 & 
LEFT
))

162 --
fõld_width
 > 0)

163 *
°r
++ = ' ';

164 *
°r
++ = (Ë
	`va_¨g
(
¨gs
, );

165 --
fõld_width
 > 0)

166 *
°r
++ = ' ';

170 
s
 = 
	`va_¨g
(
¨gs
, *);

171 
Àn
 = 
	`°æí
(
s
);

172 i‡(
¥ecisi⁄
 < 0)

173 
¥ecisi⁄
 = 
Àn
;

174 i‡(
Àn
 > 
¥ecisi⁄
)

175 
Àn
 = 
¥ecisi⁄
;

177 i‡(!(
Êags
 & 
LEFT
))

178 
Àn
 < 
fõld_width
--)

179 *
°r
++ = ' ';

180 
i
 = 0; i < 
Àn
; ++i)

181 *
°r
++ = *
s
++;

182 
Àn
 < 
fõld_width
--)

183 *
°r
++ = ' ';

187 
°r
 = 
	`numbî
(°r, 
	`va_¨g
(
¨gs
, ), 8,

188 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

192 i‡(
fõld_width
 == -1) {

193 
fõld_width
 = 8;

194 
Êags
 |
ZEROPAD
;

196 
°r
 = 
	`numbî
(str,

197 (Ë
	`va_¨g
(
¨gs
, *), 16,

198 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

202 
Êags
 |
SMALL
;

204 
°r
 = 
	`numbî
(°r, 
	`va_¨g
(
¨gs
, ), 16,

205 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

210 
Êags
 |
SIGN
;

212 
°r
 = 
	`numbî
(°r, 
	`va_¨g
(
¨gs
, ), 10,

213 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

217 
ù
 = 
	`va_¨g
(
¨gs
, *);

218 *
ù
 = (
°r
 - 
buf
);

222 i‡(*
fmt
 != '%')

223 *
°r
++ = '%';

224 i‡(*
fmt
)

225 *
°r
++ = *
fmt
;

227 --
fmt
;

231 *
°r
 = '\0';

232  
°r
-
buf
;

233 
	}
}

	@lib/_exit.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

10 vﬁ©ûê
	$_exô
(
exô_code
)

12 
	`__asm__
("öà$0x80"::"a" (
__NR_exô
),"b" (
exô_code
));

13 
	}
}

	@lib/close.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

10 
_sysˇŒ1
(,
˛o£
,,
fd
)

	@lib/ctype.c

7 
	~<˘y≥.h
>

9 
	g_˘mp
;

10 
	g_˘y≥
[] = {0x00,

11 
_C
,_C,_C,_C,_C,_C,_C,_C,

12 
_C
,_C|
_S
,_C|_S,_C|_S,_C|_S,_C|_S,_C,_C,

13 
_C
,_C,_C,_C,_C,_C,_C,_C,

14 
_C
,_C,_C,_C,_C,_C,_C,_C,

15 
_S
|
_SP
,
_P
,_P,_P,_P,_P,_P,_P,

16 
_P
,_P,_P,_P,_P,_P,_P,_P,

17 
_D
,_D,_D,_D,_D,_D,_D,_D,

18 
_D
,_D,
_P
,_P,_P,_P,_P,_P,

19 
_P
,
_U
|
_X
,_U|_X,_U|_X,_U|_X,_U|_X,_U|_X,_U,

20 
_U
,_U,_U,_U,_U,_U,_U,_U,

21 
_U
,_U,_U,_U,_U,_U,_U,_U,

22 
_U
,_U,_U,
_P
,_P,_P,_P,_P,

23 
_P
,
_L
|
_X
,_L|_X,_L|_X,_L|_X,_L|_X,_L|_X,_L,

24 
_L
,_L,_L,_L,_L,_L,_L,_L,

25 
_L
,_L,_L,_L,_L,_L,_L,_L,

26 
_L
,_L,_L,
_P
,_P,_P,_P,
_C
,

	@lib/dup.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

10 
_sysˇŒ1
(,
dup
,,
fd
)

	@lib/errno.c

7 
	gî∫o
;

	@lib/execve.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

10 
_sysˇŒ3
(,
execve
,c⁄° *,
fûe
,**,
¨gv
,**,
ívp
)

	@lib/malloc.c

48 
	~<löux/kî√l.h
>

49 
	~<löux/mm.h
>

50 
	~<asm/sy°em.h
>

52 
	sbuckë_desc
 {

53 *
	m∑ge
;

54 
buckë_desc
 *
	m√xt
;

55 *
	m‰ì±r
;

56 
	mªf˙t
;

57 
	mbuckë_size
;

60 
	s_buckë_dú
 {

61 
	msize
;

62 
buckë_desc
 *
	mchaö
;

77 
_buckë_dú
 
	gbuckë_dú
[] = {

78 { 16, (
buckë_desc
 *) 0},

79 { 32, (
buckë_desc
 *) 0},

80 { 64, (
buckë_desc
 *) 0},

81 { 128, (
buckë_desc
 *) 0},

82 { 256, (
buckë_desc
 *) 0},

83 { 512, (
buckë_desc
 *) 0},

84 { 1024, (
buckë_desc
 *) 0},

85 { 2048, (
buckë_desc
 *) 0},

86 { 4096, (
buckë_desc
 *) 0},

87 { 0, (
buckë_desc
 *) 0}};

92 
buckë_desc
 *
	g‰ì_buckë_desc
 = (bucket_desc *) 0;

97 
ölöe
 
	$öô_buckë_desc
()

99 
buckë_desc
 *
bdesc
, *
fú°
;

100 
i
;

102 
fú°
 = 
bdesc
 = (
buckë_desc
 *Ë
	`gë_‰ì_∑ge
();

103 i‡(!
bdesc
)

104 
	`∑nic
("Out of memory in init_bucket_desc()");

105 
i
 = 
PAGE_SIZE
/(
buckë_desc
); i > 1; i--) {

106 
bdesc
->
√xt
 = bdesc+1;

107 
bdesc
++;

113 
bdesc
->
√xt
 = 
‰ì_buckë_desc
;

114 
‰ì_buckë_desc
 = 
fú°
;

115 
	}
}

117 *
	$mÆloc
(
Àn
)

119 
_buckë_dú
 *
bdú
;

120 
buckë_desc
 *
bdesc
;

121 *
ªtvÆ
;

127 
bdú
 = 
buckë_dú
; bdú->
size
; bdir++)

128 i‡(
bdú
->
size
 >
Àn
)

130 i‡(!
bdú
->
size
) {

131 
	`¥ötk
("malloc called with impossiblyÜargeárgument (%d)\n",

132 
Àn
);

133 
	`∑nic
("malloc: badárg");

138 
	`˛i
();

139 
bdesc
 = 
bdú
->
chaö
; bdesc; bdes¯bdesc->
√xt
)

140 i‡(
bdesc
->
‰ì±r
)

146 i‡(!
bdesc
) {

147 *
˝
;

148 
i
;

150 i‡(!
‰ì_buckë_desc
)

151 
	`öô_buckë_desc
();

152 
bdesc
 = 
‰ì_buckë_desc
;

153 
‰ì_buckë_desc
 = 
bdesc
->
√xt
;

154 
bdesc
->
ªf˙t
 = 0;

155 
bdesc
->
buckë_size
 = 
bdú
->
size
;

156 
bdesc
->
∑ge
 = bdesc->
‰ì±r
 = (*Ë
˝
 = 
	`gë_‰ì_∑ge
();

157 i‡(!
˝
)

158 
	`∑nic
("Out of memory in kernel malloc()");

160 
i
=
PAGE_SIZE
/
bdú
->
size
; i > 1; i--) {

161 *((**Ë
˝
Ë˝ + 
bdú
->
size
;

162 
˝
 +
bdú
->
size
;

164 *((**Ë
˝
) = 0;

165 
bdesc
->
√xt
 = 
bdú
->
chaö
;

166 
bdú
->
chaö
 = 
bdesc
;

168 
ªtvÆ
 = (*Ë
bdesc
->
‰ì±r
;

169 
bdesc
->
‰ì±r
 = *((**Ë
ªtvÆ
);

170 
bdesc
->
ªf˙t
++;

171 
	`°i
();

172 (
ªtvÆ
);

173 
	}
}

182 
	$‰ì_s
(*
obj
, 
size
)

184 *
∑ge
;

185 
_buckë_dú
 *
bdú
;

186 
buckë_desc
 *
bdesc
, *
¥ev
;

189 
∑ge
 = (*Ë((Ë
obj
 & 0xfffff000);

191 
bdú
 = 
buckë_dú
; bdú->
size
; bdir++) {

192 
¥ev
 = 0;

194 i‡(
bdú
->
size
 < size)

196 
bdesc
 = 
bdú
->
chaö
; bdesc; bdes¯bdesc->
√xt
) {

197 i‡(
bdesc
->
∑ge
 ==Öage)

198 
found
;

199 
¥ev
 = 
bdesc
;

202 
	`∑nic
("BadáddressÖassedÅo kernel free_s()");

203 
found
:

204 
	`˛i
();

205 *((**)
obj
Ë
bdesc
->
‰ì±r
;

206 
bdesc
->
‰ì±r
 = 
obj
;

207 
bdesc
->
ªf˙t
--;

208 i‡(
bdesc
->
ªf˙t
 == 0) {

213 i‡((
¥ev
 && (¥ev->
√xt
 !
bdesc
)) ||

214 (!
¥ev
 && (
bdú
->
chaö
 !
bdesc
)))

215 
¥ev
 = 
bdú
->
chaö
;Öªv;Öªv =Öªv->
√xt
)

216 i‡(
¥ev
->
√xt
 =
bdesc
)

218 i‡(
¥ev
)

219 
¥ev
->
√xt
 = 
bdesc
->next;

221 i‡(
bdú
->
chaö
 !
bdesc
)

222 
	`∑nic
("malloc bucket chains corrupted");

223 
bdú
->
chaö
 = 
bdesc
->
√xt
;

225 
	`‰ì_∑ge
((Ë
bdesc
->
∑ge
);

226 
bdesc
->
√xt
 = 
‰ì_buckë_desc
;

227 
‰ì_buckë_desc
 = 
bdesc
;

229 
	`°i
();

231 
	}
}

	@lib/open.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

9 
	~<°d¨g.h
>

11 
	$›í
(c⁄° * 
fûíame
, 
Êag
, ...)

13 
ªs
;

14 
va_li°
 
¨g
;

16 
	`va_°¨t
(
¨g
,
Êag
);

17 
	`__asm__
("int $0x80"

18 :"˜" (
ªs
)

19 :"0" (
__NR_›í
),"b" (
fûíame
),"c" (
Êag
),

20 "d" (
	`va_¨g
(
¨g
,)));

21 i‡(
ªs
>=0)

22  
ªs
;

23 
î∫o
 = -
ªs
;

25 
	}
}

	@lib/setsid.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

10 
_sysˇŒ0
(
pid_t
,
£tsid
)

	@lib/string.c

7 #i‚de‡
__GNUC__


8 #îr‹ 
I
 
w™t
 
gcc
!

11 

	)

12 
	#ölöe


	)

13 
	#__LIBRARY__


	)

14 
	~<°rög.h
>

	@lib/wait.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

9 
	~<sys/waô.h
>

11 
	$_sysˇŒ3
(
pid_t
,
waôpid
,pid_t,
pid
,*,
waô_°©
,,
›ti⁄s
)

13 
pid_t
 
	$waô
(* 
waô_°©
)

15  
	`waôpid
(-1,
waô_°©
,0);

16 
	}
}

	@lib/write.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

10 
_sysˇŒ3
(,
wrôe
,,
fd
,c⁄° *,
buf
,
off_t
,
cou¡
)

	@mm/memory.c

31 
	~<sig«l.h
>

33 
	~<asm/sy°em.h
>

35 
	~<löux/sched.h
>

36 
	~<löux/hód.h
>

37 
	~<löux/kî√l.h
>

39 
	#CODE_SPACE
(
addr
) ((((addr)+4095)&~4095) < \

40 
cuºít
->
°¨t_code
 + cuºít->
íd_code
)

	)

42 
	gHIGH_MEMORY
 = 0;

44 
	#c›y_∑ge
(
‰om
,
to
) \

45 
	`__asm__
("˛d ;Ñï ; mov¶"::"S" (
‰om
),"D" (
to
),"c" (1024):"cx","di","si")

	)

47 
	gmem_m≠
 [ 
PAGING_PAGES
 ] = {0,};

53 
	$‰ì_∑ge
(
addr
)

55 i‡(
addr
 < 
LOW_MEM
) ;

56 i‡(
addr
 >
HIGH_MEMORY
)

57 
	`∑nic
("tryingÅo freeÇonexistentÖage");

58 
addr
 -
LOW_MEM
;

59 
addr
 >>= 12;

60 i‡(
mem_m≠
[
addr
]--) ;

61 
mem_m≠
[
addr
]=0;

62 
	`∑nic
("tryingÅo free freeÖage");

63 
	}
}

69 
	$‰ì_∑ge_èbÀs
(
‰om
,
size
)

71 *
pg_èbÀ
;

72 * 
dú
, 
ƒ
;

74 i‡(
‰om
 & 0x3fffff)

75 
	`∑nic
("free_page_tables called with wrongálignment");

76 i‡(!
‰om
)

77 
	`∑nic
("TryingÅo free up swapper memory space");

78 
size
 = (size + 0x3fffff) >> 22;

79 
dú
 = (*Ë((
‰om
>>20) & 0xffc);

80  ; 
size
-->0 ; 
dú
++) {

81 i‡(!(1 & *
dú
))

83 
pg_èbÀ
 = (*Ë(0xfffff000 & *
dú
);

84 
ƒ
=0 ;Çr<1024 ;Çr++) {

85 i‡(*
pg_èbÀ
) {

86 i‡(1 & *
pg_èbÀ
)

87 
	`‰ì_∑ge
(0xfffff000 & *
pg_èbÀ
);

89 
	`sw≠_‰ì
(*
pg_èbÀ
 >> 1);

90 *
pg_èbÀ
 = 0;

92 
pg_èbÀ
++;

94 
	`‰ì_∑ge
(0xfffff000 & *
dú
);

95 *
dú
 = 0;

97 
	`övÆid©e
();

99 
	}
}

118 
	$c›y_∑ge_èbÀs
(
‰om
,
to
,
size
)

120 * 
‰om_∑ge_èbÀ
;

121 * 
to_∑ge_èbÀ
;

122 
this_∑ge
;

123 * 
‰om_dú
, * 
to_dú
;

124 
√w_∑ge
;

125 
ƒ
;

127 i‡((
‰om
&0x3fffffË|| (
to
&0x3fffff))

128 
	`∑nic
("copy_page_tables called with wrongálignment");

129 
‰om_dú
 = (*Ë((
‰om
>>20) & 0xffc);

130 
to_dú
 = (*Ë((
to
>>20) & 0xffc);

131 
size
 = (() (size+0x3fffff)) >> 22;

132  ; 
size
-->0 ; 
‰om_dú
++,
to_dú
++) {

133 i‡(1 & *
to_dú
)

134 
	`∑nic
("copy_page_tables:álreadyÉxist");

135 i‡(!(1 & *
‰om_dú
))

137 
‰om_∑ge_èbÀ
 = (*Ë(0xfffff000 & *
‰om_dú
);

138 i‡(!(
to_∑ge_èbÀ
 = (*Ë
	`gë_‰ì_∑ge
()))

140 *
to_dú
 = ((Ë
to_∑ge_èbÀ
) | 7;

141 
ƒ
 = (
‰om
==0)?0xA0:1024;

142  ; 
ƒ
-- > 0 ; 
‰om_∑ge_èbÀ
++,
to_∑ge_èbÀ
++) {

143 
this_∑ge
 = *
‰om_∑ge_èbÀ
;

144 i‡(!
this_∑ge
)

146 i‡(!(1 & 
this_∑ge
)) {

147 i‡(!(
√w_∑ge
 = 
	`gë_‰ì_∑ge
()))

149 
	`ªad_sw≠_∑ge
(
this_∑ge
>>1, (*Ë
√w_∑ge
);

150 *
to_∑ge_èbÀ
 = 
this_∑ge
;

151 *
‰om_∑ge_èbÀ
 = 
√w_∑ge
 | (
PAGE_DIRTY
 | 7);

154 
this_∑ge
 &= ~2;

155 *
to_∑ge_èbÀ
 = 
this_∑ge
;

156 i‡(
this_∑ge
 > 
LOW_MEM
) {

157 *
‰om_∑ge_èbÀ
 = 
this_∑ge
;

158 
this_∑ge
 -
LOW_MEM
;

159 
this_∑ge
 >>= 12;

160 
mem_m≠
[
this_∑ge
]++;

164 
	`övÆid©e
();

166 
	}
}

174 
	$put_∑ge
(
∑ge
,
addªss
)

176 
tmp
, *
∑ge_èbÀ
;

180 i‡(
∑ge
 < 
LOW_MEM
 ||Öagê>
HIGH_MEMORY
)

181 
	`¥ötk
("TryögÅÿpuà∑gê%∞© %p\n",
∑ge
,
addªss
);

182 i‡(
mem_m≠
[(
∑ge
-
LOW_MEM
)>>12] != 1)

183 
	`¥ötk
("mem_m≠ dißgªe†wôh %∞© %p\n",
∑ge
,
addªss
);

184 
∑ge_èbÀ
 = (*Ë((
addªss
>>20) & 0xffc);

185 i‡((*
∑ge_èbÀ
)&1)

186 
∑ge_èbÀ
 = (*) (0xfffff000 & *page_table);

188 i‡(!(
tmp
=
	`gë_‰ì_∑ge
()))

190 *
∑ge_èbÀ
 = 
tmp
 | 7;

191 
∑ge_èbÀ
 = (*Ë
tmp
;

193 
∑ge_èbÀ
[(
addªss
>>12Ë& 0x3ff] = 
∑ge
 | 7;

195  
∑ge
;

196 
	}
}

204 
	$put_dúty_∑ge
(
∑ge
, 
addªss
)

206 
tmp
, *
∑ge_èbÀ
;

210 i‡(
∑ge
 < 
LOW_MEM
 ||Öagê>
HIGH_MEMORY
)

211 
	`¥ötk
("TryögÅÿpuà∑gê%∞© %p\n",
∑ge
,
addªss
);

212 i‡(
mem_m≠
[(
∑ge
-
LOW_MEM
)>>12] != 1)

213 
	`¥ötk
("mem_m≠ dißgªe†wôh %∞© %p\n",
∑ge
,
addªss
);

214 
∑ge_èbÀ
 = (*Ë((
addªss
>>20) & 0xffc);

215 i‡((*
∑ge_èbÀ
)&1)

216 
∑ge_èbÀ
 = (*) (0xfffff000 & *page_table);

218 i‡(!(
tmp
=
	`gë_‰ì_∑ge
()))

220 *
∑ge_èbÀ
 = 
tmp
|7;

221 
∑ge_èbÀ
 = (*Ë
tmp
;

223 
∑ge_èbÀ
[(
addªss
>>12Ë& 0x3ff] = 
∑ge
 | (
PAGE_DIRTY
 | 7);

225  
∑ge
;

226 
	}
}

228 
	$un_wp_∑ge
(* 
èbÀ_íåy
)

230 
ﬁd_∑ge
,
√w_∑ge
;

232 
ﬁd_∑ge
 = 0xfffff000 & *
èbÀ_íåy
;

233 i‡(
ﬁd_∑ge
 >
LOW_MEM
 && 
mem_m≠
[
	`MAP_NR
(old_page)]==1) {

234 *
èbÀ_íåy
 |= 2;

235 
	`övÆid©e
();

238 i‡(!(
√w_∑ge
=
	`gë_‰ì_∑ge
()))

239 
	`oom
();

240 i‡(
ﬁd_∑ge
 >
LOW_MEM
)

241 
mem_m≠
[
	`MAP_NR
(
ﬁd_∑ge
)]--;

242 
	`c›y_∑ge
(
ﬁd_∑ge
,
√w_∑ge
);

243 *
èbÀ_íåy
 = 
√w_∑ge
 | 7;

244 
	`övÆid©e
();

245 
	}
}

254 
	$do_wp_∑ge
(
îr‹_code
,
addªss
)

256 i‡(
addªss
 < 
TASK_SIZE
)

257 
	`¥ötk
("\n\rBAD! KERNEL MEMORY WP-ERR!\n\r");

258 i‡(
addªss
 - 
cuºít
->
°¨t_code
 > 
TASK_SIZE
) {

259 
	`¥ötk
("BadÅhings happen:ÖageÉrror in do_wp_page\n\r");

260 
	`do_exô
(
SIGSEGV
);

265 i‡(
	`CODE_SPACE
(
addªss
))

266 
	`do_exô
(
SIGSEGV
);

268 
	`un_wp_∑ge
((*)

269 (((
addªss
>>10) & 0xffc) + (0xfffff000 &

270 *((*Ë((
addªss
>>20) &0xffc)))));

272 
	}
}

274 
	$wrôe_vîify
(
addªss
)

276 
∑ge
;

278 i‡(!–(
∑ge
 = *((*Ë((
addªss
>>20) & 0xffc)) )&1))

280 
∑ge
 &= 0xfffff000;

281 
∑ge
 +((
addªss
>>10) & 0xffc);

282 i‡((3 & *(*Ë
∑ge
) == 1)

283 
	`un_wp_∑ge
((*Ë
∑ge
);

285 
	}
}

287 
	$gë_em±y_∑ge
(
addªss
)

289 
tmp
;

291 i‡(!(
tmp
=
	`gë_‰ì_∑ge
()Ë|| !
	`put_∑ge
—mp,
addªss
)) {

292 
	`‰ì_∑ge
(
tmp
);

293 
	`oom
();

295 
	}
}

305 
	$åy_to_sh¨e
(
addªss
, 
èsk_°ru˘
 * 
p
)

307 
‰om
;

308 
to
;

309 
‰om_∑ge
;

310 
to_∑ge
;

311 
phys_addr
;

313 
‰om_∑ge
 = 
to_∑ge
 = ((
addªss
>>20) & 0xffc);

314 
‰om_∑ge
 +((
p
->
°¨t_code
>>20) & 0xffc);

315 
to_∑ge
 +((
cuºít
->
°¨t_code
>>20) & 0xffc);

317 
‰om
 = *(*Ë
‰om_∑ge
;

318 i‡(!(
‰om
 & 1))

320 
‰om
 &= 0xfffff000;

321 
‰om_∑ge
 = 
‰om
 + ((
addªss
>>10) & 0xffc);

322 
phys_addr
 = *(*Ë
‰om_∑ge
;

324 i‡((
phys_addr
 & 0x41) != 0x01)

326 
phys_addr
 &= 0xfffff000;

327 i‡(
phys_addr
 >
HIGH_MEMORY
 ||Öhys_add∏< 
LOW_MEM
)

329 
to
 = *(*Ë
to_∑ge
;

330 i‡(!(
to
 & 1))

331 i‡(
to
 = 
	`gë_‰ì_∑ge
())

332 *(*Ë
to_∑ge
 = 
to
 | 7;

334 
	`oom
();

335 
to
 &= 0xfffff000;

336 
to_∑ge
 = 
to
 + ((
addªss
>>10) & 0xffc);

337 i‡(1 & *(*Ë
to_∑ge
)

338 
	`∑nic
("try_to_share:Åo_pageálreadyÉxists");

340 *(*Ë
‰om_∑ge
 &= ~2;

341 *(*Ë
to_∑ge
 = *(*Ë
‰om_∑ge
;

342 
	`övÆid©e
();

343 
phys_addr
 -
LOW_MEM
;

344 
phys_addr
 >>= 12;

345 
mem_m≠
[
phys_addr
]++;

347 
	}
}

357 
	$sh¨e_∑ge
(
m_öode
 * 
öode
, 
addªss
)

359 
èsk_°ru˘
 ** 
p
;

361 i‡(
öode
->
i_cou¡
 < 2 || !inode)

363 
p
 = &
LAST_TASK
 ;Ö > &
FIRST_TASK
 ; --p) {

364 i‡(!*
p
)

366 i‡(
cuºít
 =*
p
)

368 i‡(
addªss
 < 
LIBRARY_OFFSET
) {

369 i‡(
öode
 !(*
p
)->
execuèbÀ
)

372 i‡(
öode
 !(*
p
)->
libøry
)

375 i‡(
	`åy_to_sh¨e
(
addªss
,*
p
))

379 
	}
}

381 
	$do_no_∑ge
(
îr‹_code
,
addªss
)

383 
ƒ
[4];

384 
tmp
;

385 
∑ge
;

386 
block
,
i
;

387 
m_öode
 * 
öode
;

389 i‡(
addªss
 < 
TASK_SIZE
)

390 
	`¥ötk
("\n\rBAD!! KERNEL PAGE MISSING\n\r");

391 i‡(
addªss
 - 
cuºít
->
°¨t_code
 > 
TASK_SIZE
) {

392 
	`¥ötk
("BadÅhings happen:ÇonexistentÖageÉrror in do_no_page\n\r");

393 
	`do_exô
(
SIGSEGV
);

395 
∑ge
 = *(*Ë((
addªss
 >> 20) & 0xffc);

396 i‡(
∑ge
 & 1) {

397 
∑ge
 &= 0xfffff000;

398 
∑ge
 +(
addªss
 >> 10) & 0xffc;

399 
tmp
 = *(*Ë
∑ge
;

400 i‡(
tmp
 && !(1 &Åmp)) {

401 
	`sw≠_ö
((*Ë
∑ge
);

405 
addªss
 &= 0xfffff000;

406 
tmp
 = 
addªss
 - 
cuºít
->
°¨t_code
;

407 i‡(
tmp
 >
LIBRARY_OFFSET
 ) {

408 
öode
 = 
cuºít
->
libøry
;

409 
block
 = 1 + (
tmp
-
LIBRARY_OFFSET
Ë/ 
BLOCK_SIZE
;

410 } i‡(
tmp
 < 
cuºít
->
íd_d©a
) {

411 
öode
 = 
cuºít
->
execuèbÀ
;

412 
block
 = 1 + 
tmp
 / 
BLOCK_SIZE
;

414 
öode
 = 
NULL
;

415 
block
 = 0;

417 i‡(!
öode
) {

418 
	`gë_em±y_∑ge
(
addªss
);

421 i‡(
	`sh¨e_∑ge
(
öode
,
tmp
))

423 i‡(!(
∑ge
 = 
	`gë_‰ì_∑ge
()))

424 
	`oom
();

426 
i
=0 ; i<4 ; 
block
++,i++)

427 
ƒ
[
i
] = 
	`bm≠
(
öode
,
block
);

428 
	`bªad_∑ge
(
∑ge
,
öode
->
i_dev
,
ƒ
);

429 
i
 = 
tmp
 + 4096 - 
cuºít
->
íd_d©a
;

430 i‡(
i
>4095)

431 
i
 = 0;

432 
tmp
 = 
∑ge
 + 4096;

433 
i
-- > 0) {

434 
tmp
--;

435 *(*)
tmp
 = 0;

437 i‡(
	`put_∑ge
(
∑ge
,
addªss
))

439 
	`‰ì_∑ge
(
∑ge
);

440 
	`oom
();

441 
	}
}

443 
	$mem_öô
(
°¨t_mem
, 
íd_mem
)

445 
i
;

447 
HIGH_MEMORY
 = 
íd_mem
;

448 
i
=0 ; i<
PAGING_PAGES
 ; i++)

449 
mem_m≠
[
i
] = 
USED
;

450 
i
 = 
	`MAP_NR
(
°¨t_mem
);

451 
íd_mem
 -
°¨t_mem
;

452 
íd_mem
 >>= 12;

453 
íd_mem
-->0)

454 
mem_m≠
[
i
++]=0;

455 
	}
}

457 
	$show_mem
()

459 
i
,
j
,
k
,
‰ì
=0,
tŸÆ
=0;

460 
sh¨ed
=0;

461 * 
pg_tbl
;

463 
	`¥ötk
("Mem-info:\n\r");

464 
i
=0 ; i<
PAGING_PAGES
 ; i++) {

465 i‡(
mem_m≠
[
i
] =
USED
)

467 
tŸÆ
++;

468 i‡(!
mem_m≠
[
i
])

469 
‰ì
++;

471 
sh¨ed
 +
mem_m≠
[
i
]-1;

473 
	`¥ötk
("%d fªê∑ge†o‡%d\n\r",
‰ì
,
tŸÆ
);

474 
	`¥ötk
("%dÖage†sh¨ed\n\r",
sh¨ed
);

475 
k
 = 0;

476 
i
=4 ; i<1024 ;) {

477 i‡(1&
pg_dú
[
i
]) {

478 i‡(
pg_dú
[
i
]>
HIGH_MEMORY
) {

479 
	`¥ötk
("page directory[%d]: %08X\n\r",

480 
i
,
pg_dú
[i]);

483 i‡(
pg_dú
[
i
]>
LOW_MEM
)

484 
‰ì
++,
k
++;

485 
pg_tbl
=(*Ë(0xfffff000 & 
pg_dú
[
i
]);

486 
j
=0 ; j<1024 ; j++)

487 i‡((
pg_tbl
[
j
]&1Ë&&Ög_tbl[j]>
LOW_MEM
)

488 i‡(
pg_tbl
[
j
]>
HIGH_MEMORY
)

489 
	`¥ötk
("page_dir[%d][%d]: %08X\n\r",

490 
i
,
j
, 
pg_tbl
[j]);

492 
k
++,
‰ì
++;

494 
i
++;

495 i‡(!(
i
&15Ë&& 
k
) {

496 
k
++,
‰ì
++;

497 
	`¥ötk
("Pro˚s†%d: %dÖages\n\r",(
i
>>4)-1,
k
);

498 
k
 = 0;

501 
	`¥ötk
("Mem‹y found: %d (%d)\n\r",
‰ì
-
sh¨ed
,
tŸÆ
);

502 
	}
}

	@mm/swap.c

12 
	~<°rög.h
>

14 
	~<löux/mm.h
>

15 
	~<löux/sched.h
>

16 
	~<löux/hód.h
>

17 
	~<löux/kî√l.h
>

19 
	#SWAP_BITS
 (4096<<3)

	)

21 
	#bô›
(
«me
,
›
) \

22 
ölöe
 
	`«me
(* 
addr
,
ƒ
) \

24 
__ªs
; \

25 
__asm__
 
	`__vﬁ©ûe__
("bt" 
›
 " %1,%2;ádcl $0,%0" \

26 :"=g" (
__ªs
) \

27 :"r" (
ƒ
),"m" (*(
addr
)),"0" (0)); \

28  
__ªs
; \

29 }

	)

31 
bô›
(
bô
,"")

32 
bô›
(
£tbô
,"s")

33 
bô›
(
˛rbô
,"r")

35 * 
	gsw≠_bôm≠
 = 
NULL
;

36 
	gSWAP_DEV
 = 0;

42 
	#FIRST_VM_PAGE
 (
TASK_SIZE
>>12)

	)

43 
	#LAST_VM_PAGE
 (1024*1024)

	)

44 
	#VM_PAGES
 (
LAST_VM_PAGE
 - 
FIRST_VM_PAGE
)

	)

46 
	$gë_sw≠_∑ge
()

48 
ƒ
;

50 i‡(!
sw≠_bôm≠
)

52 
ƒ
 = 1;Çr < 32768 ;Çr++)

53 i‡(
	`˛rbô
(
sw≠_bôm≠
,
ƒ
))

54  
ƒ
;

56 
	}
}

58 
	$sw≠_‰ì
(
sw≠_ƒ
)

60 i‡(!
sw≠_ƒ
)

62 i‡(
sw≠_bôm≠
 && 
sw≠_ƒ
 < 
SWAP_BITS
)

63 i‡(!
	`£tbô
(
sw≠_bôm≠
,
sw≠_ƒ
))

65 
	`¥ötk
("Swap-space bad (swap_free())\n\r");

67 
	}
}

69 
	$sw≠_ö
(*
èbÀ_±r
)

71 
sw≠_ƒ
;

72 
∑ge
;

74 i‡(!
sw≠_bôm≠
) {

75 
	`¥ötk
("TryingÅo swap in without swap bit-map");

78 i‡(1 & *
èbÀ_±r
) {

79 
	`¥ötk
("tryingÅo swap inÖresentÖage\n\r");

82 
sw≠_ƒ
 = *
èbÀ_±r
 >> 1;

83 i‡(!
sw≠_ƒ
) {

84 
	`¥ötk
("No swapÖage in swap_in\n\r");

87 i‡(!(
∑ge
 = 
	`gë_‰ì_∑ge
()))

88 
	`oom
();

89 
	`ªad_sw≠_∑ge
(
sw≠_ƒ
, (*Ë
∑ge
);

90 i‡(
	`£tbô
(
sw≠_bôm≠
,
sw≠_ƒ
))

91 
	`¥ötk
("swapping in multiply from sameÖage\n\r");

92 *
èbÀ_±r
 = 
∑ge
 | (
PAGE_DIRTY
 | 7);

93 
	}
}

95 
	$åy_to_sw≠_out
(* 
èbÀ_±r
)

97 
∑ge
;

98 
sw≠_ƒ
;

100 
∑ge
 = *
èbÀ_±r
;

101 i‡(!(
PAGE_PRESENT
 & 
∑ge
))

103 i‡(
∑ge
 - 
LOW_MEM
 > 
PAGING_MEMORY
)

105 i‡(
PAGE_DIRTY
 & 
∑ge
) {

106 
∑ge
 &= 0xfffff000;

107 i‡(
mem_m≠
[
	`MAP_NR
(
∑ge
)] != 1)

109 i‡(!(
sw≠_ƒ
 = 
	`gë_sw≠_∑ge
()))

111 *
èbÀ_±r
 = 
sw≠_ƒ
<<1;

112 
	`övÆid©e
();

113 
	`wrôe_sw≠_∑ge
(
sw≠_ƒ
, (*Ë
∑ge
);

114 
	`‰ì_∑ge
(
∑ge
);

117 *
èbÀ_±r
 = 0;

118 
	`övÆid©e
();

119 
	`‰ì_∑ge
(
∑ge
);

121 
	}
}

128 
	$sw≠_out
()

130 
dú_íåy
 = 
FIRST_VM_PAGE
>>10;

131 
∑ge_íåy
 = -1;

132 
cou¡î
 = 
VM_PAGES
;

133 
pg_èbÀ
;

135 
cou¡î
>0) {

136 
pg_èbÀ
 = 
pg_dú
[
dú_íåy
];

137 i‡(
pg_èbÀ
 & 1)

139 
cou¡î
 -= 1024;

140 
dú_íåy
++;

141 i‡(
dú_íåy
 >= 1024)

142 
dú_íåy
 = 
FIRST_VM_PAGE
>>10;

144 
pg_èbÀ
 &= 0xfffff000;

145 
cou¡î
-- > 0) {

146 
∑ge_íåy
++;

147 i‡(
∑ge_íåy
 >= 1024) {

148 
∑ge_íåy
 = 0;

149 
ª≥©
:

150 
dú_íåy
++;

151 i‡(
dú_íåy
 >= 1024)

152 
dú_íåy
 = 
FIRST_VM_PAGE
>>10;

153 
pg_èbÀ
 = 
pg_dú
[
dú_íåy
];

154 i‡(!(
pg_èbÀ
&1))

155 i‡((
cou¡î
 -= 1024) > 0)

156 
ª≥©
;

159 
pg_èbÀ
 &= 0xfffff000;

161 i‡(
	`åy_to_sw≠_out
(
∑ge_íåy
 + (*Ë
pg_èbÀ
))

164 
	`¥ötk
("Out of swap-memory\n\r");

166 
	}
}

172 
	$gë_‰ì_∑ge
()

174 
__ªs
 
	`asm
("ax");

176 
ª≥©
:

177 
	`__asm__
("std ;Ñepne ; scasb\n\t"

188 :"˜" (
__ªs
)

189 :"0" (0),"i" (
LOW_MEM
),"c" (
PAGING_PAGES
),

190 "D" (
mem_m≠
+
PAGING_PAGES
-1)

192 i‡(
__ªs
 >
HIGH_MEMORY
)

193 
ª≥©
;

194 i‡(!
__ªs
 && 
	`sw≠_out
())

195 
ª≥©
;

196  
__ªs
;

197 
	}
}

199 
	$öô_sw≠pög
()

201 *
blk_size
[];

202 
sw≠_size
,
i
,
j
;

204 i‡(!
SWAP_DEV
)

206 i‡(!
blk_size
[
	`MAJOR
(
SWAP_DEV
)]) {

207 
	`¥ötk
("UnableÅo get size of swap device\n\r");

210 
sw≠_size
 = 
blk_size
[
	`MAJOR
(
SWAP_DEV
)][
	`MINOR
(SWAP_DEV)];

211 i‡(!
sw≠_size
)

213 i‡(
sw≠_size
 < 100) {

214 
	`¥ötk
("Sw≠ devi˚ÅoÿsmÆ»(%d blocks)\n\r",
sw≠_size
);

217 
sw≠_size
 >>= 2;

218 i‡(
sw≠_size
 > 
SWAP_BITS
)

219 
sw≠_size
 = 
SWAP_BITS
;

220 
sw≠_bôm≠
 = (*Ë
	`gë_‰ì_∑ge
();

221 i‡(!
sw≠_bôm≠
) {

222 
	`¥ötk
("UnableÅo start swapping: out of memory :-)\n\r");

225 
	`ªad_sw≠_∑ge
(0,
sw≠_bôm≠
);

226 i‡(
	`°∫cmp
("SWAP-SPACE",
sw≠_bôm≠
+4086,10)) {

227 
	`¥ötk
("UnableÅo find swap-space signature\n\r");

228 
	`‰ì_∑ge
((Ë
sw≠_bôm≠
);

229 
sw≠_bôm≠
 = 
NULL
;

232 
	`mem£t
(
sw≠_bôm≠
+4086,0,10);

233 
i
 = 0 ; i < 
SWAP_BITS
 ; i++) {

234 i‡(
i
 == 1)

235 
i
 = 
sw≠_size
;

236 i‡(
	`bô
(
sw≠_bôm≠
,
i
)) {

237 
	`¥ötk
("Bad swap-space bit-map\n\r");

238 
	`‰ì_∑ge
((Ë
sw≠_bôm≠
);

239 
sw≠_bôm≠
 = 
NULL
;

243 
j
 = 0;

244 
i
 = 1 ; i < 
sw≠_size
 ; i++)

245 i‡(
	`bô
(
sw≠_bôm≠
,
i
))

246 
j
++;

247 i‡(!
j
) {

248 
	`‰ì_∑ge
((Ë
sw≠_bôm≠
);

249 
sw≠_bôm≠
 = 
NULL
;

252 
	`¥ötk
("Sw≠ devi˚ ok: %dÖage†(%d byãsËsw≠-•a˚\n\r",
j
,j*4096);

253 
	}
}

	@tools/build.c

25 
	~<°dio.h
>

26 
	~<°rög.h
>

27 
	~<°dlib.h
>

28 
	~<sys/ty≥s.h
>

29 
	~<sys/°©.h
>

30 
	~<löux/fs.h
>

31 
	~<uni°d.h
>

32 
	~<f˙é.h
>

34 
	#MINIX_HEADER
 32

	)

35 
	#GCC_HEADER
 1024

	)

37 
	#SYS_SIZE
 0x3000

	)

39 
	#DEFAULT_MAJOR_ROOT
 3

	)

40 
	#DEFAULT_MINOR_ROOT
 6

	)

42 
	#DEFAULT_MAJOR_SWAP
 0

	)

43 
	#DEFAULT_MINOR_SWAP
 0

	)

47 
	#SETUP_SECTS
 4

	)

49 
	#STRINGIFY
(
x
Ë#x

	)

51 
	$dõ
(* 
°r
)

53 
	`Ârötf
(
°dîr
,"%s\n",
°r
);

54 
	`exô
(1);

55 
	}
}

57 
	$ußge
()

59 
	`dõ
("Usage: build bootsect setup system [rootdev] [> image]");

60 
	}
}

62 
	$maö
(
¨gc
, ** 
¨gv
)

64 
i
,
c
,
id
;

65 
buf
[1024];

66 
maj‹_roŸ
, 
mö‹_roŸ
;

67 
maj‹_sw≠
, 
mö‹_sw≠
;

68 
°©
 
sb
;

70 i‡((
¨gc
 < 4) || (argc > 6))

71 
	`ußge
();

72 i‡(
¨gc
 > 4) {

73 i‡(
	`°rcmp
(
¨gv
[4], "FLOPPY")) {

74 i‡(
	`°©
(
¨gv
[4], &
sb
)) {

75 
	`≥º‹
(
¨gv
[4]);

76 
	`dõ
("Couldn't statÑoot device.");

78 
maj‹_roŸ
 = 
	`MAJOR
(
sb
.
°_rdev
);

79 
mö‹_roŸ
 = 
	`MINOR
(
sb
.
°_rdev
);

81 
maj‹_roŸ
 = 0;

82 
mö‹_roŸ
 = 0;

85 
maj‹_roŸ
 = 
DEFAULT_MAJOR_ROOT
;

86 
mö‹_roŸ
 = 
DEFAULT_MINOR_ROOT
;

88 i‡(
¨gc
 == 6) {

89 i‡(
	`°rcmp
(
¨gv
[5], "NONE")) {

90 i‡(
	`°©
(
¨gv
[5], &
sb
)) {

91 
	`≥º‹
(
¨gv
[5]);

92 
	`dõ
("Couldn't statÑoot device.");

94 
maj‹_sw≠
 = 
	`MAJOR
(
sb
.
°_rdev
);

95 
mö‹_sw≠
 = 
	`MINOR
(
sb
.
°_rdev
);

97 
maj‹_sw≠
 = 0;

98 
mö‹_sw≠
 = 0;

101 
maj‹_sw≠
 = 
DEFAULT_MAJOR_SWAP
;

102 
mö‹_sw≠
 = 
DEFAULT_MINOR_SWAP
;

104 
	`Ârötf
(
°dîr
, "RoŸ devi˚ i†(%d, %d)\n", 
maj‹_roŸ
, 
mö‹_roŸ
);

105 
	`Ârötf
(
°dîr
, "Sw≠ devi˚ i†(%d, %d)\n", 
maj‹_sw≠
, 
mö‹_sw≠
);

106 i‡((
maj‹_roŸ
 != 2) && (major_root != 3) &&

107 (
maj‹_roŸ
 != 0)) {

108 
	`Ârötf
(
°dîr
, "IllegalÑoot device (major = %d)\n",

109 
maj‹_roŸ
);

110 
	`dõ
("BadÑoot device --- major #");

112 i‡(
maj‹_sw≠
 && major_swap != 3) {

113 
	`Ârötf
(
°dîr
, "Illegal swap device (major = %d)\n",

114 
maj‹_sw≠
);

115 
	`dõ
("BadÑoot device --- major #");

117 
i
=0;i< 
buf
; i++) buf[i]=0;

118 i‡((
id
=
	`›í
(
¨gv
[1],
O_RDONLY
,0))<0)

119 
	`dõ
("UnableÅo open 'boot'");

120 i‡(
	`ªad
(
id
,
buf
,
MINIX_HEADER
) != MINIX_HEADER)

121 
	`dõ
("UnableÅoÑead header of 'boot'");

122 i‡(((*Ë
buf
)[0]!=0x04100301)

123 
	`dõ
("Non-Minix header of 'boot'");

124 i‡(((*Ë
buf
)[1]!=
MINIX_HEADER
)

125 
	`dõ
("Non-Minix header of 'boot'");

126 i‡(((*Ë
buf
)[3]!=0)

127 
	`dõ
("Illegal data segment in 'boot'");

128 i‡(((*Ë
buf
)[4]!=0)

129 
	`dõ
("Illegal bss in 'boot'");

130 i‡(((*Ë
buf
)[5] != 0)

131 
	`dõ
("Non-Minix header of 'boot'");

132 i‡(((*Ë
buf
)[7] != 0)

133 
	`dõ
("Illegal symbolÅable in 'boot'");

134 
i
=
	`ªad
(
id
,
buf
, buf);

135 
	`Ârötf
(
°dîr
,"BoŸ se˘‹ %d byãs.\n",
i
);

136 i‡(
i
 != 512)

137 
	`dõ
("Boot block must beÉxactly 512 bytes");

138 i‡((*(*)(
buf
+510)) != 0xAA55)

139 
	`dõ
("Boot block hasn't got boot flag (0xAA55)");

140 
buf
[506] = (Ë
mö‹_sw≠
;

141 
buf
[507] = (Ë
maj‹_sw≠
;

142 
buf
[508] = (Ë
mö‹_roŸ
;

143 
buf
[509] = (Ë
maj‹_roŸ
;

144 
i
=
	`wrôe
(1,
buf
,512);

145 i‡(
i
!=512)

146 
	`dõ
("Write call failed");

147 
	`˛o£
 (
id
);

149 i‡((
id
=
	`›í
(
¨gv
[2],
O_RDONLY
,0))<0)

150 
	`dõ
("UnableÅo open 'setup'");

151 i‡(
	`ªad
(
id
,
buf
,
MINIX_HEADER
) != MINIX_HEADER)

152 
	`dõ
("UnableÅoÑead header of 'setup'");

153 i‡(((*Ë
buf
)[0]!=0x04100301)

154 
	`dõ
("Non-Minix header of 'setup'");

155 i‡(((*Ë
buf
)[1]!=
MINIX_HEADER
)

156 
	`dõ
("Non-Minix header of 'setup'");

157 i‡(((*Ë
buf
)[3]!=0)

158 
	`dõ
("Illegal data segment in 'setup'");

159 i‡(((*Ë
buf
)[4]!=0)

160 
	`dõ
("Illegal bss in 'setup'");

161 i‡(((*Ë
buf
)[5] != 0)

162 
	`dõ
("Non-Minix header of 'setup'");

163 i‡(((*Ë
buf
)[7] != 0)

164 
	`dõ
("Illegal symbolÅable in 'setup'");

165 
i
=0 ; (
c
=
	`ªad
(
id
,
buf
, buf))>0 ; i+=c )

166 i‡(
	`wrôe
(1,
buf
,
c
)!=c)

167 
	`dõ
("Write call failed");

168 
	`˛o£
 (
id
);

169 i‡(
i
 > 
SETUP_SECTS
*512)

170 
	`dõ
("Sëu∞ex˚ed†" 
	`STRINGIFY
(
SETUP_SECTS
)

172 
	`Ârötf
(
°dîr
,"Sëu∞i†%d byãs.\n",
i
);

173 
c
=0 ; c<(
buf
) ; c++)

174 
buf
[
c
] = '\0';

175 
i
<
SETUP_SECTS
*512) {

176 
c
 = 
SETUP_SECTS
*512-
i
;

177 i‡(
c
 > (
buf
))

178 
c
 = (
buf
);

179 i‡(
	`wrôe
(1,
buf
,
c
) != c)

180 
	`dõ
("Write call failed");

181 
i
 +
c
;

184 i‡((
id
=
	`›í
(
¨gv
[3],
O_RDONLY
,0))<0)

185 
	`dõ
("UnableÅo open 'system'");

186 i‡(
	`ªad
(
id
,
buf
,
GCC_HEADER
) != GCC_HEADER)

187 
	`dõ
("UnableÅoÑead header of 'system'");

188 i‡(((*Ë
buf
)[5] != 0)

189 
	`dõ
("Non-GCC header of 'system'");

190 
i
=0 ; (
c
=
	`ªad
(
id
,
buf
, buf))>0 ; i+=c )

191 i‡(
	`wrôe
(1,
buf
,
c
)!=c)

192 
	`dõ
("Write call failed");

193 
	`˛o£
(
id
);

194 
	`Ârötf
(
°dîr
,"Sy°em i†%d byãs.\n",
i
);

195 i‡(
i
 > 
SYS_SIZE
*16)

196 
	`dõ
("System isÅoo big");

198 
	}
}

	@/usr/include/a.out.h

1 #i‚de‡
__A_OUT_GNU_H__


2 
	#__A_OUT_GNU_H__


	)

4 
	~<bôs/a.out.h
>

6 
	#__GNU_EXEC_MACROS__


	)

8 
	sexec


10 
	ma_öfo
;

11 
	ma_ãxt
;

12 
	ma_d©a
;

13 
	ma_bss
;

14 
	ma_syms
;

15 
	ma_íåy
;

16 
	ma_åsize
;

17 
	ma_drsize
;

20 
	emachöe_ty≥


22 
	mM_OLDSUN2
 = 0,

23 
	mM_68010
 = 1,

24 
	mM_68020
 = 2,

25 
	mM_SPARC
 = 3,

26 
	mM_386
 = 100,

27 
	mM_MIPS1
 = 151,

28 
	mM_MIPS2
 = 152

31 
	#N_MAGIC
(
exec
Ë(”xec).
a_öfo
 & 0xffff)

	)

32 
	#N_MACHTYPE
(
exec
Ë((
machöe_ty≥
)((”xec).
a_öfo
 >> 16Ë& 0xff))

	)

33 
	#N_FLAGS
(
exec
Ë((”xec).
a_öfo
 >> 24Ë& 0xff)

	)

34 
	#N_SET_INFO
(
exec
, 
magic
, 
ty≥
, 
Êags
) \

35 ((
exec
).
a_öfo
 = ((
magic
) & 0xffff) \

36 | ((()(
ty≥
) & 0xff) << 16) \

37 | (((
Êags
Ë& 0xffË<< 24))

	)

38 
	#N_SET_MAGIC
(
exec
, 
magic
) \

39 ((
exec
).
a_öfo
 = (”xec).a_öfÿ& 0xffff0000Ë| ((
magic
Ë& 0xffff))

	)

40 
	#N_SET_MACHTYPE
(
exec
, 
machty≥
) \

41 ((
exec
).
a_öfo
 = \

42 ((
exec
).
a_öfo
&0xff00ffffË| (((()(
machty≥
))&0xffË<< 16))

	)

43 
	#N_SET_FLAGS
(
exec
, 
Êags
) \

44 ((
exec
).
a_öfo
 = \

45 ((
exec
).
a_öfo
&0x00ffffffË| (((
Êags
Ë& 0xffË<< 24))

	)

48 
	#OMAGIC
 0407

	)

50 
	#NMAGIC
 0410

	)

52 
	#ZMAGIC
 0413

	)

55 
	#QMAGIC
 0314

	)

57 
	#CMAGIC
 0421

	)

59 
	#N_TRSIZE
(
a
Ë(◊).
a_åsize
)

	)

60 
	#N_DRSIZE
(
a
Ë(◊).
a_drsize
)

	)

61 
	#N_SYMSIZE
(
a
Ë(◊).
a_syms
)

	)

62 
	#N_BADMAG
(
x
) \

63 (
	`N_MAGIC
(
x
Ë!
OMAGIC
 && N_MAGIC(xË!
NMAGIC
 \

64 && 
	`N_MAGIC
(
x
Ë!
ZMAGIC
 && N_MAGIC(xË!
QMAGIC
)

	)

65 
	#_N_HDROFF
(
x
Ë(1024 -  (
exec
))

	)

66 
	#N_TXTOFF
(
x
) \

67 (
	`N_MAGIC
(
x
Ë=
ZMAGIC
 ? 
	`_N_HDROFF
((x)Ë+  (
exec
) : \

68 (
	`N_MAGIC
(
x
Ë=
QMAGIC
 ? 0 :  (
exec
)))

	)

69 
	#N_DATOFF
(
x
Ë(
	`N_TXTOFF
(xË+ (x).
a_ãxt
)

	)

70 
	#N_TRELOFF
(
x
Ë(
	`N_DATOFF
(xË+ (x).
a_d©a
)

	)

71 
	#N_DRELOFF
(
x
Ë(
	`N_TRELOFF
(xË+ 
	`N_TRSIZE
(x))

	)

72 
	#N_SYMOFF
(
x
Ë(
	`N_DRELOFF
(xË+ 
	`N_DRSIZE
(x))

	)

73 
	#N_STROFF
(
x
Ë(
	`N_SYMOFF
(xË+ 
	`N_SYMSIZE
(x))

	)

76 
	#N_TXTADDR
(
x
Ë(
	`N_MAGIC
(xË=
QMAGIC
 ? 4096 : 0)

	)

79 
	#SEGMENT_SIZE
 1024

	)

81 
	#_N_SEGMENT_ROUND
(
x
Ë(((xË+ 
SEGMENT_SIZE
 - 1Ë& ~(SEGMENT_SIZE - 1))

	)

82 
	#_N_TXTENDADDR
(
x
Ë(
	`N_TXTADDR
(x)+(x).
a_ãxt
)

	)

84 
	#N_DATADDR
(
x
) \

85 (
	`N_MAGIC
(
x
)==
OMAGIC
? (
	`_N_TXTENDADDR
(x)) \

86 : (
	`_N_SEGMENT_ROUND
 (
	`_N_TXTENDADDR
(
x
))))

	)

87 
	#N_BSSADDR
(
x
Ë(
	`N_DATADDR
(xË+ (x).
a_d©a
)

	)

89 #i‡!
deföed
 (
N_NLIST_DECLARED
)

90 
	s∆i°


94 *
	mn_«me
;

95 
∆i°
 *
	mn_√xt
;

96 
	mn_°rx
;

97 } 
	mn_un
;

98 
	mn_ty≥
;

99 
	mn_Ÿhî
;

100 
	mn_desc
;

101 
	mn_vÆue
;

105 
	#N_UNDF
 0

	)

106 
	#N_ABS
 2

	)

107 
	#N_TEXT
 4

	)

108 
	#N_DATA
 6

	)

109 
	#N_BSS
 8

	)

110 
	#N_FN
 15

	)

111 
	#N_EXT
 1

	)

112 
	#N_TYPE
 036

	)

113 
	#N_STAB
 0340

	)

114 
	#N_INDR
 0xa

	)

115 
	#N_SETA
 0x14

	)

116 
	#N_SETT
 0x16

	)

117 
	#N_SETD
 0x18

	)

118 
	#N_SETB
 0x1A

	)

119 
	#N_SETV
 0x1C

	)

121 #i‡!
deföed
 (
N_RELOCATION_INFO_DECLARED
)

127 
	sªloˇti⁄_öfo


129 
	mr_addªss
;

130 
	mr_symbﬁnum
:24;

131 
	mr_p¸ñ
:1;

132 
	mr_Àngth
:2;

133 
	mr_exã∫
:1;

134 
	mr_∑d
:4;

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

89 #i‚de‡
__˝lu•lus


90 
	#__is˘y≥
(
c
, 
ty≥
) \

91 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

92 #ñi‡
deföed
 
__USE_EXTERN_INLINES


93 
	#__is˘y≥_f
(
ty≥
) \

94 
__exã∫_ölöe
 \

95 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

97  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

98 
	}

	)
}

101 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

102 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

104 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

106 
__BEGIN_NAMESPACE_STD


112 
__ex˘y≥
 (
iß um
);

113 
__ex˘y≥
 (
ißÕha
);

114 
__ex˘y≥
 (
is˙ål
);

115 
__ex˘y≥
 (
isdigô
);

116 
__ex˘y≥
 (
i¶owî
);

117 
__ex˘y≥
 (
isgøph
);

118 
__ex˘y≥
 (
i•röt
);

119 
__ex˘y≥
 (
i•un˘
);

120 
__ex˘y≥
 (
is•a˚
);

121 
__ex˘y≥
 (
isuµî
);

122 
__ex˘y≥
 (
isxdigô
);

126 
	$tﬁowî
 (
__c
Ë
__THROW
;

129 
	$touµî
 (
__c
Ë
__THROW
;

131 
__END_NAMESPACE_STD


135 #ifdef 
__USE_ISOC99


136 
__BEGIN_NAMESPACE_C99


138 
	`__ex˘y≥
 (
isbœnk
);

140 
__END_NAMESPACE_C99


143 #ifde‡
__USE_GNU


145 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

148 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


152 
	$ißscii
 (
__c
Ë
__THROW
;

156 
	$tﬂscii
 (
__c
Ë
__THROW
;

160 
	`__ex˘y≥
 (
_touµî
);

161 
	`__ex˘y≥
 (
_tﬁowî
);

165 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

166 (
__exãnsi⁄__
 \

167 ({ 
__ªs
; \

168 i‡( (
c
) > 1) \

170 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

172 
__c
 = (
c
); \

173 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

176 
__ªs
 = 
f
 
¨gs
; \

179 
__ªs
 = (
a
)[(Ë(
c
)]; \

180 
__ªs
; 
	}
}))

	)

182 #i‡!
deföed
 
__NO_CTYPE


183 #ifde‡
__is˘y≥_f


184 
	$__is˘y≥_f
 (
Ænum
)

185 
	$__is˘y≥_f
 (
Æpha
)

186 
	$__is˘y≥_f
 (
˙ål
)

187 
	$__is˘y≥_f
 (
digô
)

188 
	$__is˘y≥_f
 (
lowî
)

189 
	$__is˘y≥_f
 (
gøph
)

190 
	$__is˘y≥_f
 (
¥öt
)

191 
	$__is˘y≥_f
 (
pun˘
)

192 
	$__is˘y≥_f
 (
•a˚
)

193 
	$__is˘y≥_f
 (
uµî
)

194 
	$__is˘y≥_f
 (
xdigô
)

195 #ifde‡
__USE_ISOC99


196 
	$__is˘y≥_f
 (
bœnk
)

198 #ñi‡
deföed
 
__is˘y≥


199 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

200 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

201 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

202 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

203 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

204 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

205 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

206 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

207 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

208 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

209 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

210 #ifde‡
__USE_ISOC99


211 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

215 #ifde‡
__USE_EXTERN_INLINES


216 
__exã∫_ölöe
 

217 
	`__NTH
 (
	$tﬁowî
 (
__c
))

219  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

220 
	}
}

222 
__exã∫_ölöe
 

223 
__NTH
 (
	$touµî
 (
__c
))

225  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

226 
	}
}

229 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


230 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

231 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

234 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

236 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

238 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

239 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

245 #ifde‡
__USE_XOPEN2K8


259 
	~<xloˇÀ.h
>

263 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

264 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

266 
	#__ex˘y≥_l
(
«me
) \

267 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

273 
__ex˘y≥_l
 (
iß um_l
);

274 
__ex˘y≥_l
 (
ißÕha_l
);

275 
__ex˘y≥_l
 (
is˙ål_l
);

276 
__ex˘y≥_l
 (
isdigô_l
);

277 
__ex˘y≥_l
 (
i¶owî_l
);

278 
__ex˘y≥_l
 (
isgøph_l
);

279 
__ex˘y≥_l
 (
i•röt_l
);

280 
__ex˘y≥_l
 (
i•un˘_l
);

281 
__ex˘y≥_l
 (
is•a˚_l
);

282 
__ex˘y≥_l
 (
isuµî_l
);

283 
__ex˘y≥_l
 (
isxdigô_l
);

285 
__ex˘y≥_l
 (
isbœnk_l
);

289 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

290 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

296 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


297 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

299 
	#__touµî_l
(
c
, 
loˇÀ
) \

300 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

301 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

302 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

306 #i‚de‡
__NO_CTYPE


307 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

308 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

309 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

310 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

311 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

312 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

313 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

314 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

315 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

316 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

317 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

319 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

321 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


322 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

323 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

326 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

327 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

328 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

329 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

330 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

331 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

332 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

333 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

334 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

335 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

336 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

338 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

340 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


341 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

342 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

349 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


38 
	~<bôs/ty≥s.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

41 
	~<bôs/°©.h
>

43 
	#S_IFMT
 
__S_IFMT


	)

44 
	#S_IFDIR
 
__S_IFDIR


	)

45 
	#S_IFCHR
 
__S_IFCHR


	)

46 
	#S_IFBLK
 
__S_IFBLK


	)

47 
	#S_IFREG
 
__S_IFREG


	)

48 #ifde‡
__S_IFIFO


49 
	#S_IFIFO
 
__S_IFIFO


	)

51 #ifde‡
__S_IFLNK


52 
	#S_IFLNK
 
__S_IFLNK


	)

54 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


55 
	#S_IFSOCK
 
__S_IFSOCK


	)

60 
	#S_ISUID
 
__S_ISUID


	)

61 
	#S_ISGID
 
__S_ISGID


	)

63 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


65 
	#S_ISVTX
 
__S_ISVTX


	)

68 
	#S_IRUSR
 
__S_IREAD


	)

69 
	#S_IWUSR
 
__S_IWRITE


	)

70 
	#S_IXUSR
 
__S_IEXEC


	)

72 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

74 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

75 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

76 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

78 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

80 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

81 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

82 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

84 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

87 #ifdef 
__USE_MISC


88 #i‚de‡
R_OK


91 
	#R_OK
 4

	)

92 
	#W_OK
 2

	)

93 
	#X_OK
 1

	)

94 
	#F_OK
 0

	)

99 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


100 
	#SEEK_SET
 0

	)

101 
	#SEEK_CUR
 1

	)

102 
	#SEEK_END
 2

	)

110 
f˙é
 (
__fd
, 
__cmd
, ...);

118 #i‚de‡
__USE_FILE_OFFSET64


119 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

121 #ifde‡
__REDIRECT


122 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

123 
	`__n⁄nuŒ
 ((1));

125 
	#›í
 
›í64


	)

128 #ifde‡
__USE_LARGEFILE64


129 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

132 #ifde‡
__USE_ATFILE


142 #i‚de‡
__USE_FILE_OFFSET64


143 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

144 
	`__n⁄nuŒ
 ((2));

146 #ifde‡
__REDIRECT


147 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

148 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

150 
	#›í©
 
›í©64


	)

153 #ifde‡
__USE_LARGEFILE64


154 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

155 
	`__n⁄nuŒ
 ((2));

164 #i‚de‡
__USE_FILE_OFFSET64


165 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

167 #ifde‡
__REDIRECT


168 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

169 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

171 
	#¸ót
 
¸ót64


	)

174 #ifde‡
__USE_LARGEFILE64


175 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

178 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

179 && !
deföed
 
__USE_POSIX
))

188 
	#F_ULOCK
 0

	)

189 
	#F_LOCK
 1

	)

190 
	#F_TLOCK
 2

	)

191 
	#F_TEST
 3

	)

193 #i‚de‡
__USE_FILE_OFFSET64


194 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

196 #ifde‡
__REDIRECT


197 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

199 
	#lockf
 
lockf64


	)

202 #ifde‡
__USE_LARGEFILE64


203 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

207 #ifde‡
__USE_XOPEN2K


210 #i‚de‡
__USE_FILE_OFFSET64


211 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

212 
__advi£
Ë
__THROW
;

214 #ifde‡
__REDIRECT_NTH


215 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

216 
__off64_t
 
__Àn
, 
__advi£
),

217 
posix_Ádvi£64
);

219 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

222 #ifde‡
__USE_LARGEFILE64


223 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

224 
__advi£
Ë
__THROW
;

232 #i‚de‡
__USE_FILE_OFFSET64


233 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

235 #ifde‡
__REDIRECT


236 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

237 
__off64_t
 
__Àn
),

238 
posix_ÁŒoˇã64
);

240 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

243 #ifde‡
__USE_LARGEFILE64


244 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

250 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

251 && 
deföed
 
__va_¨g_∑ck_Àn


252 
	~<bôs/f˙é2.h
>

255 
__END_DECLS


	@/usr/include/linux/fdreg.h

1 #i‚de‡
_LINUX_FDREG_H


2 
	#_LINUX_FDREG_H


	)

9 #ifde‡
FDPATCHES


10 
	#FD_IOPORT
 
fdc_°©e
[
fdc
].
addªss


	)

14 
	#FD_IOPORT
 0x3f0

	)

18 
	#FD_STATUS
 (4 + 
FD_IOPORT
 )

	)

19 
	#FD_DATA
 (5 + 
FD_IOPORT
 )

	)

22 
	#FD_DOR
 (2 + 
FD_IOPORT
 )

	)

25 
	#FD_DIR
 (7 + 
FD_IOPORT
 )

	)

28 
	#FD_DCR
 (7 + 
FD_IOPORT
 )

	)

31 
	#STATUS_BUSYMASK
 0x0F

	)

32 
	#STATUS_BUSY
 0x10

	)

33 
	#STATUS_DMA
 0x20

	)

34 
	#STATUS_DIR
 0x40

	)

35 
	#STATUS_READY
 0x80

	)

38 
	#ST0_DS
 0x03

	)

39 
	#ST0_HA
 0x04

	)

40 
	#ST0_NR
 0x08

	)

41 
	#ST0_ECE
 0x10

	)

42 
	#ST0_SE
 0x20

	)

43 
	#ST0_INTR
 0xC0

	)

46 
	#ST1_MAM
 0x01

	)

47 
	#ST1_WP
 0x02

	)

48 
	#ST1_ND
 0x04

	)

49 
	#ST1_OR
 0x10

	)

50 
	#ST1_CRC
 0x20

	)

51 
	#ST1_EOC
 0x80

	)

54 
	#ST2_MAM
 0x01

	)

55 
	#ST2_BC
 0x02

	)

56 
	#ST2_SNS
 0x04

	)

57 
	#ST2_SEH
 0x08

	)

58 
	#ST2_WC
 0x10

	)

59 
	#ST2_CRC
 0x20

	)

60 
	#ST2_CM
 0x40

	)

63 
	#ST3_HA
 0x04

	)

64 
	#ST3_DS
 0x08

	)

65 
	#ST3_TZ
 0x10

	)

66 
	#ST3_RY
 0x20

	)

67 
	#ST3_WP
 0x40

	)

68 
	#ST3_FT
 0x80

	)

71 
	#FD_RECALIBRATE
 0x07

	)

72 
	#FD_SEEK
 0x0F

	)

73 
	#FD_READ
 0xE6

	)

74 
	#FD_WRITE
 0xC5

	)

75 
	#FD_SENSEI
 0x08

	)

76 
	#FD_SPECIFY
 0x03

	)

77 
	#FD_FORMAT
 0x4D

	)

78 
	#FD_VERSION
 0x10

	)

79 
	#FD_CONFIGURE
 0x13

	)

80 
	#FD_PERPENDICULAR
 0x12

	)

81 
	#FD_GETSTATUS
 0x04

	)

82 
	#FD_DUMPREGS
 0x0E

	)

83 
	#FD_READID
 0xEA

	)

84 
	#FD_UNLOCK
 0x14

	)

85 
	#FD_LOCK
 0x94

	)

86 
	#FD_RSEEK_OUT
 0x8‡

	)

87 
	#FD_RSEEK_IN
 0xc‡

	)

94 
	#FD_PARTID
 0x18

	)

95 
	#FD_SAVE
 0x2ê

	)

96 
	#FD_DRIVESPEC
 0x8ê

	)

100 
	#FD_RESTORE
 0x4ê

	)

101 
	#FD_POWERDOWN
 0x27

	)

102 
	#FD_FORMAT_N_WRITE
 0xe‡

	)

103 
	#FD_OPTION
 0x33

	)

107 
	#DMA_READ
 0x46

	)

108 
	#DMA_WRITE
 0x4A

	)

111 
	#FDC_NONE
 0x00

	)

112 
	#FDC_UNKNOWN
 0x10

	)

114 
	#FDC_8272A
 0x20

	)

115 
	#FDC_765ED
 0x30

	)

116 
	#FDC_82072
 0x40

	)

117 
	#FDC_82072A
 0x45

	)

118 
	#FDC_82077_ORIG
 0x51

	)

119 
	#FDC_82077
 0x52

	)

120 
	#FDC_82078_UNKN
 0x5‡

	)

121 
	#FDC_82078
 0x60

	)

122 
	#FDC_82078_1
 0x61

	)

123 
	#FDC_S82078B
 0x62

	)

125 
	#FDC_87306
 0x63

	)

136 
	#FD_RESET_DELAY
 20

	)

	@/usr/include/linux/fs.h

1 #i‚de‡
_LINUX_FS_H


2 
	#_LINUX_FS_H


	)

9 
	~<löux/limôs.h
>

10 
	~<löux/io˘l.h
>

11 
	~<löux/blk_ty≥s.h
>

12 
	~<löux/ty≥s.h
>

25 #unde‡
NR_OPEN


26 
	#INR_OPEN_CUR
 1024

	)

27 
	#INR_OPEN_MAX
 4096

	)

29 
	#BLOCK_SIZE_BITS
 10

	)

30 
	#BLOCK_SIZE
 (1<<
BLOCK_SIZE_BITS
)

	)

32 
	#SEEK_SET
 0

	)

33 
	#SEEK_CUR
 1

	)

34 
	#SEEK_END
 2

	)

35 
	#SEEK_DATA
 3

	)

36 
	#SEEK_HOLE
 4

	)

37 
	#SEEK_MAX
 
SEEK_HOLE


	)

39 
	sf°rim_ønge
 {

40 
__u64
 
	m°¨t
;

41 
__u64
 
	mÀn
;

42 
__u64
 
	mmöÀn
;

46 
	sfûes_°©_°ru˘
 {

47 
	mƒ_fûes
;

48 
	mƒ_‰ì_fûes
;

49 
	mmax_fûes
;

52 
	söodes_°©_t
 {

53 
	mƒ_öodes
;

54 
	mƒ_unu£d
;

55 
	mdummy
[5];

59 
	#NR_FILE
 8192

	)

61 
	#MAY_EXEC
 0x00000001

	)

62 
	#MAY_WRITE
 0x00000002

	)

63 
	#MAY_READ
 0x00000004

	)

64 
	#MAY_APPEND
 0x00000008

	)

65 
	#MAY_ACCESS
 0x00000010

	)

66 
	#MAY_OPEN
 0x00000020

	)

67 
	#MAY_CHDIR
 0x00000040

	)

69 
	#MAY_NOT_BLOCK
 0x00000080

	)

77 
	#FMODE_READ
 ((
fmode_t
)0x1)

	)

79 
	#FMODE_WRITE
 ((
fmode_t
)0x2)

	)

81 
	#FMODE_LSEEK
 ((
fmode_t
)0x4)

	)

83 
	#FMODE_PREAD
 ((
fmode_t
)0x8)

	)

85 
	#FMODE_PWRITE
 ((
fmode_t
)0x10)

	)

87 
	#FMODE_EXEC
 ((
fmode_t
)0x20)

	)

89 
	#FMODE_NDELAY
 ((
fmode_t
)0x40)

	)

91 
	#FMODE_EXCL
 ((
fmode_t
)0x80)

	)

94 
	#FMODE_WRITE_IOCTL
 ((
fmode_t
)0x100)

	)

96 
	#FMODE_32BITHASH
 ((
fmode_t
)0x200)

	)

98 
	#FMODE_64BITHASH
 ((
fmode_t
)0x400)

	)

106 
	#FMODE_NOCMTIME
 ((
fmode_t
)0x800)

	)

109 
	#FMODE_RANDOM
 ((
fmode_t
)0x1000)

	)

112 
	#FMODE_UNSIGNED_OFFSET
 ((
fmode_t
)0x2000)

	)

115 
	#FMODE_PATH
 ((
fmode_t
)0x4000)

	)

118 
	#FMODE_NONOTIFY
 ((
fmode_t
)0x1000000)

	)

162 
	#RW_MASK
 
REQ_WRITE


	)

163 
	#RWA_MASK
 
REQ_RAHEAD


	)

165 
	#READ
 0

	)

166 
	#WRITE
 
RW_MASK


	)

167 
	#READA
 
RWA_MASK


	)

169 
	#READ_SYNC
 (
READ
 | 
REQ_SYNC
)

	)

170 
	#WRITE_SYNC
 (
WRITE
 | 
REQ_SYNC
 | 
REQ_NOIDLE
)

	)

171 
	#WRITE_ODIRECT
 (
WRITE
 | 
REQ_SYNC
)

	)

172 
	#WRITE_FLUSH
 (
WRITE
 | 
REQ_SYNC
 | 
REQ_NOIDLE
 | 
REQ_FLUSH
)

	)

173 
	#WRITE_FUA
 (
WRITE
 | 
REQ_SYNC
 | 
REQ_NOIDLE
 | 
REQ_FUA
)

	)

174 
	#WRITE_FLUSH_FUA
 (
WRITE
 | 
REQ_SYNC
 | 
REQ_NOIDLE
 | 
REQ_FLUSH
 | 
REQ_FUA
)

	)

176 
	#SEL_IN
 1

	)

177 
	#SEL_OUT
 2

	)

178 
	#SEL_EX
 4

	)

181 
	#FS_REQUIRES_DEV
 1

	)

182 
	#FS_BINARY_MOUNTDATA
 2

	)

183 
	#FS_HAS_SUBTYPE
 4

	)

184 
	#FS_REVAL_DOT
 16384

	)

185 
	#FS_RENAME_DOES_D_MOVE
 32768

	)

192 
	#MS_RDONLY
 1

	)

193 
	#MS_NOSUID
 2

	)

194 
	#MS_NODEV
 4

	)

195 
	#MS_NOEXEC
 8

	)

196 
	#MS_SYNCHRONOUS
 16

	)

197 
	#MS_REMOUNT
 32

	)

198 
	#MS_MANDLOCK
 64

	)

199 
	#MS_DIRSYNC
 128

	)

200 
	#MS_NOATIME
 1024

	)

201 
	#MS_NODIRATIME
 2048

	)

202 
	#MS_BIND
 4096

	)

203 
	#MS_MOVE
 8192

	)

204 
	#MS_REC
 16384

	)

205 
	#MS_VERBOSE
 32768

	)

207 
	#MS_SILENT
 32768

	)

208 
	#MS_POSIXACL
 (1<<16Ë

	)

209 
	#MS_UNBINDABLE
 (1<<17Ë

	)

210 
	#MS_PRIVATE
 (1<<18Ë

	)

211 
	#MS_SLAVE
 (1<<19Ë

	)

212 
	#MS_SHARED
 (1<<20Ë

	)

213 
	#MS_RELATIME
 (1<<21Ë

	)

214 
	#MS_KERNMOUNT
 (1<<22Ë

	)

215 
	#MS_I_VERSION
 (1<<23Ë

	)

216 
	#MS_STRICTATIME
 (1<<24Ë

	)

217 
	#MS_NOSEC
 (1<<28)

	)

218 
	#MS_BORN
 (1<<29)

	)

219 
	#MS_ACTIVE
 (1<<30)

	)

220 
	#MS_NOUSER
 (1<<31)

	)

225 
	#MS_RMT_MASK
 (
MS_RDONLY
|
MS_SYNCHRONOUS
|
MS_MANDLOCK
|
MS_I_VERSION
)

	)

230 
	#MS_MGC_VAL
 0xC0ED0000

	)

231 
	#MS_MGC_MSK
 0xffff0000

	)

235 
	#S_SYNC
 1

	)

236 
	#S_NOATIME
 2

	)

237 
	#S_APPEND
 4

	)

238 
	#S_IMMUTABLE
 8

	)

239 
	#S_DEAD
 16

	)

240 
	#S_NOQUOTA
 32

	)

241 
	#S_DIRSYNC
 64

	)

242 
	#S_NOCMTIME
 128

	)

243 
	#S_SWAPFILE
 256

	)

244 
	#S_PRIVATE
 512

	)

245 
	#S_IMA
 1024

	)

246 
	#S_AUTOMOUNT
 2048

	)

247 
	#S_NOSEC
 4096

	)

262 
	#__IS_FLG
(
öode
,
Êg
Ë((öode)->
i_sb
->
s_Êags
 & (Êg))

	)

264 
	#IS_RDONLY
(
öode
Ë((öode)->
i_sb
->
s_Êags
 & 
MS_RDONLY
)

	)

265 
	#IS_SYNC
(
öode
Ë(
	`__IS_FLG
(öode, 
MS_SYNCHRONOUS
) || \

266 ((
öode
)->
i_Êags
 & 
S_SYNC
))

	)

267 
	#IS_DIRSYNC
(
öode
Ë(
	`__IS_FLG
(öode, 
MS_SYNCHRONOUS
|
MS_DIRSYNC
) || \

268 ((
öode
)->
i_Êags
 & (
S_SYNC
|
S_DIRSYNC
)))

	)

269 
	#IS_MANDLOCK
(
öode
Ë
	`__IS_FLG
(öode, 
MS_MANDLOCK
)

	)

270 
	#IS_NOATIME
(
öode
Ë
	`__IS_FLG
(öode, 
MS_RDONLY
|
MS_NOATIME
)

	)

271 
	#IS_I_VERSION
(
öode
Ë
	`__IS_FLG
(öode, 
MS_I_VERSION
)

	)

273 
	#IS_NOQUOTA
(
öode
Ë((öode)->
i_Êags
 & 
S_NOQUOTA
)

	)

274 
	#IS_APPEND
(
öode
Ë((öode)->
i_Êags
 & 
S_APPEND
)

	)

275 
	#IS_IMMUTABLE
(
öode
Ë((öode)->
i_Êags
 & 
S_IMMUTABLE
)

	)

276 
	#IS_POSIXACL
(
öode
Ë
	`__IS_FLG
(öode, 
MS_POSIXACL
)

	)

278 
	#IS_DEADDIR
(
öode
Ë((öode)->
i_Êags
 & 
S_DEAD
)

	)

279 
	#IS_NOCMTIME
(
öode
Ë((öode)->
i_Êags
 & 
S_NOCMTIME
)

	)

280 
	#IS_SWAPFILE
(
öode
Ë((öode)->
i_Êags
 & 
S_SWAPFILE
)

	)

281 
	#IS_PRIVATE
(
öode
Ë((öode)->
i_Êags
 & 
S_PRIVATE
)

	)

282 
	#IS_IMA
(
öode
Ë((öode)->
i_Êags
 & 
S_IMA
)

	)

283 
	#IS_AUTOMOUNT
(
öode
Ë((öode)->
i_Êags
 & 
S_AUTOMOUNT
)

	)

284 
	#IS_NOSEC
(
öode
Ë((öode)->
i_Êags
 & 
S_NOSEC
)

	)

289 
	#BLKROSET
 
	`_IO
(0x12,93Ë

	)

290 
	#BLKROGET
 
	`_IO
(0x12,94Ë

	)

291 
	#BLKRRPART
 
	`_IO
(0x12,95Ë

	)

292 
	#BLKGETSIZE
 
	`_IO
(0x12,96Ë

	)

293 
	#BLKFLSBUF
 
	`_IO
(0x12,97Ë

	)

294 
	#BLKRASET
 
	`_IO
(0x12,98Ë

	)

295 
	#BLKRAGET
 
	`_IO
(0x12,99Ë

	)

296 
	#BLKFRASET
 
	`_IO
(0x12,100)

	)

297 
	#BLKFRAGET
 
	`_IO
(0x12,101)

	)

298 
	#BLKSECTSET
 
	`_IO
(0x12,102)

	)

299 
	#BLKSECTGET
 
	`_IO
(0x12,103)

	)

300 
	#BLKSSZGET
 
	`_IO
(0x12,104)

	)

302 
	#BLKPG
 
	`_IO
(0x12,105)

	)

306 
	#BLKELVGET
 
	`_IOR
(0x12,106,
size_t
)

	)

307 
	#BLKELVSET
 
	`_IOW
(0x12,107,
size_t
)

	)

312 
	#BLKBSZGET
 
	`_IOR
(0x12,112,
size_t
)

	)

313 
	#BLKBSZSET
 
	`_IOW
(0x12,113,
size_t
)

	)

314 
	#BLKGETSIZE64
 
	`_IOR
(0x12,114,
size_t
Ë

	)

315 
	#BLKTRACESETUP
 
	`_IOWR
(0x12,115,
blk_u£r_åa˚_£tup
)

	)

316 
	#BLKTRACESTART
 
	`_IO
(0x12,116)

	)

317 
	#BLKTRACESTOP
 
	`_IO
(0x12,117)

	)

318 
	#BLKTRACETEARDOWN
 
	`_IO
(0x12,118)

	)

319 
	#BLKDISCARD
 
	`_IO
(0x12,119)

	)

320 
	#BLKIOMIN
 
	`_IO
(0x12,120)

	)

321 
	#BLKIOOPT
 
	`_IO
(0x12,121)

	)

322 
	#BLKALIGNOFF
 
	`_IO
(0x12,122)

	)

323 
	#BLKPBSZGET
 
	`_IO
(0x12,123)

	)

324 
	#BLKDISCARDZEROES
 
	`_IO
(0x12,124)

	)

325 
	#BLKSECDISCARD
 
	`_IO
(0x12,125)

	)

327 
	#BMAP_IOCTL
 1

	)

328 
	#FIBMAP
 
	`_IO
(0x00,1Ë

	)

329 
	#FIGETBSZ
 
	`_IO
(0x00,2Ë

	)

330 
	#FIFREEZE
 
	`_IOWR
('X', 119, Ë

	)

331 
	#FITHAW
 
	`_IOWR
('X', 120, Ë

	)

332 
	#FITRIM
 
	`_IOWR
('X', 121, 
f°rim_ønge
Ë

	)

334 
	#FS_IOC_GETFLAGS
 
	`_IOR
('f', 1, )

	)

335 
	#FS_IOC_SETFLAGS
 
	`_IOW
('f', 2, )

	)

336 
	#FS_IOC_GETVERSION
 
	`_IOR
('v', 1, )

	)

337 
	#FS_IOC_SETVERSION
 
	`_IOW
('v', 2, )

	)

338 
	#FS_IOC_FIEMAP
 
	`_IOWR
('f', 11, 
fõm≠
)

	)

339 
	#FS_IOC32_GETFLAGS
 
	`_IOR
('f', 1, )

	)

340 
	#FS_IOC32_SETFLAGS
 
	`_IOW
('f', 2, )

	)

341 
	#FS_IOC32_GETVERSION
 
	`_IOR
('v', 1, )

	)

342 
	#FS_IOC32_SETVERSION
 
	`_IOW
('v', 2, )

	)

347 
	#FS_SECRM_FL
 0x00000001

	)

348 
	#FS_UNRM_FL
 0x00000002

	)

349 
	#FS_COMPR_FL
 0x00000004

	)

350 
	#FS_SYNC_FL
 0x00000008

	)

351 
	#FS_IMMUTABLE_FL
 0x00000010

	)

352 
	#FS_APPEND_FL
 0x00000020

	)

353 
	#FS_NODUMP_FL
 0x00000040

	)

354 
	#FS_NOATIME_FL
 0x00000080

	)

356 
	#FS_DIRTY_FL
 0x00000100

	)

357 
	#FS_COMPRBLK_FL
 0x00000200

	)

358 
	#FS_NOCOMP_FL
 0x00000400

	)

359 
	#FS_ECOMPR_FL
 0x00000800

	)

361 
	#FS_BTREE_FL
 0x00001000

	)

362 
	#FS_INDEX_FL
 0x00001000

	)

363 
	#FS_IMAGIC_FL
 0x00002000

	)

364 
	#FS_JOURNAL_DATA_FL
 0x00004000

	)

365 
	#FS_NOTAIL_FL
 0x00008000

	)

366 
	#FS_DIRSYNC_FL
 0x00010000

	)

367 
	#FS_TOPDIR_FL
 0x00020000

	)

368 
	#FS_EXTENT_FL
 0x00080000

	)

369 
	#FS_DIRECTIO_FL
 0x00100000

	)

370 
	#FS_NOCOW_FL
 0x00800000

	)

371 
	#FS_RESERVED_FL
 0x80000000

	)

373 
	#FS_FL_USER_VISIBLE
 0x0003DFFF

	)

374 
	#FS_FL_USER_MODIFIABLE
 0x000380FF

	)

377 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

378 
	#SYNC_FILE_RANGE_WRITE
 2

	)

379 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

	@/usr/include/linux/hdreg.h

1 #i‚de‡
_LINUX_HDREG_H


2 
	#_LINUX_HDREG_H


	)

4 
	~<löux/ty≥s.h
>

10 
	#HDIO_DRIVE_CMD_HDR_SIZE
 (4 * (
__u8
))

	)

11 
	#HDIO_DRIVE_HOB_HDR_SIZE
 (8 * (
__u8
))

	)

12 
	#HDIO_DRIVE_TASK_HDR_SIZE
 (8 * (
__u8
))

	)

14 
	#IDE_DRIVE_TASK_NO_DATA
 0

	)

15 
	#IDE_DRIVE_TASK_INVALID
 -1

	)

16 
	#IDE_DRIVE_TASK_SET_XFER
 1

	)

17 
	#IDE_DRIVE_TASK_IN
 2

	)

18 
	#IDE_DRIVE_TASK_OUT
 3

	)

19 
	#IDE_DRIVE_TASK_RAW_WRITE
 4

	)

24 
	#IDE_TASKFILE_STD_IN_FLAGS
 0xFE

	)

25 
	#IDE_HOB_STD_IN_FLAGS
 0x3C

	)

26 
	#IDE_TASKFILE_STD_OUT_FLAGS
 0xFE

	)

27 
	#IDE_HOB_STD_OUT_FLAGS
 0x3C

	)

29 
	tèsk_i‹eg_t
;

30 
	tßè_i‹eg_t
;

32 
	uide_ªg_vÆid_s
 {

33 
	mÆl
 : 16;

35 
	md©a
 : 1;

36 
	mîr‹_„©uª
 : 1;

37 
	m£˘‹
 : 1;

38 
	mn£˘‹
 : 1;

39 
	mlcyl
 : 1;

40 
	mhcyl
 : 1;

41 
	m£À˘
 : 1;

42 
	m°©us_comm™d
 : 1;

44 
	md©a_hob
 : 1;

45 
	mîr‹_„©uª_hob
 : 1;

46 
	m£˘‹_hob
 : 1;

47 
	mn£˘‹_hob
 : 1;

48 
	mlcyl_hob
 : 1;

49 
	mhcyl_hob
 : 1;

50 
	m£À˘_hob
 : 1;

51 
	mc⁄åﬁ_hob
 : 1;

52 } 
	mb
;

53 } 
	tide_ªg_vÆid_t
;

55 
	side_èsk_ªque°_s
 {

56 
__u8
 
	mio_p‹ts
[8];

57 
__u8
 
	mhob_p‹ts
[8];

58 
ide_ªg_vÆid_t
 
	mout_Êags
;

59 
ide_ªg_vÆid_t
 
	mö_Êags
;

60 
	md©a_pha£
;

61 
	mªq_cmd
;

62 
	mout_size
;

63 
	mö_size
;

64 } 
	tide_èsk_ªque°_t
;

66 
	side_io˘l_ªque°_s
 {

67 
ide_èsk_ªque°_t
 *
	mèsk_ªque°
;

68 *
	mout_buf„r
;

69 *
	mö_buf„r
;

70 } 
	tide_io˘l_ªque°_t
;

72 
	shd_drive_cmd_hdr
 {

73 
__u8
 
	mcomm™d
;

74 
__u8
 
	m£˘‹_numbî
;

75 
__u8
 
	m„©uª
;

76 
__u8
 
	m£˘‹_cou¡
;

79 
	shd_drive_èsk_hdr
 {

80 
__u8
 
	md©a
;

81 
__u8
 
	m„©uª
;

82 
__u8
 
	m£˘‹_cou¡
;

83 
__u8
 
	m£˘‹_numbî
;

84 
__u8
 
	mlow_cylödî
;

85 
__u8
 
	mhigh_cylödî
;

86 
__u8
 
	mdevi˚_hód
;

87 
__u8
 
	mcomm™d
;

88 } 
	tèsk_°ru˘_t
;

90 
	shd_drive_hob_hdr
 {

91 
__u8
 
	md©a
;

92 
__u8
 
	m„©uª
;

93 
__u8
 
	m£˘‹_cou¡
;

94 
__u8
 
	m£˘‹_numbî
;

95 
__u8
 
	mlow_cylödî
;

96 
__u8
 
	mhigh_cylödî
;

97 
__u8
 
	mdevi˚_hód
;

98 
__u8
 
	mc⁄åﬁ
;

99 } 
	thob_°ru˘_t
;

101 
	#TASKFILE_NO_DATA
 0x0000

	)

103 
	#TASKFILE_IN
 0x0001

	)

104 
	#TASKFILE_MULTI_IN
 0x0002

	)

106 
	#TASKFILE_OUT
 0x0004

	)

107 
	#TASKFILE_MULTI_OUT
 0x0008

	)

108 
	#TASKFILE_IN_OUT
 0x0010

	)

110 
	#TASKFILE_IN_DMA
 0x0020

	)

111 
	#TASKFILE_OUT_DMA
 0x0040

	)

112 
	#TASKFILE_IN_DMAQ
 0x0080

	)

113 
	#TASKFILE_OUT_DMAQ
 0x0100

	)

115 
	#TASKFILE_P_IN
 0x0200

	)

116 
	#TASKFILE_P_OUT
 0x0400

	)

117 
	#TASKFILE_P_IN_DMA
 0x0800

	)

118 
	#TASKFILE_P_OUT_DMA
 0x1000

	)

119 
	#TASKFILE_P_IN_DMAQ
 0x2000

	)

120 
	#TASKFILE_P_OUT_DMAQ
 0x4000

	)

121 
	#TASKFILE_48
 0x8000

	)

122 
	#TASKFILE_INVALID
 0x7fff

	)

125 
	#WIN_NOP
 0x00

	)

129 
	#CFA_REQ_EXT_ERROR_CODE
 0x03

	)

133 
	#WIN_SRST
 0x08

	)

134 
	#WIN_DEVICE_RESET
 0x08

	)

138 
	#WIN_RECAL
 0x10

	)

139 
	#WIN_RESTORE
 
WIN_RECAL


	)

143 
	#WIN_READ
 0x20

	)

144 
	#WIN_READ_ONCE
 0x21

	)

145 
	#WIN_READ_LONG
 0x22

	)

146 
	#WIN_READ_LONG_ONCE
 0x23

	)

147 
	#WIN_READ_EXT
 0x24

	)

148 
	#WIN_READDMA_EXT
 0x25

	)

149 
	#WIN_READDMA_QUEUED_EXT
 0x26

	)

150 
	#WIN_READ_NATIVE_MAX_EXT
 0x27

	)

154 
	#WIN_MULTREAD_EXT
 0x29

	)

158 
	#WIN_WRITE
 0x30

	)

159 
	#WIN_WRITE_ONCE
 0x31

	)

160 
	#WIN_WRITE_LONG
 0x32

	)

161 
	#WIN_WRITE_LONG_ONCE
 0x33

	)

162 
	#WIN_WRITE_EXT
 0x34

	)

163 
	#WIN_WRITEDMA_EXT
 0x35

	)

164 
	#WIN_WRITEDMA_QUEUED_EXT
 0x36

	)

165 
	#WIN_SET_MAX_EXT
 0x37

	)

166 
	#CFA_WRITE_SECT_WO_ERASE
 0x38

	)

167 
	#WIN_MULTWRITE_EXT
 0x39

	)

171 
	#WIN_WRITE_VERIFY
 0x3C

	)

175 
	#WIN_VERIFY
 0x40

	)

176 
	#WIN_VERIFY_ONCE
 0x41

	)

177 
	#WIN_VERIFY_EXT
 0x42

	)

181 
	#WIN_FORMAT
 0x50

	)

185 
	#WIN_INIT
 0x60

	)

189 
	#WIN_SEEK
 0x70

	)

191 
	#CFA_TRANSLATE_SECTOR
 0x87

	)

192 
	#WIN_DIAGNOSE
 0x90

	)

193 
	#WIN_SPECIFY
 0x91

	)

194 
	#WIN_DOWNLOAD_MICROCODE
 0x92

	)

195 
	#WIN_STANDBYNOW2
 0x94

	)

196 
	#WIN_STANDBY2
 0x96

	)

197 
	#WIN_SETIDLE2
 0x97

	)

198 
	#WIN_CHECKPOWERMODE2
 0x98

	)

199 
	#WIN_SLEEPNOW2
 0x99

	)

203 
	#WIN_PACKETCMD
 0xA0

	)

204 
	#WIN_PIDENTIFY
 0xA1

	)

205 
	#WIN_QUEUED_SERVICE
 0xA2

	)

206 
	#WIN_SMART
 0xB0

	)

207 
	#CFA_ERASE_SECTORS
 0xC0

	)

208 
	#WIN_MULTREAD
 0xC4

	)

209 
	#WIN_MULTWRITE
 0xC5

	)

210 
	#WIN_SETMULT
 0xC6

	)

211 
	#WIN_READDMA_QUEUED
 0xC7

	)

212 
	#WIN_READDMA
 0xC8

	)

213 
	#WIN_READDMA_ONCE
 0xC9

	)

214 
	#WIN_WRITEDMA
 0xCA

	)

215 
	#WIN_WRITEDMA_ONCE
 0xCB

	)

216 
	#WIN_WRITEDMA_QUEUED
 0xCC

	)

217 
	#CFA_WRITE_MULTI_WO_ERASE
 0xCD

	)

218 
	#WIN_GETMEDIASTATUS
 0xDA

	)

219 
	#WIN_ACKMEDIACHANGE
 0xDB

	)

220 
	#WIN_POSTBOOT
 0xDC

	)

221 
	#WIN_PREBOOT
 0xDD

	)

222 
	#WIN_DOORLOCK
 0xDE

	)

223 
	#WIN_DOORUNLOCK
 0xDF

	)

224 
	#WIN_STANDBYNOW1
 0xE0

	)

225 
	#WIN_IDLEIMMEDIATE
 0xE1

	)

226 
	#WIN_STANDBY
 0xE2

	)

227 
	#WIN_SETIDLE1
 0xE3

	)

228 
	#WIN_READ_BUFFER
 0xE4

	)

229 
	#WIN_CHECKPOWERMODE1
 0xE5

	)

230 
	#WIN_SLEEPNOW1
 0xE6

	)

231 
	#WIN_FLUSH_CACHE
 0xE7

	)

232 
	#WIN_WRITE_BUFFER
 0xE8

	)

233 
	#WIN_WRITE_SAME
 0xE9

	)

235 
	#WIN_FLUSH_CACHE_EXT
 0xEA

	)

236 
	#WIN_IDENTIFY
 0xEC

	)

237 
	#WIN_MEDIAEJECT
 0xED

	)

238 
	#WIN_IDENTIFY_DMA
 0xEE

	)

239 
	#WIN_SETFEATURES
 0xEF

	)

240 
	#EXABYTE_ENABLE_NEST
 0xF0

	)

241 
	#WIN_SECURITY_SET_PASS
 0xF1

	)

242 
	#WIN_SECURITY_UNLOCK
 0xF2

	)

243 
	#WIN_SECURITY_ERASE_PREPARE
 0xF3

	)

244 
	#WIN_SECURITY_ERASE_UNIT
 0xF4

	)

245 
	#WIN_SECURITY_FREEZE_LOCK
 0xF5

	)

246 
	#WIN_SECURITY_DISABLE
 0xF6

	)

247 
	#WIN_READ_NATIVE_MAX
 0xF8

	)

248 
	#WIN_SET_MAX
 0xF9

	)

249 
	#DISABLE_SEAGATE
 0xFB

	)

253 
	#SMART_READ_VALUES
 0xD0

	)

254 
	#SMART_READ_THRESHOLDS
 0xD1

	)

255 
	#SMART_AUTOSAVE
 0xD2

	)

256 
	#SMART_SAVE
 0xD3

	)

257 
	#SMART_IMMEDIATE_OFFLINE
 0xD4

	)

258 
	#SMART_READ_LOG_SECTOR
 0xD5

	)

259 
	#SMART_WRITE_LOG_SECTOR
 0xD6

	)

260 
	#SMART_WRITE_THRESHOLDS
 0xD7

	)

261 
	#SMART_ENABLE
 0xD8

	)

262 
	#SMART_DISABLE
 0xD9

	)

263 
	#SMART_STATUS
 0xDA

	)

264 
	#SMART_AUTO_OFFLINE
 0xDB

	)

268 
	#SMART_LCYL_PASS
 0x4F

	)

269 
	#SMART_HCYL_PASS
 0xC2

	)

272 
	#SETFEATURES_EN_8BIT
 0x01

	)

273 
	#SETFEATURES_EN_WCACHE
 0x02

	)

274 
	#SETFEATURES_DIS_DEFECT
 0x04

	)

275 
	#SETFEATURES_EN_APM
 0x05

	)

276 
	#SETFEATURES_EN_SAME_R
 0x22

	)

277 
	#SETFEATURES_DIS_MSN
 0x31

	)

278 
	#SETFEATURES_DIS_RETRY
 0x33

	)

279 
	#SETFEATURES_EN_AAM
 0x42

	)

280 
	#SETFEATURES_RW_LONG
 0x44

	)

281 
	#SETFEATURES_SET_CACHE
 0x54

	)

282 
	#SETFEATURES_DIS_RLA
 0x55

	)

283 
	#SETFEATURES_EN_RI
 0x5D

	)

284 
	#SETFEATURES_EN_SI
 0x5E

	)

285 
	#SETFEATURES_DIS_RPOD
 0x66

	)

286 
	#SETFEATURES_DIS_ECC
 0x77

	)

287 
	#SETFEATURES_DIS_8BIT
 0x81

	)

288 
	#SETFEATURES_DIS_WCACHE
 0x82

	)

289 
	#SETFEATURES_EN_DEFECT
 0x84

	)

290 
	#SETFEATURES_DIS_APM
 0x85

	)

291 
	#SETFEATURES_EN_ECC
 0x88

	)

292 
	#SETFEATURES_EN_MSN
 0x95

	)

293 
	#SETFEATURES_EN_RETRY
 0x99

	)

294 
	#SETFEATURES_EN_RLA
 0xAA

	)

295 
	#SETFEATURES_PREFETCH
 0xAB

	)

296 
	#SETFEATURES_EN_REST
 0xAC

	)

297 
	#SETFEATURES_4B_RW_LONG
 0xBB

	)

298 
	#SETFEATURES_DIS_AAM
 0xC2

	)

299 
	#SETFEATURES_EN_RPOD
 0xCC

	)

300 
	#SETFEATURES_DIS_RI
 0xDD

	)

301 
	#SETFEATURES_EN_SAME_M
 0xDD

	)

302 
	#SETFEATURES_DIS_SI
 0xDE

	)

306 
	#SECURITY_SET_PASSWORD
 0xBA

	)

307 
	#SECURITY_UNLOCK
 0xBB

	)

308 
	#SECURITY_ERASE_PREPARE
 0xBC

	)

309 
	#SECURITY_ERASE_UNIT
 0xBD

	)

310 
	#SECURITY_FREEZE_LOCK
 0xBE

	)

311 
	#SECURITY_DISABLE_PASSWORD
 0xBF

	)

313 
	shd_geomëry
 {

314 
	mhóds
;

315 
	m£˘‹s
;

316 
	mcylödîs
;

317 
	m°¨t
;

321 
	#HDIO_GETGEO
 0x0301

	)

322 
	#HDIO_GET_UNMASKINTR
 0x0302

	)

323 
	#HDIO_GET_MULTCOUNT
 0x0304

	)

324 
	#HDIO_GET_QDMA
 0x0305

	)

326 
	#HDIO_SET_XFER
 0x0306

	)

328 
	#HDIO_OBSOLETE_IDENTITY
 0x0307

	)

329 
	#HDIO_GET_KEEPSETTINGS
 0x0308

	)

330 
	#HDIO_GET_32BIT
 0x0309

	)

331 
	#HDIO_GET_NOWERR
 0x030®

	)

332 
	#HDIO_GET_DMA
 0x030b

	)

333 
	#HDIO_GET_NICE
 0x030¯

	)

334 
	#HDIO_GET_IDENTITY
 0x030d

	)

335 
	#HDIO_GET_WCACHE
 0x030ê

	)

336 
	#HDIO_GET_ACOUSTIC
 0x030‡

	)

337 
	#HDIO_GET_ADDRESS
 0x0310

	)

339 
	#HDIO_GET_BUSSTATE
 0x031®

	)

340 
	#HDIO_TRISTATE_HWIF
 0x031b

	)

341 
	#HDIO_DRIVE_RESET
 0x031¯

	)

342 
	#HDIO_DRIVE_TASKFILE
 0x031d

	)

343 
	#HDIO_DRIVE_TASK
 0x031ê

	)

344 
	#HDIO_DRIVE_CMD
 0x031‡

	)

345 
	#HDIO_DRIVE_CMD_AEB
 
HDIO_DRIVE_TASK


	)

348 
	#HDIO_SET_MULTCOUNT
 0x0321

	)

349 
	#HDIO_SET_UNMASKINTR
 0x0322

	)

350 
	#HDIO_SET_KEEPSETTINGS
 0x0323

	)

351 
	#HDIO_SET_32BIT
 0x0324

	)

352 
	#HDIO_SET_NOWERR
 0x0325

	)

353 
	#HDIO_SET_DMA
 0x0326

	)

354 
	#HDIO_SET_PIO_MODE
 0x0327

	)

355 
	#HDIO_SCAN_HWIF
 0x0328

	)

356 
	#HDIO_UNREGISTER_HWIF
 0x032®

	)

357 
	#HDIO_SET_NICE
 0x0329

	)

358 
	#HDIO_SET_WCACHE
 0x032b

	)

359 
	#HDIO_SET_ACOUSTIC
 0x032¯

	)

360 
	#HDIO_SET_BUSSTATE
 0x032d

	)

361 
	#HDIO_SET_QDMA
 0x032ê

	)

362 
	#HDIO_SET_ADDRESS
 0x032‡

	)

366 
	mBUSSTATE_OFF
 = 0,

367 
	mBUSSTATE_ON
,

368 
	mBUSSTATE_TRISTATE


377 
	#__NEW_HD_DRIVE_ID


	)

385 
	shd_driveid
 {

386 
	mc⁄fig
;

387 
	mcyls
;

388 
	mª£rved2
;

389 
	mhóds
;

390 
	måack_byãs
;

391 
	m£˘‹_byãs
;

392 
	m£˘‹s
;

393 
	mvíd‹0
;

394 
	mvíd‹1
;

395 
	mvíd‹2
;

396 
	m£rül_no
[20];

397 
	mbuf_ty≥
;

398 
	mbuf_size
;

401 
	mecc_byãs
;

402 
	mfw_ªv
[8];

403 
	mmodñ
[40];

404 
	mmax_mu…£˘
;

405 
	mvíd‹3
;

406 
	mdw‹d_io
;

407 
	mvíd‹4
;

408 
	mˇ∑bûôy
;

414 
	mª£rved50
;

415 
	mvíd‹5
;

416 
	mtPIO
;

417 
	mvíd‹6
;

418 
	mtDMA
;

419 
	mfõld_vÆid
;

424 
	mcur_cyls
;

425 
	mcur_hóds
;

426 
	mcur_£˘‹s
;

427 
	mcur_ˇ∑côy0
;

428 
	mcur_ˇ∑côy1
;

429 
	mmu…£˘
;

430 
	mmu…£˘_vÆid
;

431 
	mlba_ˇ∑côy
;

432 
	mdma_1w‹d
;

433 
	mdma_mw‹d
;

434 
	meide_pio_modes
;

435 
	meide_dma_mö
;

436 
	meide_dma_time
;

437 
	meide_pio
;

438 
	meide_pio_i‹dy
;

439 
	mw‹ds69_70
[2];

442 
	mw‹ds71_74
[4];

445 
	mqueue_dïth
;

449 
	mw‹ds76_79
[4];

450 
	mmaj‹_ªv_num
;

451 
	mmö‹_ªv_num
;

452 
	mcomm™d_£t_1
;

470 
	mcomm™d_£t_2
;

488 
	mcfs£
;

500 
	mcfs_íabÀ_1
;

519 
	mcfs_íabÀ_2
;

538 
	mcsf_deÁu…
;

550 
	mdma_u…ø
;

551 
	må£uc
;

552 
	måsEuc
;

553 
	mCurAPMvÆues
;

554 
	mm¥c
;

555 
	mhw_c⁄fig
;

573 
	macou°ic
;

577 
	mm§qs
;

578 
	msx„π
;

579 
	mßl
;

580 
	m•g
;

581 
	mlba_ˇ∑côy_2
;

582 
	mw‹ds104_125
[22];

583 
	mœ°_lun
;

584 
	mw‹d127
;

592 
	mdlf
;

604 
	mcsfo
;

612 
	mw‹ds130_155
[26];

613 
	mw‹d156
;

614 
	mw‹ds157_159
[3];

615 
	mcÁ_powî
;

622 
	mw‹ds161_175
[15];

623 
	mw‹ds176_205
[30];

624 
	mw‹ds206_254
[49];

625 
	möãgrôy_w‹d
;

636 
	#IDE_NICE_DSC_OVERLAP
 (0Ë

	)

637 
	#IDE_NICE_ATAPI_OVERLAP
 (1Ë

	)

638 
	#IDE_NICE_1
 (3Ë

	)

639 
	#IDE_NICE_0
 (2Ë

	)

640 
	#IDE_NICE_2
 (4Ë

	)

	@/usr/include/linux/kernel.h

1 #i‚de‡
_LINUX_KERNEL_H


2 
	#_LINUX_KERNEL_H


	)

7 
	#__ALIGN_KERNEL
(
x
, 
a
Ë
	`__ALIGN_KERNEL_MASK
(x, (
	`ty≥of
(x))◊Ë- 1)

	)

8 
	#__ALIGN_KERNEL_MASK
(
x
, 
mask
Ë(((xË+ (mask)Ë& ~(mask))

	)

11 
	#SI_LOAD_SHIFT
 16

	)

12 
	ssysöfo
 {

13 
	mu±ime
;

14 
	mlﬂds
[3];

15 
	mtŸÆøm
;

16 
	m‰ìøm
;

17 
	msh¨edøm
;

18 
	mbuf„ºam
;

19 
	mtŸÆsw≠
;

20 
	m‰ìsw≠
;

21 
	m¥ocs
;

22 
	m∑d
;

23 
	mtŸÆhigh
;

24 
	m‰ìhigh
;

25 
	mmem_unô
;

26 
	m_f
[20-2*()-()];

	@/usr/include/linux/sched.h

1 #i‚de‡
_LINUX_SCHED_H


2 
	#_LINUX_SCHED_H


	)

7 
	#CSIGNAL
 0x000000f‡

	)

8 
	#CLONE_VM
 0x00000100

	)

9 
	#CLONE_FS
 0x00000200

	)

10 
	#CLONE_FILES
 0x00000400

	)

11 
	#CLONE_SIGHAND
 0x00000800

	)

12 
	#CLONE_PTRACE
 0x00002000

	)

13 
	#CLONE_VFORK
 0x00004000

	)

14 
	#CLONE_PARENT
 0x00008000

	)

15 
	#CLONE_THREAD
 0x00010000

	)

16 
	#CLONE_NEWNS
 0x00020000

	)

17 
	#CLONE_SYSVSEM
 0x00040000

	)

18 
	#CLONE_SETTLS
 0x00080000

	)

19 
	#CLONE_PARENT_SETTID
 0x00100000

	)

20 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

21 
	#CLONE_DETACHED
 0x00400000

	)

22 
	#CLONE_UNTRACED
 0x00800000

	)

23 
	#CLONE_CHILD_SETTID
 0x01000000

	)

26 
	#CLONE_NEWUTS
 0x04000000

	)

27 
	#CLONE_NEWIPC
 0x08000000

	)

28 
	#CLONE_NEWUSER
 0x10000000

	)

29 
	#CLONE_NEWPID
 0x20000000

	)

30 
	#CLONE_NEWNET
 0x40000000

	)

31 
	#CLONE_IO
 0x80000000

	)

36 
	#SCHED_NORMAL
 0

	)

37 
	#SCHED_FIFO
 1

	)

38 
	#SCHED_RR
 2

	)

39 
	#SCHED_BATCH
 3

	)

41 
	#SCHED_IDLE
 5

	)

43 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

	@/usr/include/linux/tty.h

1 #i‚de‡
_LINUX_TTY_H


2 
	#_LINUX_TTY_H


	)

8 
	#NR_LDISCS
 30

	)

11 
	#N_TTY
 0

	)

12 
	#N_SLIP
 1

	)

13 
	#N_MOUSE
 2

	)

14 
	#N_PPP
 3

	)

15 
	#N_STRIP
 4

	)

16 
	#N_AX25
 5

	)

17 
	#N_X25
 6

	)

18 
	#N_6PACK
 7

	)

19 
	#N_MASC
 8

	)

20 
	#N_R3964
 9

	)

21 
	#N_PROFIBUS_FDL
 10

	)

22 
	#N_IRDA
 11

	)

23 
	#N_SMSBLOCK
 12

	)

25 
	#N_HDLC
 13

	)

26 
	#N_SYNC_PPP
 14

	)

27 
	#N_HCI
 15

	)

28 
	#N_GIGASET_M101
 16

	)

29 
	#N_SLCAN
 17

	)

30 
	#N_PPS
 18

	)

31 
	#N_V253
 19

	)

32 
	#N_CAIF
 20

	)

33 
	#N_GSM0710
 21

	)

34 
	#N_TI_WL
 22

	)

35 
	#N_TRACESINK
 23

	)

36 
	#N_TRACEROUTER
 24

	)

	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

144 #ifde‡
__USE_GNU


145 
	#SEEK_DATA
 3

	)

146 
	#SEEK_HOLE
 4

	)

150 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


152 
	#P_tmpdú
 "/tmp"

	)

165 
	~<bôs/°dio_lim.h
>

169 
_IO_FILE
 *
°dö
;

170 
_IO_FILE
 *
°dout
;

171 
_IO_FILE
 *
°dîr
;

173 
	#°dö
 
°dö


	)

174 
	#°dout
 
°dout


	)

175 
	#°dîr
 
°dîr


	)

177 
__BEGIN_NAMESPACE_STD


179 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

181 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

182 
__END_NAMESPACE_STD


184 #ifde‡
__USE_ATFILE


186 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

187 
__c⁄°
 *
__√w
Ë
__THROW
;

190 
__BEGIN_NAMESPACE_STD


195 #i‚de‡
__USE_FILE_OFFSET64


196 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

198 #ifde‡
__REDIRECT


199 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

201 
	#tmpfûe
 
tmpfûe64


	)

205 #ifde‡
__USE_LARGEFILE64


206 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

210 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

211 
__END_NAMESPACE_STD


213 #ifde‡
__USE_MISC


216 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

220 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


228 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

229 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

233 
__BEGIN_NAMESPACE_STD


238 
	`f˛o£
 (
FILE
 *
__°ªam
);

243 
	`fÊush
 (
FILE
 *
__°ªam
);

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_MISC


253 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

256 #ifde‡
__USE_GNU


263 
	`f˛o£Æl
 ();

267 
__BEGIN_NAMESPACE_STD


268 #i‚de‡
__USE_FILE_OFFSET64


273 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

274 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

279 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

280 
__c⁄°
 *
__ª°ri˘
 
__modes
,

281 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

283 #ifde‡
__REDIRECT


284 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

285 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

286 
__wur
;

287 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

288 
__c⁄°
 *
__ª°ri˘
 
__modes
,

289 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

290 
__wur
;

292 
	#f›í
 
f›í64


	)

293 
	#‰e›í
 
‰e›í64


	)

296 
__END_NAMESPACE_STD


297 #ifde‡
__USE_LARGEFILE64


298 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

300 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

301 
__c⁄°
 *
__ª°ri˘
 
__modes
,

302 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

305 #ifdef 
__USE_POSIX


307 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

310 #ifdef 
__USE_GNU


313 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

314 
__c⁄°
 *
__ª°ri˘
 
__modes
,

315 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

318 #ifde‡
__USE_XOPEN2K8


320 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

321 
__THROW
 
__wur
;

326 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

330 
__BEGIN_NAMESPACE_STD


333 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

337 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

338 
__modes
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifdef 
__USE_BSD


344 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

345 
size_t
 
__size
Ë
__THROW
;

348 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

352 
__BEGIN_NAMESPACE_STD


357 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

358 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

365 
	$•rötf
 (*
__ª°ri˘
 
__s
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

372 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

373 
_G_va_li°
 
__¨g
);

378 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

380 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

381 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

382 
__END_NAMESPACE_STD


384 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


385 
__BEGIN_NAMESPACE_C99


387 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

389 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

391 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

392 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

393 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

394 
__END_NAMESPACE_C99


397 #ifde‡
__USE_GNU


400 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

401 
_G_va_li°
 
__¨g
)

402 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

403 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

404 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

405 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

406 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

407 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

408 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

411 #ifde‡
__USE_XOPEN2K8


418 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

419 
_G_va_li°
 
__¨g
)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

421 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

422 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

426 
__BEGIN_NAMESPACE_STD


431 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

432 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

439 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

440 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

442 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

443 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

444 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

445 #ifde‡
__REDIRECT


449 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

450 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_fsˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

453 
__isoc99_sˇnf
Ë
__wur
;

454 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

456 
__isoc99_ssˇnf
);

458 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

459 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

460 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

461 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

462 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

463 
	#fsˇnf
 
__isoc99_fsˇnf


	)

464 
	#sˇnf
 
__isoc99_sˇnf


	)

465 
	#ssˇnf
 
__isoc99_ssˇnf


	)

469 
__END_NAMESPACE_STD


471 #ifdef 
__USE_ISOC99


472 
__BEGIN_NAMESPACE_C99


477 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

478 
_G_va_li°
 
__¨g
)

479 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

485 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

486 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

489 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

490 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

491 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

493 #i‡!
deföed
 
__USE_GNU
 \

494 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

495 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

496 #ifde‡
__REDIRECT


500 
	`__REDIRECT
 (
vfsˇnf
,

501 (
FILE
 *
__ª°ri˘
 
__s
,

502 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

503 
__isoc99_vfsˇnf
)

504 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

505 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

506 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

507 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

508 
	`__REDIRECT_NTH
 (
vssˇnf
,

509 (
__c⁄°
 *
__ª°ri˘
 
__s
,

510 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

511 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

512 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

514 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

515 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

518 
_G_va_li°
 
__¨g
Ë
__wur
;

519 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

520 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

521 
_G_va_li°
 
__¨g
Ë
__THROW
;

522 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

523 
	#vsˇnf
 
__isoc99_vsˇnf


	)

524 
	#vssˇnf
 
__isoc99_vssˇnf


	)

528 
__END_NAMESPACE_C99


532 
__BEGIN_NAMESPACE_STD


537 
	`fgëc
 (
FILE
 *
__°ªam
);

538 
	`gëc
 (
FILE
 *
__°ªam
);

544 
	`gëch¨
 ();

545 
__END_NAMESPACE_STD


549 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

551 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


556 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

557 
	`gëch¨_u∆ocked
 ();

560 #ifde‡
__USE_MISC


567 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

571 
__BEGIN_NAMESPACE_STD


579 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

586 
	`putch¨
 (
__c
);

587 
__END_NAMESPACE_STD


591 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

593 #ifde‡
__USE_MISC


600 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


608 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

609 
	`putch¨_u∆ocked
 (
__c
);

613 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

614 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

616 
	`gëw
 (
FILE
 *
__°ªam
);

619 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

623 
__BEGIN_NAMESPACE_STD


628 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

629 
__wur
;

636 *
	$gës
 (*
__s
Ë
__wur
;

637 
__END_NAMESPACE_STD


639 #ifde‡
__USE_GNU


646 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

647 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 #ifdef 
__USE_XOPEN2K8


662 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

663 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

664 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

665 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

676 
size_t
 *
__ª°ri˘
 
__n
,

677 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

681 
__BEGIN_NAMESPACE_STD


686 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

692 
	`puts
 (
__c⁄°
 *
__s
);

699 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

706 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

707 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

714 
__END_NAMESPACE_STD


716 #ifde‡
__USE_GNU


723 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

724 
FILE
 *
__ª°ri˘
 
__°ªam
);

727 #ifde‡
__USE_MISC


734 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

736 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

737 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

741 
__BEGIN_NAMESPACE_STD


746 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

751 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

756 
	`ªwöd
 (
FILE
 *
__°ªam
);

757 
__END_NAMESPACE_STD


764 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


765 #i‚de‡
__USE_FILE_OFFSET64


770 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

775 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

777 #ifde‡
__REDIRECT


778 
	`__REDIRECT
 (
f£eko
,

779 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

780 
f£eko64
);

781 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

783 
	#f£eko
 
f£eko64


	)

784 
	#·ñlo
 
·ñlo64


	)

789 
__BEGIN_NAMESPACE_STD


790 #i‚de‡
__USE_FILE_OFFSET64


795 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

800 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

802 #ifde‡
__REDIRECT


803 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

804 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

805 
	`__REDIRECT
 (
f£ços
,

806 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

808 
	#fgëpos
 
fgëpos64


	)

809 
	#f£ços
 
f£ços64


	)

812 
__END_NAMESPACE_STD


814 #ifde‡
__USE_LARGEFILE64


815 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

816 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

817 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

818 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

821 
__BEGIN_NAMESPACE_STD


823 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

825 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

827 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

828 
__END_NAMESPACE_STD


830 #ifde‡
__USE_MISC


832 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

833 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

838 
__BEGIN_NAMESPACE_STD


843 
	`≥º‹
 (
__c⁄°
 *
__s
);

844 
__END_NAMESPACE_STD


850 
	~<bôs/sys_îæi°.h
>

853 #ifdef 
__USE_POSIX


855 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

858 #ifde‡
__USE_MISC


860 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

864 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

865 
deföed
 
__USE_MISC
)

870 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

876 
	`p˛o£
 (
FILE
 *
__°ªam
);

880 #ifdef 
__USE_POSIX


882 *
	$˘îmid
 (*
__s
Ë
__THROW
;

886 #ifde‡
__USE_XOPEN


888 *
	`cu£rid
 (*
__s
);

892 #ifdef 
__USE_GNU


893 
ob°ack
;

896 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

897 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

898 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

899 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

901 
_G_va_li°
 
__¨gs
)

902 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

906 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


910 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

914 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

917 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

920 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


924 
	#__√ed_gë›t


	)

925 
	~<gë›t.h
>

930 #ifde‡
__USE_EXTERN_INLINES


931 
	~<bôs/°dio.h
>

933 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


934 
	~<bôs/°dio2.h
>

936 #ifde‡
__LDBL_COMPAT


937 
	~<bôs/°dio-ldbl.h
>

940 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/termios.h

23 #i‚def 
_TERMIOS_H


24 
	#_TERMIOS_H
 1

	)

26 
	~<„©uªs.h
>

27 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


29 
	~<bôs/ty≥s.h
>

30 #i‚de‡
__pid_t_deföed


31 
__pid_t
 
	tpid_t
;

32 
	#__pid_t_deföed


	)

36 
	g__BEGIN_DECLS


40 
	~<bôs/ãrmios.h
>

42 #ifde‡
__USE_BSD


45 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

49 
•ìd_t
 
	$cfgëo•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

52 
•ìd_t
 
	$cfgëi•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

55 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

58 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

60 #ifdef 
__USE_BSD


62 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

67 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

71 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

72 
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

75 #ifdef 
__USE_BSD


77 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

81 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

87 
	`tcdøö
 (
__fd
);

91 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

95 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

98 #ifde‡
__USE_UNIX98


100 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

104 #ifde‡
__USE_BSD


105 
	~<sys/âydeÁu…s.h
>

108 
__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

315 #ifde‡
__USE_GNU


316 
	#SEEK_DATA
 3

	)

317 
	#SEEK_HOLE
 4

	)

321 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


323 
	#L_SET
 
SEEK_SET


	)

324 
	#L_INCR
 
SEEK_CUR


	)

325 
	#L_XTND
 
SEEK_END


	)

334 #i‚de‡
__USE_FILE_OFFSET64


335 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

337 #ifde‡
__REDIRECT_NTH


338 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

339 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

340 
l£ek64
);

342 
	#l£ek
 
l£ek64


	)

345 #ifde‡
__USE_LARGEFILE64


346 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

347 
__THROW
;

354 
	`˛o£
 (
__fd
);

361 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

367 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

369 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


370 #i‚de‡
__USE_FILE_OFFSET64


377 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

378 
__off_t
 
__off£t
Ë
__wur
;

385 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

386 
__off_t
 
__off£t
Ë
__wur
;

388 #ifde‡
__REDIRECT


389 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

390 
__off64_t
 
__off£t
),

391 
¥ód64
Ë
__wur
;

392 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

393 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

394 
pwrôe64
Ë
__wur
;

396 
	#¥ód
 
¥ód64


	)

397 
	#pwrôe
 
pwrôe64


	)

401 #ifde‡
__USE_LARGEFILE64


405 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

406 
__off64_t
 
__off£t
Ë
__wur
;

409 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

410 
__off64_t
 
__off£t
Ë
__wur
;

418 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

420 #ifde‡
__USE_GNU


423 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

433 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

445 
	`¶ìp
 (
__£c⁄ds
);

447 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

448 || 
deföed
 
__USE_BSD


453 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

454 
__THROW
;

461 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

470 
	`∑u£
 ();

474 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

475 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

477 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


479 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

484 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

485 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

489 #ifde‡
__USE_ATFILE


492 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

493 
__gid_t
 
__group
, 
__Êag
)

494 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

498 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


502 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

512 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

514 #ifdef 
__USE_GNU


518 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

521 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

522 || 
deföed
 
__USE_BSD


526 *
	$gëwd
 (*
__buf
)

527 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

532 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

535 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

537 #ifde‡
__USE_GNU


540 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

544 **
__ívú⁄
;

545 #ifde‡
__USE_GNU


546 **
ívú⁄
;

552 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

553 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

555 #ifde‡
__USE_XOPEN2K8


558 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((2));

564 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

575 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

580 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

585 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

586 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

588 #ifde‡
__USE_GNU


591 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

592 *
__c⁄°
 
__ívp
[])

593 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

597 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


599 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

604 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

610 
	~<bôs/c⁄‚ame.h
>

613 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

614 
__THROW
 
	`__n⁄nuŒ
 ((1));

617 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

620 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

622 #ifdef 
__USE_POSIX2


624 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

629 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

632 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

636 #i‚de‡
__FAVOR_BSD


637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

639 #ifde‡
__REDIRECT_NTH


640 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

642 
	#gëpgΩ
 
__gëpgid


	)

647 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


649 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

656 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

658 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


669 #i‚de‡
__FAVOR_BSD


673 
	$£çgΩ
 (Ë
__THROW
;

678 #ifde‡
__REDIRECT_NTH


679 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

681 
	#£çgΩ
 
£çgid


	)

690 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

692 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


694 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

698 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

701 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

704 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

707 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

712 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

714 #ifdef 
__USE_GNU


716 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

723 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


728 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

731 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


733 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

740 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


745 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

748 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


750 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

753 #ifde‡
__USE_GNU


756 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

757 
__THROW
;

761 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

762 
__THROW
;

766 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

767 
__THROW
;

771 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

772 
__THROW
;

779 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

781 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

782 || 
deföed
 
__USE_BSD


787 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

793 *
	$ây«me
 (
__fd
Ë
__THROW
;

797 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

802 
	$ißây
 (
__fd
Ë
__THROW
;

804 #i‡
deföed
 
__USE_BSD
 \

805 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

808 
	$ây¶Ÿ
 (Ë
__THROW
;

813 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

816 #ifde‡
__USE_ATFILE


819 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

820 
__c⁄°
 *
__to
, 
__Êags
)

821 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

824 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


826 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

832 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

833 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

837 #ifde‡
__USE_ATFILE


839 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

840 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

843 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

844 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

845 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

849 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_ATFILE


853 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

854 
__THROW
 
	`__n⁄nuŒ
 ((2));

858 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

862 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

865 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

872 *
	`gëlogö
 ();

873 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


880 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

883 #ifdef 
__USE_BSD


885 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

889 #ifdef 
__USE_POSIX2


893 
	#__√ed_gë›t


	)

894 
	~<gë›t.h
>

898 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


902 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

906 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

909 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

910 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

914 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

920 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

929 
	$vh™gup
 (Ë
__THROW
;

932 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

940 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

941 
size_t
 
__off£t
, 
__sˇÀ
)

942 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

952 *
	$gëu£rshñl
 (Ë
__THROW
;

953 
	$ídu£rshñl
 (Ë
__THROW
;

954 
	$£tu£rshñl
 (Ë
__THROW
;

960 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

964 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

967 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

971 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

975 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


980 
	`fsync
 (
__fd
);

984 #ifde‡
__USE_GNU


987 
	$syncfs
 (
__fd
Ë
__THROW
;

991 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


994 
	`gëho°id
 ();

997 
	$sync
 (Ë
__THROW
;

1000 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


1003 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1008 
	$gëdèbÀsize
 (Ë
__THROW
;

1014 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1017 #i‚de‡
__USE_FILE_OFFSET64


1018 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
åunˇã
,

1023 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1024 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1026 
	#åunˇã
 
åunˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1031 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1036 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1039 #i‚de‡
__USE_FILE_OFFSET64


1040 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1042 #ifde‡
__REDIRECT_NTH


1043 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1044 
·runˇã64
Ë
__wur
;

1046 
	#·runˇã
 
·runˇã64


	)

1049 #ifde‡
__USE_LARGEFILE64


1050 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1056 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1057 || 
deföed
 
__USE_MISC


1061 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1067 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1071 #ifde‡
__USE_MISC


1082 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1087 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1099 
	#F_ULOCK
 0

	)

1100 
	#F_LOCK
 1

	)

1101 
	#F_TLOCK
 2

	)

1102 
	#F_TEST
 3

	)

1104 #i‚de‡
__USE_FILE_OFFSET64


1105 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1107 #ifde‡
__REDIRECT


1108 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1109 
lockf64
Ë
__wur
;

1111 
	#lockf
 
lockf64


	)

1114 #ifde‡
__USE_LARGEFILE64


1115 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1120 #ifde‡
__USE_GNU


1125 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1126 (
__exãnsi⁄__
 \

1127 ({ 
__ªsu…
; \

1128 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1129 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1130 
__ªsu…
; 
	}
}))

	)

1133 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1136 
fd©async
 (
__fûdes
);

1142 #ifdef 
__USE_XOPEN


1144 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1145 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1149 
	$í¸y±
 (*
__libc_block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1156 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1157 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1163 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1165 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1170 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1171 
	~<bôs/uni°d.h
>

1174 
__END_DECLS


	@/usr/include/utime.h

23 #i‚def 
_UTIME_H


24 
	#_UTIME_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


33 
	#__√ed_time_t


	)

34 
	~<time.h
>

38 
	sutimbuf


40 
__time_t
 
	ma˘ime
;

41 
__time_t
 
	mmodtime
;

46 
	$utime
 (
__c⁄°
 *
__fûe
,

47 
__c⁄°
 
utimbuf
 *
__fûe_times
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1));

50 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_POSIX


101 #unde‡
__USE_POSIX2


102 #unde‡
__USE_POSIX199309


103 #unde‡
__USE_POSIX199506


104 #unde‡
__USE_XOPEN


105 #unde‡
__USE_XOPEN_EXTENDED


106 #unde‡
__USE_UNIX98


107 #unde‡
__USE_XOPEN2K


108 #unde‡
__USE_XOPEN2KXSI


109 #unde‡
__USE_XOPEN2K8


110 #unde‡
__USE_XOPEN2K8XSI


111 #unde‡
__USE_LARGEFILE


112 #unde‡
__USE_LARGEFILE64


113 #unde‡
__USE_FILE_OFFSET64


114 #unde‡
__USE_BSD


115 #unde‡
__USE_SVID


116 #unde‡
__USE_MISC


117 #unde‡
__USE_ATFILE


118 #unde‡
__USE_GNU


119 #unde‡
__USE_REENTRANT


120 #unde‡
__USE_FORTIFY_LEVEL


121 #unde‡
__FAVOR_BSD


122 #unde‡
__KERNEL_STRICT_NAMES


126 #i‚de‡
_LOOSE_KERNEL_NAMES


127 
	#__KERNEL_STRICT_NAMES


	)

131 
	#__USE_ANSI
 1

	)

140 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


141 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

142 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

144 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

149 #i‡
deföed
 
_BSD_SOURCE
 && \

150 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

151 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

152 
	#__FAVOR_BSD
 1

	)

156 #ifde‡
_GNU_SOURCE


157 #unde‡
_ISOC95_SOURCE


158 
	#_ISOC95_SOURCE
 1

	)

159 #unde‡
_ISOC99_SOURCE


160 
	#_ISOC99_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_BSD_SOURCE


172 
	#_BSD_SOURCE
 1

	)

173 #unde‡
_SVID_SOURCE


174 
	#_SVID_SOURCE
 1

	)

175 #unde‡
_ATFILE_SOURCE


176 
	#_ATFILE_SOURCE
 1

	)

181 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

182 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

183 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

184 
	#_BSD_SOURCE
 1

	)

185 
	#_SVID_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

194 
	#__USE_ISOC99
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

200 
	#__USE_ISOC95
 1

	)

205 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

206 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

207 
	#_POSIX_SOURCE
 1

	)

208 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

209 
	#_POSIX_C_SOURCE
 2

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

211 
	#_POSIX_C_SOURCE
 199506L

	)

212 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

213 
	#_POSIX_C_SOURCE
 200112L

	)

215 
	#_POSIX_C_SOURCE
 200809L

	)

217 
	#__USE_POSIX_IMPLICITLY
 1

	)

220 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


221 
	#__USE_POSIX
 1

	)

224 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


225 
	#__USE_POSIX2
 1

	)

228 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

229 
	#__USE_POSIX199309
 1

	)

232 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

233 
	#__USE_POSIX199506
 1

	)

236 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC95


239 
	#__USE_ISOC95
 1

	)

240 #unde‡
__USE_ISOC99


241 
	#__USE_ISOC99
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

245 
	#__USE_XOPEN2K8
 1

	)

246 #unde‡
_ATFILE_SOURCE


247 
	#_ATFILE_SOURCE
 1

	)

250 #ifdef 
_XOPEN_SOURCE


251 
	#__USE_XOPEN
 1

	)

252 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

253 
	#__USE_XOPEN_EXTENDED
 1

	)

254 
	#__USE_UNIX98
 1

	)

255 #unde‡
_LARGEFILE_SOURCE


256 
	#_LARGEFILE_SOURCE
 1

	)

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

258 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

259 
	#__USE_XOPEN2K8
 1

	)

260 
	#__USE_XOPEN2K8XSI
 1

	)

262 
	#__USE_XOPEN2K
 1

	)

263 
	#__USE_XOPEN2KXSI
 1

	)

264 #unde‡
__USE_ISOC95


265 
	#__USE_ISOC95
 1

	)

266 #unde‡
__USE_ISOC99


267 
	#__USE_ISOC99
 1

	)

270 #ifde‡
_XOPEN_SOURCE_EXTENDED


271 
	#__USE_XOPEN_EXTENDED
 1

	)

276 #ifde‡
_LARGEFILE_SOURCE


277 
	#__USE_LARGEFILE
 1

	)

280 #ifde‡
_LARGEFILE64_SOURCE


281 
	#__USE_LARGEFILE64
 1

	)

284 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

285 
	#__USE_FILE_OFFSET64
 1

	)

288 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


289 
	#__USE_MISC
 1

	)

292 #ifdef 
_BSD_SOURCE


293 
	#__USE_BSD
 1

	)

296 #ifdef 
_SVID_SOURCE


297 
	#__USE_SVID
 1

	)

300 #ifdef 
_ATFILE_SOURCE


301 
	#__USE_ATFILE
 1

	)

304 #ifdef 
_GNU_SOURCE


305 
	#__USE_GNU
 1

	)

308 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


309 
	#__USE_REENTRANT
 1

	)

312 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

313 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

314 #i‡
_FORTIFY_SOURCE
 > 1

315 
	#__USE_FORTIFY_LEVEL
 2

	)

317 
	#__USE_FORTIFY_LEVEL
 1

	)

320 
	#__USE_FORTIFY_LEVEL
 0

	)

324 
	~<bôs/¥edefs.h
>

327 
	#__STDC_ISO_10646__
 200009L

	)

335 #unde‡
__GNU_LIBRARY__


336 
	#__GNU_LIBRARY__
 6

	)

340 
	#__GLIBC__
 2

	)

341 
	#__GLIBC_MINOR__
 15

	)

343 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

344 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

347 #i‡
deföed
 
__GNUC__
 \

348 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

349 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

350 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

351 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

355 #i‚de‡
__ASSEMBLER__


356 #i‚de‡
_SYS_CDEFS_H


357 
	~<sys/cdefs.h
>

362 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


363 
	#__USE_LARGEFILE
 1

	)

364 
	#__USE_LARGEFILE64
 1

	)

370 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

371 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

372 && 
deföed
 
	g__exã∫_ölöe


373 
	#__USE_EXTERN_INLINES
 1

	)

378 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

379 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

380 && 
deföed
 
	g__exã∫_ölöe


381 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

389 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

148 
	#_IO_FLAGS2_NOCLOSE
 32

	)

149 
	#_IO_FLAGS2_CLOEXEC
 64

	)

153 
	#_IO_SKIPWS
 01

	)

154 
	#_IO_LEFT
 02

	)

155 
	#_IO_RIGHT
 04

	)

156 
	#_IO_INTERNAL
 010

	)

157 
	#_IO_DEC
 020

	)

158 
	#_IO_OCT
 040

	)

159 
	#_IO_HEX
 0100

	)

160 
	#_IO_SHOWBASE
 0200

	)

161 
	#_IO_SHOWPOINT
 0400

	)

162 
	#_IO_UPPERCASE
 01000

	)

163 
	#_IO_SHOWPOS
 02000

	)

164 
	#_IO_SCIENTIFIC
 04000

	)

165 
	#_IO_FIXED
 010000

	)

166 
	#_IO_UNITBUF
 020000

	)

167 
	#_IO_STDIO
 040000

	)

168 
	#_IO_DONT_CLOSE
 0100000

	)

169 
	#_IO_BOOLALPHA
 0200000

	)

172 
_IO_jump_t
; 
	g_IO_FILE
;

175 #ifde‡
_IO_MTSAFE_IO


176 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

177 
	~<bôs/°dio-lock.h
>

182 
	t_IO_lock_t
;

188 
	s_IO_m¨kî
 {

189 
_IO_m¨kî
 *
	m_√xt
;

190 
_IO_FILE
 *
	m_sbuf
;

194 
	m_pos
;

196 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

197 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

198 
	mpublic
:

199 
°ªamm¨kî
(
°ªambuf
 *
sb
);

200 ~
°ªamm¨kî
();

201 
ßvög
(Ë{  
	m_•os
 == -2; }

202 
dñè
(
°ªamm¨kî
&);

203 
dñè
();

208 
	e__codecvt_ªsu…


210 
	m__codecvt_ok
,

211 
	m__codecvt_∑πül
,

212 
	m__codecvt_îr‹
,

213 
	m__codecvt_noc⁄v


216 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


219 
	s_IO_codecvt


221 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

222 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *,

224 c⁄° 
	mwch¨_t
 *,

225 c⁄° 
	mwch¨_t
 *,

226 c⁄° 
	mwch¨_t
 **, *,

228 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

229 
	m__mb°©e_t
 *, *,

231 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

232 
	m__mb°©e_t
 *,

234 c⁄° **, 
	mwch¨_t
 *,

235 
	mwch¨_t
 *, wchar_t **);

236 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

237 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

238 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

239 c⁄° *, c⁄° *, 
	m_IO_size_t
);

240 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

242 
_IO_ic⁄v_t
 
	m__cd_ö
;

243 
_IO_ic⁄v_t
 
	m__cd_out
;

247 
	s_IO_wide_d©a


249 
wch¨_t
 *
	m_IO_ªad_±r
;

250 
wch¨_t
 *
	m_IO_ªad_íd
;

251 
wch¨_t
 *
	m_IO_ªad_ba£
;

252 
wch¨_t
 *
	m_IO_wrôe_ba£
;

253 
wch¨_t
 *
	m_IO_wrôe_±r
;

254 
wch¨_t
 *
	m_IO_wrôe_íd
;

255 
wch¨_t
 *
	m_IO_buf_ba£
;

256 
wch¨_t
 *
	m_IO_buf_íd
;

258 
wch¨_t
 *
	m_IO_ßve_ba£
;

259 
wch¨_t
 *
	m_IO_backup_ba£
;

261 
wch¨_t
 *
	m_IO_ßve_íd
;

263 
__mb°©e_t
 
	m_IO_°©e
;

264 
__mb°©e_t
 
	m_IO_œ°_°©e
;

265 
_IO_codecvt
 
	m_codecvt
;

267 
wch¨_t
 
	m_sh‹tbuf
[1];

269 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

273 
	s_IO_FILE
 {

274 
	m_Êags
;

275 
	#_IO_fûe_Êags
 
_Êags


	)

279 * 
	m_IO_ªad_±r
;

280 * 
	m_IO_ªad_íd
;

281 * 
	m_IO_ªad_ba£
;

282 * 
	m_IO_wrôe_ba£
;

283 * 
	m_IO_wrôe_±r
;

284 * 
	m_IO_wrôe_íd
;

285 * 
	m_IO_buf_ba£
;

286 * 
	m_IO_buf_íd
;

288 *
	m_IO_ßve_ba£
;

289 *
	m_IO_backup_ba£
;

290 *
	m_IO_ßve_íd
;

292 
_IO_m¨kî
 *
	m_m¨kîs
;

294 
_IO_FILE
 *
	m_chaö
;

296 
	m_fûío
;

298 
	m_blksize
;

300 
	m_Êags2
;

302 
_IO_off_t
 
	m_ﬁd_off£t
;

304 
	#__HAVE_COLUMN


	)

306 
	m_cur_cﬁumn
;

307 sig√d 
	m_vèbÀ_off£t
;

308 
	m_sh‹tbuf
[1];

312 
_IO_lock_t
 *
	m_lock
;

313 #ifde‡
_IO_USE_OLD_IO_FILE


316 
	s_IO_FILE_com∂ëe


318 
_IO_FILE
 
	m_fûe
;

320 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

321 
_IO_off64_t
 
	m_off£t
;

322 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


324 
_IO_codecvt
 *
	m_codecvt
;

325 
_IO_wide_d©a
 *
	m_wide_d©a
;

326 
_IO_FILE
 *
	m_‰ìªs_li°
;

327 *
	m_‰ìªs_buf
;

328 
size_t
 
	m_‰ìªs_size
;

330 *
	m__∑d1
;

331 *
	m__∑d2
;

332 *
	m__∑d3
;

333 *
	m__∑d4
;

334 
size_t
 
	m__∑d5
;

336 
	m_mode
;

338 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

342 #i‚de‡
__˝lu•lus


343 
_IO_FILE
 
	t_IO_FILE
;

346 
	g_IO_FILE_∂us
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

349 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

350 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

351 #i‚de‡
_LIBC


352 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

353 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

354 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

356 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

357 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

358 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

366 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

374 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

375 
	tsize_t
 
	t__n
);

383 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

386 
	t__io_˛o£_‚
 (*
	t__cookõ
);

389 #ifde‡
_GNU_SOURCE


391 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

392 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

393 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

394 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

399 
__io_ªad_‚
 *
	mªad
;

400 
__io_wrôe_‚
 *
	mwrôe
;

401 
__io_£ek_‚
 *
	m£ek
;

402 
__io_˛o£_‚
 *
	m˛o£
;

403 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

404 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

406 
	g_IO_cookõ_fûe
;

409 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

410 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

414 #ifde‡
__˝lu•lus


418 
__undîÊow
 (
_IO_FILE
 *);

419 
__uÊow
 (
_IO_FILE
 *);

420 
__ovîÊow
 (
_IO_FILE
 *, );

421 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


422 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

423 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

424 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

427 #i‡ 
__GNUC__
 >= 3

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

430 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

433 
	#_IO_gëc_u∆ocked
(
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

435 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

436 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

437 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

438 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

439 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

440 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

441 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

442 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

443 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

445 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


446 
	#_IO_gëwc_u∆ocked
(
_Â
) \

447 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

448 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

449 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

450 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

451 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

452 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

453 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

454 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

455 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

456 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

459 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

460 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

462 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

463 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

464 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

467 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

470 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

471 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

473 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

474 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

477 #ifde‡
_IO_MTSAFE_IO


478 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

479 
	#_IO_Êockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

481 
	#_IO_fu∆ockfûe
(
_Â
) \

482 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

484 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

485 
	#_IO_Êockfûe
(
_Â
Ë

	)

486 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

487 
	#_IO_·rylockfûe
(
_Â
Ë

	)

488 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

489 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

492 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

493 
_IO_va_li°
, *
__ª°ri˘
);

494 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

495 
_IO_va_li°
);

496 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

497 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

499 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

500 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

502 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

504 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


505 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

506 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

507 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

508 #i‡
__GNUC__
 >= 2

511 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


512 
	~<shlib-com∑t.h
>

513 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

514 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

515 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

516 c⁄° 
_IO_°dö_u£d
;

517 
wók_exã∫
 (
_IO_°dö_u£d
);

520 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


521 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

525 
	#_IO_fwide
(
__Â
, 
__mode
) \

526 ({ 
__ªsu…
 = (
__mode
); \

527 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

529 i‡((
__Â
)->
_mode
 == 0) \

531 (
__Â
)->
_mode
 = -1; \

532 
__ªsu…
 = (
__Â
)->
_mode
; \

534 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

535 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

537 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

538 
__ªsu…
; })

	)

541 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

542 
_IO_va_li°
, *
__ª°ri˘
);

543 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

544 
_IO_va_li°
);

545 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

546 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

549 #ifde‡
__LDBL_COMPAT


550 
	~<bôs/libio-ldbl.h
>

553 #ifde‡
__˝lu•lus


	@/usr/include/linux/blk_types.h

5 #i‚de‡
__LINUX_BLK_TYPES_H


6 
	#__LINUX_BLK_TYPES_H


	)

8 #ifde‡
CONFIG_BLOCK


10 
	~<löux/ty≥s.h
>

12 
	gbio_£t
;

13 
	gbio
;

14 
	gbio_öãgrôy_∑ylﬂd
;

15 
	g∑ge
;

16 
	gblock_devi˚
;

17 (
	tbio_íd_io_t
Ë(
	tbio
 *, );

18 (
	tbio_de°ru˘‹_t
Ë(
	tbio
 *);

23 
	sbio_vec
 {

24 
∑ge
 *
bv_∑ge
;

25 
bv_Àn
;

26 
bv_off£t
;

33 
	sbio
 {

34 
£˘‹_t
 
bi_£˘‹
;

36 
bio
 *
bi_√xt
;

37 
block_devi˚
 *
bi_bdev
;

38 
bi_Êags
;

39 
bi_rw
;

43 
bi_v˙t
;

44 
bi_idx
;

49 
bi_phys_£gmíts
;

51 
bi_size
;

57 
bi_£g_‰⁄t_size
;

58 
bi_£g_back_size
;

60 
bi_max_vecs
;

62 
©omic_t
 
bi_˙t
;

64 
bio_vec
 *
bi_io_vec
;

66 
bio_íd_io_t
 *
bi_íd_io
;

68 *
bi_¥iv©e
;

69 #i‡
	`deföed
(
CONFIG_BLK_DEV_INTEGRITY
)

70 
bio_öãgrôy_∑ylﬂd
 *
bi_öãgrôy
;

73 
bio_de°ru˘‹_t
 *
bi_de°ru˘‹
;

80 
bio_vec
 
bi_ölöe_vecs
[0];

86 
	#BIO_UPTODATE
 0

	)

87 
	#BIO_RW_BLOCK
 1

	)

88 
	#BIO_EOF
 2

	)

89 
	#BIO_SEG_VALID
 3

	)

90 
	#BIO_CLONED
 4

	)

91 
	#BIO_BOUNCED
 5

	)

92 
	#BIO_USER_MAPPED
 6

	)

93 
	#BIO_EOPNOTSUPP
 7

	)

94 
	#BIO_NULL_MAPPED
 8

	)

95 
	#BIO_FS_INTEGRITY
 9

	)

96 
	#BIO_QUIET
 10

	)

97 
	#BIO_MAPPED_INTEGRITY
 11

	)

98 
	#bio_Êagged
(
bio
, 
Êag
Ë((bio)->
bi_Êags
 & (1 << (Êag)))

	)

103 
	#BIO_POOL_BITS
 (4)

	)

104 
	#BIO_POOL_NONE
 ((1UL << 
BIO_POOL_BITS
Ë- 1)

	)

105 
	#BIO_POOL_OFFSET
 (
BITS_PER_LONG
 - 
BIO_POOL_BITS
)

	)

106 
	#BIO_POOL_MASK
 (1UL << 
BIO_POOL_OFFSET
)

	)

107 
	#BIO_POOL_IDX
(
bio
Ë((bio)->
bi_Êags
 >> 
BIO_POOL_OFFSET
)

	)

115 
	erq_Êag_bôs
 {

117 
__REQ_WRITE
,

118 
__REQ_FAILFAST_DEV
,

119 
__REQ_FAILFAST_TRANSPORT
,

120 
__REQ_FAILFAST_DRIVER
,

122 
__REQ_SYNC
,

123 
__REQ_META
,

124 
__REQ_PRIO
,

125 
__REQ_DISCARD
,

126 
__REQ_SECURE
,

128 
__REQ_NOIDLE
,

129 
__REQ_FUA
,

130 
__REQ_FLUSH
,

133 
__REQ_RAHEAD
,

134 
__REQ_THROTTLED
,

138 
__REQ_SORTED
,

139 
__REQ_SOFTBARRIER
,

140 
__REQ_NOMERGE
,

141 
__REQ_STARTED
,

142 
__REQ_DONTPREP
,

143 
__REQ_QUEUED
,

144 
__REQ_ELVPRIV
,

145 
__REQ_FAILED
,

146 
__REQ_QUIET
,

147 
__REQ_PREEMPT
,

148 
__REQ_ALLOCED
,

149 
__REQ_COPY_USER
,

150 
__REQ_FLUSH_SEQ
,

151 
__REQ_IO_STAT
,

152 
__REQ_MIXED_MERGE
,

153 
__REQ_NR_BITS
,

156 
	#REQ_WRITE
 (1 << 
__REQ_WRITE
)

	)

157 
	#REQ_FAILFAST_DEV
 (1 << 
__REQ_FAILFAST_DEV
)

	)

158 
	#REQ_FAILFAST_TRANSPORT
 (1 << 
__REQ_FAILFAST_TRANSPORT
)

	)

159 
	#REQ_FAILFAST_DRIVER
 (1 << 
__REQ_FAILFAST_DRIVER
)

	)

160 
	#REQ_SYNC
 (1 << 
__REQ_SYNC
)

	)

161 
	#REQ_META
 (1 << 
__REQ_META
)

	)

162 
	#REQ_PRIO
 (1 << 
__REQ_PRIO
)

	)

163 
	#REQ_DISCARD
 (1 << 
__REQ_DISCARD
)

	)

164 
	#REQ_NOIDLE
 (1 << 
__REQ_NOIDLE
)

	)

166 
	#REQ_FAILFAST_MASK
 \

167 (
REQ_FAILFAST_DEV
 | 
REQ_FAILFAST_TRANSPORT
 | 
REQ_FAILFAST_DRIVER
)

	)

168 
	#REQ_COMMON_MASK
 \

169 (
REQ_WRITE
 | 
REQ_FAILFAST_MASK
 | 
REQ_SYNC
 | 
REQ_META
 | 
REQ_PRIO
 | \

170 
REQ_DISCARD
 | 
REQ_NOIDLE
 | 
REQ_FLUSH
 | 
REQ_FUA
 | 
REQ_SECURE
)

	)

171 
	#REQ_CLONE_MASK
 
REQ_COMMON_MASK


	)

173 
	#REQ_RAHEAD
 (1 << 
__REQ_RAHEAD
)

	)

174 
	#REQ_THROTTLED
 (1 << 
__REQ_THROTTLED
)

	)

176 
	#REQ_SORTED
 (1 << 
__REQ_SORTED
)

	)

177 
	#REQ_SOFTBARRIER
 (1 << 
__REQ_SOFTBARRIER
)

	)

178 
	#REQ_FUA
 (1 << 
__REQ_FUA
)

	)

179 
	#REQ_NOMERGE
 (1 << 
__REQ_NOMERGE
)

	)

180 
	#REQ_STARTED
 (1 << 
__REQ_STARTED
)

	)

181 
	#REQ_DONTPREP
 (1 << 
__REQ_DONTPREP
)

	)

182 
	#REQ_QUEUED
 (1 << 
__REQ_QUEUED
)

	)

183 
	#REQ_ELVPRIV
 (1 << 
__REQ_ELVPRIV
)

	)

184 
	#REQ_FAILED
 (1 << 
__REQ_FAILED
)

	)

185 
	#REQ_QUIET
 (1 << 
__REQ_QUIET
)

	)

186 
	#REQ_PREEMPT
 (1 << 
__REQ_PREEMPT
)

	)

187 
	#REQ_ALLOCED
 (1 << 
__REQ_ALLOCED
)

	)

188 
	#REQ_COPY_USER
 (1 << 
__REQ_COPY_USER
)

	)

189 
	#REQ_FLUSH
 (1 << 
__REQ_FLUSH
)

	)

190 
	#REQ_FLUSH_SEQ
 (1 << 
__REQ_FLUSH_SEQ
)

	)

191 
	#REQ_IO_STAT
 (1 << 
__REQ_IO_STAT
)

	)

192 
	#REQ_MIXED_MERGE
 (1 << 
__REQ_MIXED_MERGE
)

	)

193 
	#REQ_SECURE
 (1 << 
__REQ_SECURE
)

	)

	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

46 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

48 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__NFDBITS


22 
	#__NFDBITS
 (8 * ())

	)

24 #unde‡
__FD_SETSIZE


25 
	#__FD_SETSIZE
 1024

	)

27 #unde‡
__FDSET_LONGS


28 
	#__FDSET_LONGS
 (
__FD_SETSIZE
/
__NFDBITS
)

	)

30 #unde‡
__FDELT


31 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

33 #unde‡
__FDMASK


34 
	#__FDMASK
(
d
Ë(1UL << ((dË% 
__NFDBITS
))

	)

37 
	mfds_bôs
 [
__FDSET_LONGS
];

38 } 
	t__kî√l_fd_£t
;

41 (*
	t__kî√l_sigh™dÀr_t
)();

44 
	t__kî√l_key_t
;

45 
	t__kî√l_mqd_t
;

47 
	~<asm/posix_ty≥s.h
>

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

60 
	m__GCONV_SWAP
 = 0x0004

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

68 
	g__gc⁄v_å™s_d©a
;

72 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 
	t__c⁄°
 **, __const *,

74 **, 
	tsize_t
 *, , );

77 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

80 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

81 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

85 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

86 
	t__gc⁄v_°ï_d©a
 *, *,

87 
	t__c⁄°
 *,

88 
	t__c⁄°
 **,

89 
	t__c⁄°
 *, **,

90 
	tsize_t
 *);

93 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

94 
	t__c⁄°
 *,

98 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

99 
	tsize_t
 *);

102 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

103 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

105 
	s__gc⁄v_å™s_d©a


108 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

109 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

110 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

111 *
__d©a
;

112 
__gc⁄v_å™s_d©a
 *
__√xt
;

117 
	s__gc⁄v_°ï


119 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

120 
__c⁄°
 *
__mod«me
;

122 
__cou¡î
;

124 *
__‰om_«me
;

125 *
__to_«me
;

127 
__gc⁄v_f˘
 
__f˘
;

128 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

129 
__gc⁄v_öô_f˘
 
__öô_f˘
;

130 
__gc⁄v_íd_f˘
 
__íd_f˘
;

134 
__mö_√eded_‰om
;

135 
__max_√eded_‰om
;

136 
__mö_√eded_to
;

137 
__max_√eded_to
;

140 
__°©eful
;

142 *
__d©a
;

147 
	s__gc⁄v_°ï_d©a


149 *
__outbuf
;

150 *
__outbu„nd
;

154 
__Êags
;

158 
__övoˇti⁄_cou¡î
;

162 
__öã∫Æ_u£
;

164 
__mb°©e_t
 *
__°©ï
;

165 
__mb°©e_t
 
__°©e
;

169 
__gc⁄v_å™s_d©a
 *
__å™s
;

174 
	s__gc⁄v_öfo


176 
size_t
 
__n°ïs
;

177 
__gc⁄v_°ï
 *
__°ïs
;

178 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

179 } *
	t__gc⁄v_t
;

	@/usr/include/linux/stddef.h

1 #i‚de‡
_LINUX_STDDEF_H


2 
	#_LINUX_STDDEF_H


	)

6 #unde‡
NULL


7 #i‡
deföed
(
__˝lu•lus
)

8 
	#NULL
 0

	)

10 
	#NULL
 ((*)0)

	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

323 
__THROW
 
__©åibuã_puª__
;

326 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

331 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

332 
__THROW
;

335 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

336 
__END_NAMESPACE_STD


338 #ifde‡
__USE_GNU


341 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

342 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

343 
__THROW
;

347 
__BEGIN_NAMESPACE_STD


350 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

354 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

358 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

362 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

363 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

364 
mb°©e_t
 *
__p
Ë
__THROW
;

367 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

368 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

371 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

372 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

373 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

375 
__END_NAMESPACE_STD


377 #ifde‡
__USE_EXTERN_INLINES


383 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

384 
__exã∫_ölöe
 
wöt_t


385 
	`__NTH
 (
	$btowc
 (
__c
))

386 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

387 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

389 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

390 
__exã∫_ölöe
 

391 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

393 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

395 
__exã∫_ölöe
 
size_t


396 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

397 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

398 {  (
__ps
 !
NULL


399 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

402 
__BEGIN_NAMESPACE_STD


405 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

406 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

407 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

411 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

412 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
__END_NAMESPACE_STD


417 #ifdef 
__USE_XOPEN2K8


420 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

421 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

422 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

426 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

427 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

428 
size_t
 
__nwc
, size_à
__Àn
,

429 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

434 #ifde‡
__USE_XOPEN


436 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

440 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

444 
__BEGIN_NAMESPACE_STD


447 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

449 
__END_NAMESPACE_STD


451 #ifde‡
__USE_ISOC99


452 
__BEGIN_NAMESPACE_C99


454 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

456 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

457 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

458 
__END_NAMESPACE_C99


462 
__BEGIN_NAMESPACE_STD


465 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

466 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

470 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

471 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

472 
__THROW
;

473 
__END_NAMESPACE_STD


475 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

476 
__BEGIN_NAMESPACE_C99


479 
__exãnsi⁄__


480 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

481 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

482 
__THROW
;

486 
__exãnsi⁄__


487 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

489 
__ba£
Ë
__THROW
;

490 
__END_NAMESPACE_C99


493 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


496 
__exãnsi⁄__


497 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

498 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

499 
__THROW
;

503 
__exãnsi⁄__


504 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__ba£
Ë
__THROW
;

509 #ifde‡
__USE_GNU


523 
	~<xloˇÀ.h
>

527 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

528 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

529 
__loˇÀ_t
 
__loc
Ë
__THROW
;

531 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

532 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

533 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

535 
__exãnsi⁄__


536 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

537 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

538 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

540 
__exãnsi⁄__


541 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

542 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

543 
__ba£
, 
__loˇÀ_t
 
__loc
)

544 
__THROW
;

546 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

548 
__THROW
;

550 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

551 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

552 
__THROW
;

554 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

555 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

556 
__loˇÀ_t
 
__loc
Ë
__THROW
;

560 #ifde‡
__USE_XOPEN2K8


563 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

564 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

569 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

570 
__THROW
;

577 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

580 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


581 
__BEGIN_NAMESPACE_STD


584 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

591 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

592 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

598 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

602 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

603 
__THROW
 ;

609 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

610 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

611 
__gnuc_va_li°
 
__¨g
)

617 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

618 
__gnuc_va_li°
 
__¨g
)

622 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

623 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

625 
__THROW
 ;

632 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

633 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

639 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

643 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

644 
__THROW
 ;

646 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

647 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

648 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

649 #ifde‡
__REDIRECT


653 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

654 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

655 
__isoc99_fwsˇnf
)

657 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_wsˇnf
)

660 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

661 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 ...), 
__isoc99_swsˇnf
)

665 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

666 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

667 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

669 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

670 
__THROW
;

671 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

672 
	#wsˇnf
 
__isoc99_wsˇnf


	)

673 
	#swsˇnf
 
__isoc99_swsˇnf


	)

677 
__END_NAMESPACE_STD


680 #ifde‡
__USE_ISOC99


681 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 #i‡!
deföed
 
__USE_GNU
 \

704 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

705 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

708 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

709 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

711 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

714 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

715 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

716 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

719 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

720 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

721 
__gnuc_va_li°
 
__¨g
);

722 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

723 
__gnuc_va_li°
 
__¨g
);

724 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

725 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

727 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

728 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

729 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

733 
__END_NAMESPACE_C99


737 
__BEGIN_NAMESPACE_STD


742 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

743 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨
 ();

756 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

757 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

771 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

772 
__FILE
 *
__ª°ri˘
 
__°ªam
);

778 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

779 
__FILE
 *
__ª°ri˘
 
__°ªam
);

786 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

787 
__END_NAMESPACE_STD


790 #ifde‡
__USE_GNU


798 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

799 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

807 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

815 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

824 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

834 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

835 
__FILE
 *
__ª°ri˘
 
__°ªam
);

843 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

844 
__FILE
 *
__ª°ri˘
 
__°ªam
);

848 
__BEGIN_NAMESPACE_C99


852 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

853 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

854 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

855 
__END_NAMESPACE_C99


857 #ifde‡
__USE_GNU


858 
	~<xloˇÀ.h
>

862 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

863 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

864 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

865 
__loˇÀ_t
 
__loc
Ë
__THROW
;

874 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


875 
	#__√ed_iswxxx


	)

876 
	~<w˘y≥.h
>

880 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


881 
	~<bôs/wch¨2.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/wch¨-ldbl.h
>

888 
__END_DECLS


896 #unde‡
__√ed_mb°©e_t


897 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@
1
.
1
/usr/include
133
2491
fs/bitmap.c
fs/block_dev.c
fs/buffer.c
fs/char_dev.c
fs/exec.c
fs/fcntl.c
fs/file_dev.c
fs/file_table.c
fs/inode.c
fs/ioctl.c
fs/namei.c
fs/open.c
fs/pipe.c
fs/read_write.c
fs/select.c
fs/stat.c
fs/super.c
fs/truncate.c
include/a.out.h
include/asm/io.h
include/asm/memory.h
include/asm/segment.h
include/asm/system.h
include/const.h
include/ctype.h
include/errno.h
include/fcntl.h
include/linux/config.h
include/linux/fdreg.h
include/linux/fs.h
include/linux/hdreg.h
include/linux/head.h
include/linux/kernel.h
include/linux/math_emu.h
include/linux/mm.h
include/linux/sched.h
include/linux/sys.h
include/linux/tty.h
include/signal.h
include/stdarg.h
include/stddef.h
include/string.h
include/sys/param.h
include/sys/resource.h
include/sys/stat.h
include/sys/time.h
include/sys/times.h
include/sys/types.h
include/sys/utsname.h
include/sys/wait.h
include/termios.h
include/time.h
include/unistd.h
include/utime.h
init/main.c
kernel/blk_drv/blk.h
kernel/blk_drv/floppy.c
kernel/blk_drv/hd.c
kernel/blk_drv/ll_rw_blk.c
kernel/blk_drv/ramdisk.c
kernel/chr_drv/console.c
kernel/chr_drv/pty.c
kernel/chr_drv/serial.c
kernel/chr_drv/tty_io.c
kernel/chr_drv/tty_ioctl.c
kernel/exit.c
kernel/fork.c
kernel/math/add.c
kernel/math/compare.c
kernel/math/convert.c
kernel/math/div.c
kernel/math/ea.c
kernel/math/error.c
kernel/math/get_put.c
kernel/math/math_emulate.c
kernel/math/mul.c
kernel/mktime.c
kernel/panic.c
kernel/printk.c
kernel/sched.c
kernel/signal.c
kernel/sys.c
kernel/traps.c
kernel/vsprintf.c
lib/_exit.c
lib/close.c
lib/ctype.c
lib/dup.c
lib/errno.c
lib/execve.c
lib/malloc.c
lib/open.c
lib/setsid.c
lib/string.c
lib/wait.c
lib/write.c
mm/memory.c
mm/swap.c
tools/build.c
/usr/include/a.out.h
/usr/include/ctype.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/linux/fdreg.h
/usr/include/linux/fs.h
/usr/include/linux/hdreg.h
/usr/include/linux/kernel.h
/usr/include/linux/sched.h
/usr/include/linux/tty.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/termios.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/utime.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/linux/blk_types.h
/usr/include/linux/ioctl.h
/usr/include/linux/limits.h
/usr/include/linux/types.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/linux/posix_types.h
/usr/include/gconv.h
/usr/include/linux/stddef.h
/usr/include/wchar.h
/usr/include/wctype.h
